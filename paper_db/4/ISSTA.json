[
    {
        "year": "2021",
        "name": "30th ISSTA 2021",
        "info": "Virtual Event, Denmark",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2021",
                "sub_name": "ISSTA '21: 30th ACM SIGSOFT International Symposium on Software Testing and Analysis, Virtual Event, Denmark, July 11-17, 2021.",
                "count": 59,
                "papers": [
                    "Automated debugging: past, present, and future (ISSTA impact paper award).",
                    "Identifying privacy weaknesses from multi-party trigger-action integration platforms.",
                    "WebEvo: taming web application evolution via detecting semantic structure changes.",
                    "Modular call graph construction for security scanning of Node.js applications.",
                    "Attack as defense: characterizing adversarial examples using robustness.",
                    "Exposing previously undetectable faults in deep neural networks.",
                    "DeepCrime: mutation testing of deep learning systems based on real faults.",
                    "DeepHyperion: exploring the feature space of deep learning-based systems through illumination search.",
                    "Automatic test suite generation for key-points detection DNNs using many-objective search (experience paper).",
                    "Efficient white-box fairness testing through gradient search.",
                    "DialTest: automated testing for recurrent-neural-network-driven dialogue systems.",
                    "AdvDoor: adversarial backdoor attack of deep learning system.",
                    "ModelDiff: testing-based DNN similarity comparison for model reuse detection.",
                    "Parema: an unpacking framework for demystifying VM-based Android packers.",
                    "An infrastructure approach to improving effectiveness of Android UI testing tools.",
                    "Semantic matching of GUI events for test reuse: are we there yet?",
                    "GUIDER: GUI structure and vision co-guided test script repair for Android apps.",
                    "Understanding and finding system setting-related defects in Android apps.",
                    "HomDroid: detecting Android covert malware by social-network homophily analysis.",
                    "Seed selection for successful fuzzing.",
                    "Gramatron: effective grammar-aware fuzzing.",
                    "QFuzz: quantitative fuzzing for side channels.",
                    "SAND: a static analysis approach for detecting SQL antipatterns.",
                    "Semantic table structure identification in spreadsheets.",
                    "Runtime detection of memory errors with smart status.",
                    "UAFSan: an object-identifier-based dynamic approach for detecting use-after-free vulnerabilities.",
                    "Fuzzing SMT solvers via two-dimensional input space exploration.",
                    "Boosting symbolic execution via constraint solving time prediction (experience paper).",
                    "Synthesize solving strategy for symbolic execution.",
                    "Type and interval aware array constraint solving for symbolic execution.",
                    "Grammar-agnostic symbolic execution by token symbolization.",
                    "Interval constraint-based mutation testing of numerical specifications.",
                    "Predoo: precision testing of deep learning operators.",
                    "TERA: optimizing stochastic regression tests in machine learning projects.",
                    "Deep just-in-time defect prediction: how far are we?",
                    "Fixing dependency errors for Python build reproducibility.",
                    "Test-case prioritization for configuration testing.",
                    "The impact of tool configuration spaces on the evaluation of configurable taint analysis for Android.",
                    "Challenges and opportunities: an in-depth empirical study on configuration error injection testing.",
                    "Empirically evaluating readily available information for regression test optimization in continuous integration.",
                    "Toward optimal mc/dc test case generation.",
                    "Log-based slicing for system-level test cases.",
                    "Model-based testing of networked applications.",
                    "Validating static warnings via testing code fragments.",
                    "Continuous test suite failure prediction.",
                    "Empirical evaluation of smart contract testing: what is the best choice?",
                    "iDEV: exploring and exploiting semantic deviations in ARM instruction processing.",
                    "RAProducer: efficiently diagnose and reproduce data race bugs for binaries via trace analysis.",
                    "A lightweight framework for function name reassignment based on large-scale stripped binaries.",
                    "Finding data compatibility bugs with JSON subschema checking.",
                    "Automated patch backporting in Linux (experience paper).",
                    "Faster, deeper, easier: crowdsourcing diagnosis of microservice kernel failure from user space.",
                    "echidna-parade: a tool for diverse multicore smart contract fuzzing.",
                    "ProFuzzBench: a benchmark for stateful protocol fuzzing.",
                    "SCStudio: a secure and efficient integrated development environment for smart contracts.",
                    "C4: the C compiler concurrency checker.",
                    "TauMed: test augmentation of deep learning in medical diagnosis.",
                    "MoScan: a model-based vulnerability scanner for web single sign-on services.",
                    "RESTest: automated black-box testing of RESTful web APIs."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2021aista",
                "sub_name": "AISTA 2021: Proceedings of the 1st ACM International Workshop on AI and Software Testing/Analysis, Virtual Event, Denmark, 12 July 2021.",
                "count": 4,
                "papers": [
                    "On the use of evolutionary algorithms for test case prioritization in regression testing considering requirements dependencies.",
                    "Impact of programming languages on machine learning bugs.",
                    "NerdBug: automated bug detection in neural networks.",
                    "Automated cell header generator for Jupyter notebooks."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2021vortex",
                "sub_name": "VORTEX 2021: Proceedings of the 5th ACM International Workshop on Verification and mOnitoring at Runtime EXecution, Virtual Event, Denmark, 12 July 2021.",
                "count": 9,
                "papers": [
                    "Increasing confidence in autonomous systems.",
                    "Synchronous and asynchronous stream runtime verification.",
                    "The e-ACSL perspective on runtime assertion checking.",
                    "RM for users' safety and security in the built environment.",
                    "Test'n'Mo: a collaborative platform for human testers and intelligent monitoring agents.",
                    "RVPLAN: a general purpose framework for replanning using runtime verification.",
                    "Towards aggregate monitoring of spatio-temporal properties.",
                    "Runtime verification for trustworthy secure shell deployment.",
                    "Optional monitoring for long-lived transactions."
                ]
            }
        ]
    },
    {
        "year": "2020",
        "name": "29th ISSTA 2020",
        "info": "Virtual Event, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2020",
                "sub_name": "ISSTA '20: 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, Virtual Event, USA, July 18-22, 2020.",
                "count": 55,
                "papers": [
                    "WEIZZ: automatic grey-box fuzzing for structured binary formats.",
                    "Active fuzzing for testing and securing cyber-physical systems.",
                    "Learning input tokens for effective fuzzing.",
                    "Fast bit-vector satisfiability.",
                    "Relocatable addressing model for symbolic execution.",
                    "Running symbolic execution forever.",
                    "Can automated program repair refine fault localization? a unified debugging approach.",
                    "Automated repair of feature interaction failures in automated driving systems.",
                    "CoCoNuT: combining context-aware neural translation models using ensemble for program repair.",
                    "Detecting and diagnosing energy issues for mobile applications.",
                    "Automated classification of actions in bug reports of mobile apps.",
                    "Data loss detector: automatically revealing data loss bugs in Android apps.",
                    "Reinforcement learning based curiosity-driven testing of Android applications.",
                    "Effective white-box testing of deep neural networks with adaptive neuron-selection strategy.",
                    "DeepGini: prioritizing massive tests to enhance the robustness of deep neural networks.",
                    "Detecting and understanding real-world differential performance bugs in machine learning libraries.",
                    "Higher income, larger loan? monotonicity testing of machine learning models.",
                    "Detecting flaky tests in probabilistic and machine learning applications.",
                    "Scaffle: bug localization on millions of files.",
                    "Abstracting failure-inducing inputs.",
                    "Debugging the performance of Maven's test isolation: experience report.",
                    "Feedback-driven side-channel analysis for networked applications.",
                    "Scalable analysis of interaction threats in IoT systems.",
                    "DeepSQLi: deep semantic learning for testing SQL injection.",
                    "Dependent-test-aware regression testing techniques.",
                    "Differential regression testing for REST APIs.",
                    "Empirically revisiting and enhancing IR-based test-case prioritization.",
                    "Intermittently failing tests in the embedded systems domain.",
                    "Feasible and stressful trajectory generation for mobile robots.",
                    "Detecting cache-related bugs in Spark applications.",
                    "Patch based vulnerability matching for binary programs.",
                    "Identifying Java calls in native code via binary scanning.",
                    "An empirical study on ARM disassembly tools.",
                    "How effective are smart contract analysis tools? evaluating smart contract static analysis tools using bug injection.",
                    "A programming model for semi-implicit parallelization of static analyses.",
                    "Recovering fitness gradients for interprocedural Boolean flags in search-based testing.",
                    "Scalable build service system with smart scheduling service.",
                    "Escaping dependency hell: finding build dependency errors with the unified dependency graph.",
                    "How far we have come: testing decompilation correctness of C decompilers.",
                    "Discovering discrepancies in numerical libraries.",
                    "Testing high performance numerical simulation programs: experience, lessons learned, and open issues.",
                    "Functional code clone detection with syntax and semantics fusion learning.",
                    "Learning to detect table clones in spreadsheets.",
                    "ObjSim: lightweight automatic patch prioritization via object similarity.",
                    "Crowdsourced requirements generation for automatic testing via knowledge graph.",
                    "TauJud: test augmentation of machine learning in judicial documents.",
                    "EShield: protect smart contracts against reverse engineering.",
                    "Echidna: effective, usable, and fast fuzzing for smart contracts.",
                    "ProFL: a fault localization framework for Prolog.",
                    "FineLock: automatically refactoring coarse-grained locks into fine-grained locks.",
                    "CPSDebug: a tool for explanation of failures in cyber-physical systems.",
                    "Test recommendation system based on slicing coverage filtering.",
                    "Automated mobile apps testing from visual perspective.",
                    "Program-aware fuzzing for MQTT applications.",
                    "Automatic support for the identification of infeasible testing requirements."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2020tavcps",
                "sub_name": "TAV-CPS/IoT@ISSTA 2020: Proceedings of the 4th ACM SIGSOFT International Workshop on Testing, Analysis, and Verification of Cyber-Physical Systems and Internet of Things, Virtual Event, USA, July 19, 2020.",
                "count": 2,
                "papers": [
                    "ObjSim: efficient testing of cyber-physical systems.",
                    "Formal verification of discrete event model."
                ]
            }
        ]
    },
    {
        "year": "2019",
        "name": "28th ISSTA 2019",
        "info": "Beijing, China",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2019",
                "sub_name": "Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 2019, Beijing, China, July 15-19, 2019.",
                "count": 53,
                "papers": [
                    "Some challenges for software testing research (invited talk paper).",
                    "From typestate verification to interpretable deep models (invited talk abstract).",
                    "Theory and practice of string solvers (invited talk abstract).",
                    "Crash-avoiding program repair.",
                    "Practical program repair via bytecode mutation.",
                    "TBar: revisiting template-based automated program repair.",
                    "History-driven build failure fixing: how far are we?",
                    "LibID: reliable identification of obfuscated third-party Android libraries.",
                    "QADroid: regression event selection for Android applications.",
                    "Mining Android crash fixes in the absence of issue- and change-tracking systems.",
                    "Sara: self-replay augmented record and replay for Android in industrial cases.",
                    "Root causing flaky tests in a large-scale industrial setting.",
                    "Mitigating the effects of flaky tests on mutation testing.",
                    "Assessing the state and improving the art of parallel testing for C.",
                    "Failure clustering without coverage.",
                    "DeepHunter: a coverage-guided fuzz testing framework for deep neural networks.",
                    "Search-based test and improvement of machine-learning-based anomaly detection systems.",
                    "DeepFL: integrating multiple fault diagnosis dimensions for deep fault localization.",
                    "Codebase-adaptive detection of security-relevant methods.",
                    "Effective and efficient API misuse detection via exception propagation and search-based testing.",
                    "Automated API-usage update for Android apps.",
                    "A large-scale study of application incompatibilities in Android.",
                    "Deferred concretization in symbolic execution via fuzzing.",
                    "Differentially testing soundness and precision of program analyzers.",
                    "Judge: identifying, understanding, and evaluating sources of unsoundness in call graphs.",
                    "Adlib: analyzer for mobile ad platform libraries.",
                    "Interactive metamorphic testing of debuggers.",
                    "TestMig: migrating GUI test cases from iOS to Android.",
                    "Learning user interface element interactions.",
                    "Improving random GUI testing with image-based widget detection.",
                    "Automatically testing self-driving cars with search-based procedural content generation.",
                    "Semantic fuzzing with zest.",
                    "Detecting memory errors at runtime with source-level instrumentation.",
                    "Optimal context-sensitive dynamic partial order reduction with observers.",
                    "Exploiting the laws of order in smart contracts.",
                    "Go-clone: graph-embedding based clone detector for Golang.",
                    "VFQL: combinational static analysis as query language.",
                    "VBSAC: a value-based static analyzer for C.",
                    "SAFEVM: a safety verifier for Ethereum smart contracts.",
                    "CoCoTest: collaborative crowdsourced testing for Android applications.",
                    "Androlic: an extensible flow, context, object, field, and path-sensitive static analysis framework for Android.",
                    "JQF: coverage-guided property-based testing in Java.",
                    "Ukwikora: continuous inspection for keyword-driven testing.",
                    "CTRAS: a tool for aggregating and summarizing crowdsourced test reports.",
                    "Continuous software performance assessment: detecting performance problems of software libraries on every build.",
                    "Mining constraints for grammar fuzzing.",
                    "A new dimension of test quality: assessing and generating higher quality unit test cases.",
                    "A cost-effective strategy for software vulnerability prediction based on bellwether analysis.",
                    "Identifying error code misuses in complex system.",
                    "Conditional dynamic partial order reduction and optimality results.",
                    "Towards scalable defense of information flow security for distributed systems.",
                    "On the correctness of GPU programs.",
                    "JNI program analysis with automatically extracted C semantic summary."
                ]
            }
        ]
    },
    {
        "year": "2018",
        "name": "27th ISSTA 2018",
        "info": "Amsterdam, The Netherlands",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2018",
                "sub_name": "Proceedings of the 27th ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 2018, Amsterdam, The Netherlands, July 16-21, 2018.",
                "count": 38,
                "papers": [
                    "Test input generation with Java PathFinder: then and now (invited talk abstract).",
                    "Lightweight verification of array indexing.",
                    "Eliminating timing side-channel leaks using program repair.",
                    "Symbolic path cost analysis for side-channel detection.",
                    "Safe and sound program analysis with Flix.",
                    "Test case prioritization for acceptance testing of cyber physical systems: a multi-objective search-based approach.",
                    "Bench4BL: reproducibility study on the performance of IR-based bug localization.",
                    "Automated test mapping and coverage for network topologies.",
                    "Evaluating test-suite reduction in real software evolution.",
                    "Compiler fuzzing through deep learning.",
                    "Deep specification mining.",
                    "Identifying implementation bugs in machine learning based image classifiers using metamorphic testing.",
                    "An empirical study on TensorFlow program bugs.",
                    "Automatically translating bug reports into test cases for mobile apps.",
                    "CiD: automating the detection of API-related compatibility issues in Android apps.",
                    "Test migration for efficient large-scale assessment of mobile app coding assignments.",
                    "Analyzing the analyzers: FlowDroid/IccTA, AmanDroid, and DroidSafe.",
                    "Repositioning of static analysis alarms.",
                    "Shooting from the heap: ultra-scalable static analysis with heap snapshots.",
                    "Static analysis of Java dynamic proxies.",
                    "Practical detection of concurrency issues at coding time.",
                    "Tests from traces: automated unit test extraction for R.",
                    "Translating code comments to procedure specifications.",
                    "PerfFuzz: automatically generating pathological inputs.",
                    "Search-based detection of deviation failures in the migration of legacy spreadsheet applications.",
                    "Making data-driven porting decisions with Tuscan.",
                    "Comparing developer-provided to user-provided tests for fault localization and automated program repair.",
                    "Shaping program repair space with existing patches and similar code.",
                    "Remove RATs from your code: automated optimization of resource inefficient database writes for mobile applications.",
                    "Badger: complexity analysis with fuzzing and symbolic execution.",
                    "Exploiting community structure for floating-point precision tuning.",
                    "piCoq: parallel regression proving for large-scale verification projects.",
                    "Advances in the ANaConDA framework for dynamic analysis and testing of concurrent C/C++ programs.",
                    "LAND: a user-friendly and customizable test generation tool for Android apps.",
                    "Managing concurrent testing of data race with ComRaDe.",
                    "OASIs: oracle assessment and improvement tool.",
                    "Mutode: generic JavaScript and Node.js mutation testing tool.",
                    "MalViz: an interactive visualization tool for tracing malware."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2018w",
                "sub_name": "Companion Proceedings for the ISSTA/ECOOP 2018 Workshops, ISSTA 2018, Amsterdam, Netherlands, July 16-21, 2018.",
                "count": 25,
                "papers": [
                    "On the importance of common sense in program synthesis.",
                    "Buffer overflow detection for C programs is hard to learn.",
                    "Detecting anomalies in Kotlin code.",
                    "Can we learn some PL theory?: how to make use of a corpus of subtype checks.",
                    "Subtype polymorphism \u00e0 la carte via machine learning on dependent types.",
                    "Monotonic gradual typing in a common calculus.",
                    "A formalism for specification of Java API interfaces.",
                    "Incremental overload resolution in object-oriented programming languages.",
                    "Static latency tracking with placement types.",
                    "Reasoning about functional programming in Java and C++.",
                    "An exercise in verifying sequential programs with VerCors.",
                    "Towards automated translation between generations of GUI-based tests for mobile devices.",
                    "Automatic GUI testing of desktop applications: an empirical assessment of the state of the art.",
                    "GUI scalability issues of windows desktop applications and how to find them.",
                    "Is this the lifecycle we really want?: an automated black-box testing approach for Android activities.",
                    "Redesigning Soot's data-flow analysis framework for abstract interpretation.",
                    "The secret sauce in efficient and precise static analysis: the beauty of distributive, summary-based static analyses (and how to master them).",
                    "AFFOGATO: runtime detection of injection attacks for Node.js.",
                    "NJR: a normalized Java resource.",
                    "Systematic evaluation of the unsoundness of call graph construction algorithms for Java.",
                    "Lattice based modularization of static analyses.",
                    "Iceberg: dynamic analysis of Java synchronized methods for investigating runtime performance variability.",
                    "Izinto: a pattern-based IoT testing framework.",
                    "Analysing the effect of uncertainty in airport surface operations.",
                    "Electromagnetic side-channel attacks: potential for progressing hindered digital forensic analysis."
                ]
            },
            {
                "sub_name_abbr": "journals/corr/abs-1908-09302",
                "sub_name": "Proceedings of the Second Workshop on Verification of Objects at RunTime EXecution, VORTEX@ECOOP/ISSTA 2018, Amsterdam, Netherlands, 17th July 2018.",
                "count": 4,
                "papers": [
                    "Analysis of SLA Compliance in the Cloud - An Automated, Model-based Approach.",
                    "SNITCH: Dynamic Dependent Information Flow Analysis for Independent Java Bytecode.",
                    "Who is to Blame? Runtime Verification of Distributed Objects with Active Monitors.",
                    "On Distributed Runtime Verification by Aggregate Computing."
                ]
            }
        ]
    },
    {
        "year": "2017",
        "name": "26th ISSTA 2017",
        "info": "Santa Barbara, CA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2017",
                "sub_name": "Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis, Santa Barbara, CA, USA, July 10 - 14, 2017.",
                "count": 55,
                "papers": [
                    "One test to rule them all.",
                    "Reinforcement learning for automatic test case prioritization and selection in continuous integration.",
                    "PerfRanker: prioritization of performance regression tests for collection-intensive software.",
                    "Compiler-assisted test acceleration on GPUs for embedded software.",
                    "Targeted property-based testing.",
                    "Generating unit tests with descriptive names or: would you name your children thing1 and thing2?",
                    "Accelerating array constraints in symbolic execution.",
                    "Improving the cost-effectiveness of symbolic testing techniques for transport protocol implementations under packet dynamics.",
                    "Combining symbolic execution and search-based testing for programs with complex heap inputs.",
                    "Efficient computation of happens-before relation for event-driven programs.",
                    "Automatic detection and validation of race conditions in interrupt-driven embedded software.",
                    "Monitoring decentralized specifications.",
                    "Effective online software anomaly detection.",
                    "Semi-automated discovery of server-based information oversharing vulnerabilities in Android applications.",
                    "CPR: cross platform binary code reuse via platform independent trace program.",
                    "An actionable performance profiler for optimizing the order of evaluations.",
                    "Testing and analysis of web applications using page models.",
                    "Automated layout failure detection for responsive web pages without an explicit oracle.",
                    "Test execution checkpointing for web applications.",
                    "Experience paper: a study on behavioral backward incompatibilities of Java software libraries.",
                    "Identifying test-suite-overfitted patches through test case generation.",
                    "Impact of tool support in patch construction.",
                    "Automated repair of layout cross browser issues using search-based techniques.",
                    "Boosting spectrum-based fault localization using PageRank.",
                    "FLUCCS: using code and change metrics to improve fault localization.",
                    "Inferring mutant utility from program context.",
                    "Faster mutation analysis via equivalence modulo states.",
                    "Just-in-time static analysis.",
                    "Refining interprocedural change-impact analysis using equivalence relations.",
                    "Boosting the precision of virtual call integrity protection with partial pointer analysis for C++.",
                    "Lightweight detection of physical unit inconsistencies without program annotations.",
                    "Phriky-units: a lightweight, annotation-free physical unit inconsistency detection tool.",
                    "A suite of tools for making effective use of automatically generated tests.",
                    "ReDeCheck: an automatic layout failure checking tool for responsively designed web pages.",
                    "CUT: automatic unit testing in the cloud.",
                    "XFix: an automated tool for the repair of layout cross browser issues.",
                    "THEMIS: a tool for decentralized monitoring algorithms.",
                    "JFIX: semantics-based repair of Java programs via symbolic PathFinder.",
                    "ArtForm: a tool for exploring the codebase of form-based websites.",
                    "ParTeCL: parallel testing using OpenCL.",
                    "Verifying digital systems with MATLAB.",
                    "SealTest: a simple library for test sequence generation.",
                    "GitcProc: a tool for processing and classifying GitHub commits.",
                    "Caret-HM: recording and replaying Android user sessions with heat map generation using UI state clustering.",
                    "LabPal: repeatable computer experiments made easy.",
                    "Consistency checking in requirements analysis.",
                    "Testing and analysis of web applications using page models.",
                    "Path cost analysis for side channel detection.",
                    "Automatically inferring and enforcing user expectations.",
                    "Understanding intended behavior using models of low-level signals.",
                    "Version space learning for verification on temporal differentials.",
                    "Data flow oriented UI testing: exploiting data flows and UI elements to test Android applications.",
                    "Dynamic tainting for automatic test case generation.",
                    "Mapping hardness of automated software testing.",
                    "Oracle problem in software testing."
                ]
            },
            {
                "sub_name_abbr": "conf/spin/2017",
                "sub_name": "Proceedings of the 24th ACM SIGSOFT International SPIN Symposium on Model Checking of Software, Santa Barbara, CA, USA, July 10-14, 2017.",
                "count": 25,
                "papers": [
                    "Cobra: fast structural code checking (keynote).",
                    "Automated formal reasoning about amazon web services (keynote).",
                    "SunDew: systematic automated security testing (keynote).",
                    "The RERS 2017 challenge and workshop (invited paper).",
                    "Distributed binary decision diagrams for symbolic reachability.",
                    "Addressing challenges in obtaining high coverage when model checking Android applications.",
                    "LeeTL: LTL with quantifications over model objects.",
                    "Explicit state model checking with generalized B\u00fcchi and Rabin automata.",
                    "Increasing usability of spin-based C code verification using a harness definition language: leveraging model-driven code checking to practitioners.",
                    "Runtime enforcement using B\u00fcchi games.",
                    "Runtime enforcement of reactive systems using synchronous enforcers.",
                    "SIMPAL: a compositional reasoning framework for imperative programs.",
                    "Verification-driven development of ICAROUS based on automatic reachability analysis: a preliminary case study.",
                    "Formal verification of data-intensive applications through model checking modulo theories.",
                    "Practical controller synthesis for MTL0, \u221e.",
                    "An ordered approach to solving parity games in quasi polynomial time and quasi linear space.",
                    "A hot method for synthesising cool controllers.",
                    "Backward coverability with pruning for lossy channel systems.",
                    "Model learning and model checking of SSH implementations.",
                    "CARET model checking for malware detection.",
                    "EdSketch: execution-driven sketching for Java.",
                    "Stateless model checking of the Linux kernel's hierarchical read-copy-update (tree RCU).",
                    "Optimizing parallel Korat using invalid ranges.",
                    "Guided test case generation for mobile apps in the TRIANGLE project: work in progress.",
                    "ExpoSE: practical symbolic execution of standalone JavaScript."
                ]
            }
        ]
    },
    {
        "year": "2016",
        "name": "25th ISSTA 2016",
        "info": "Saarbr\u00fccken, Germany",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2016",
                "sub_name": "Proceedings of the 25th International Symposium on Software Testing and Analysis, ISSTA 2016, Saarbr\u00fccken, Germany, July 18-20, 2016.",
                "count": 41,
                "papers": [
                    "DEKANT: a static analysis tool that learns to detect web application vulnerabilities.",
                    "Automated and effective testing of web services for XML injection attacks.",
                    "Binary code is not easy.",
                    "Specification of concretization and symbolization policies in symbolic execution.",
                    "EagerMerge: an optimistic technique for efficient points-to analysis.",
                    "IPA: improving predictive analysis with pointer analysis.",
                    "Generating focused random tests using directed swarm testing.",
                    "Monkey see, monkey do: effective generation of GUI tests with inferred macro events.",
                    "Sapienz: multi-objective automated testing for Android applications.",
                    "FSX: fine-grained incremental unit test generation for C/C++ programs.",
                    "CSNIPPEX: automated synthesis of compilable code snippets from Q&A sites.",
                    "Automatic test case generation: what if test code quality matters?",
                    "Analyzing test completeness for dynamic languages.",
                    "Unveiling anomalies and their impact on software quality in model-based automotive software revisions with software metrics and domain experts.",
                    "Practitioners' expectations on automated fault localization.",
                    "A learning-to-rank based fault localization approach using likely invariants.",
                    "Optimal sanitization synthesis for web application vulnerability repair.",
                    "ARROW: automated repair of races on client-side web pages.",
                    "Automatic generation of oracles for exceptional behaviors.",
                    "Verdict machinery: on the need to automatically make sense of test results.",
                    "Testing stochastic software using pseudo-oracles.",
                    "Test oracle assessment and improvement.",
                    "DSI: an evidence-based approach to identify dynamic data structures in C programs.",
                    "Documenting database usages and schema constraints in database-centric applications.",
                    "Exploring regular expression usage and context in Python.",
                    "Toward understanding compiler bugs in GCC and LLVM.",
                    "Semantic modelling of Android malware for effective malware comprehension, detection, and classification.",
                    "DroidRA: taming reflection to support whole-program analysis of Android apps.",
                    "Mutation-aware fault prediction.",
                    "Predictive mutation testing.",
                    "Threats to the validity of mutation-based test assessment.",
                    "Efficient race detection in the presence of programmatic event loops.",
                    "Automatically verifying and reproducing event-based races in Android apps.",
                    "SyncProf: detecting, localizing, and optimizing synchronization bottlenecks.",
                    "Zero-overhead profiling via EM emanations.",
                    "Efficient flow profiling for detecting performance bugs.",
                    "Energy-aware test-suite minimization for Android apps.",
                    "COSTOTest: a tool for building and running test harness for service-based component models (demo).",
                    "ASTOR: a program repair library for Java (demo).",
                    "Jolinar: analysing the energy footprint of software applications (demo).",
                    "PIT: a practical mutation testing tool for Java (demo)."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2016cstva",
                "sub_name": "Proceedings of the 7th Workshop on Constraint Solvers in Testing, Verification, and Analysis co-located with The International Symposium on Software Testing and Analysis (ISSTA 2016), Saarbr\u00fccken, Germany, July 17th, 2016.",
                "count": 4,
                "papers": [
                    "Design of a Modified Concolic Testing Algorithm with Smaller Constraints.",
                    "A CHR-Based Solver for Weak Memory Behaviors.",
                    "A Constraint Solving Problem Towards Unified Combinatorial Interaction Testing.",
                    "Towards Automated Bounded Model Checking of API Implementations."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2016qudos",
                "sub_name": "Proceedings of the 2nd International Workshop on Quality-Aware DevOps, QUDOS@ISSTA 2016, Saarbr\u00fccken, Germany, July 21, 2016.",
                "count": 12,
                "papers": [
                    "Coverage-based metrics for cloud adaptation.",
                    "Management challenges for DevOps adoption within UK SMEs.",
                    "A software architecture framework for quality-aware DevOps.",
                    "Towards a UML profile for data intensive applications.",
                    "A systematic approach for performance evaluation using process mining: the POSIDONIA operations case study.",
                    "The M3 (measure-measure-model) tool-chain for performance prediction of multi-tier applications.",
                    "DICE fault injection tool.",
                    "Datalution: a tool for continuous schema evolution in NoSQL-backed web applications.",
                    "Model-driven continuous deployment for quality DevOps.",
                    "PET: continuous performance evaluation tool.",
                    "A tool for verification of big-data applications.",
                    "TemPerf: temporal correlation between performance metrics and source code."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2016intuitest",
                "sub_name": "Proceedings of the 2nd International Workshop on User Interface Test Automation, INTUITEST@ISSTA 2016, Saarbr\u00fccken, Germany, July 21, 2016.",
                "count": 2,
                "papers": [
                    "Code coverage for any kind of test in any kind of transcompiled cross-platform applications.",
                    "Automated mobile UI test fragility: an exploratory assessment study on Android."
                ]
            }
        ]
    },
    {
        "year": "2015",
        "name": "24th ISSTA 2015",
        "info": "Baltimore, MD, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2015",
                "sub_name": "Proceedings of the 2015 International Symposium on Software Testing and Analysis, ISSTA 2015, Baltimore, MD, USA, July 12-17, 2015.",
                "count": 44,
                "papers": [
                    "Evaluating the usefulness of IR-based fault localization techniques.",
                    "Proactive detection of inadequate diagnostic messages for software configuration errors.",
                    "An analysis of patch plausibility and correctness for generate-and-validate patch generation systems.",
                    "BrowserAudit: automated testing of browser security features.",
                    "Detection and classification of malicious JavaScript via attack behavior modelling.",
                    "Experience report: an empirical study of PHP security mechanism usage.",
                    "WuKong: a scalable and accurate two-phase approach to Android app clone detection.",
                    "Systematic execution of Android test suites in adverse conditions.",
                    "DLint: dynamically checking bad coding practices in JavaScript.",
                    "Scalable and precise taint analysis for Android.",
                    "Dynamic detection of inter-application communication vulnerabilities in Android.",
                    "Modelgen: mining explicit information flow specifications from concrete executions.",
                    "When truth is efficient: analysing concurrency.",
                    "Pegasus: automatic barrier inference for stable multithreaded systems.",
                    "ConcBugAssist: constraint solving for diagnosis and repair of concurrency bugs.",
                    "Enhancing reuse of constraint solutions to improve symbolic execution.",
                    "S-looper: automatic summarization for multipath string loops.",
                    "Experience report: how is dynamic symbolic execution different from manual testing? a study on KLEE.",
                    "Practical regression test selection with dynamic file dependencies.",
                    "Reliable testing: detecting state-polluting tests to prevent test dependency.",
                    "Empirical evaluation of pareto efficient multi-objective regression test case prioritisation.",
                    "Optimizing selection of competing features via feedback-directed evolutionary algorithms.",
                    "Automated software transplantation.",
                    "Automating performance bottleneck detection using search-based application profiling.",
                    "Test-case generation for runtime analysis and vice versa: verification of aircraft separation assurance.",
                    "Reliability assessment for distributed systems via communication abstraction and refinement.",
                    "Reusing constraint proofs in program analysis.",
                    "Feedback-controlled random test generation.",
                    "Randomized stress-testing of link-time optimizers.",
                    "Automated unit test generation during software development: a controlled experiment and think-aloud observations.",
                    "Calculation coverage testing in scientific applications.",
                    "Automatic fault injection for driver robustness testing.",
                    "Preventing data errors with continuous testing.",
                    "Automatic generation of system test cases from use case specifications.",
                    "RTCM: a natural language based, automated, and practical test case generation framework.",
                    "Dynamic taint tracking for Java with phosphor (demo).",
                    "TSTL: a language and tool for testing (demo).",
                    "CanaryAdvisor: a statistical-based tool for canary testing (demo).",
                    "SAMC: a fast model checker for finding heisenbugs in distributed systems (demo).",
                    "Making your crashes work for you (doctoral symposium).",
                    "Scalable program analysis through proof caching (doctoral symposium).",
                    "Collaborative testing across shared software components (doctoral symposium).",
                    "Cost-aware combinatorial interaction testing (doctoral symposium).",
                    "Mining change history for test-plan generation (doctoral symposium)."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2015chese",
                "sub_name": "Proceedings of the 1st International Workshop on Code Hunt on Educational Software Engineering, CHESE@ISSTA 2015, Baltimore, MD, USA, July 14, 2015.",
                "count": 4,
                "papers": [
                    "Experience with constructing code hunt contests.",
                    "Pythia reloaded: an intelligent unit testing-based code grader for education.",
                    "Code hunt as platform for gamification of cybersecurity training.",
                    "TeamWATCH demonstration: a web-based 3d software source code visualization for education."
                ]
            }
        ]
    },
    {
        "year": "2014",
        "name": "23rd ISSTA 2014",
        "info": "San Jose, CA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2014",
                "sub_name": "International Symposium on Software Testing and Analysis, ISSTA '14, San Jose, CA, USA - July 21 - 26, 2014.",
                "count": 49,
                "papers": [
                    "Runtime prevention of concurrency related type-state violations in multithreaded applications.",
                    "Performance regression testing of concurrent classes.",
                    "Verifying atomicity via data independence.",
                    "Verification-aided regression testing.",
                    "Hybrid security analysis of web JavaScript code via dynamic partial evaluation.",
                    "Virtual DOM coverage for effective testing of dynamic web applications.",
                    "DOM-based test adequacy criteria for web applications.",
                    "Cross-platform feature matching for web applications.",
                    "Covrig: a framework for the analysis of code, test, and coverage evolution in real software.",
                    "CoREBench: studying complexity of regression errors.",
                    "ARC++: effective typestate and lifetime dependency analysis.",
                    "A type system for format strings.",
                    "Scalable detection of missed cross-function refactorings.",
                    "Tailored source code transformations to synthesize computationally diverse program variants.",
                    "Using test case reduction and prioritization to improve symbolic execution.",
                    "FLOWER: optimal test suite reduction as a network maximum flow.",
                    "Coverage and fault detection of the output-uniqueness test selection criteria.",
                    "Dodona: automated oracle data set selection.",
                    "CrashLocator: locating crashing faults based on crash stacks.",
                    "Efficient predicated bug signature mining via hierarchical instrumentation.",
                    "Semantic differential repair for input validation and sanitization.",
                    "Automatic repair for multi-threaded programs with Deadlock/Livelock using maximum satisfiability.",
                    "Make it work, make it right, make it fast: building a platform-neutral whole-system dynamic binary analysis platform.",
                    "Automated testing for SQL injection vulnerabilities: an input mutation approach.",
                    "Reducing GUI test suites via program slicing.",
                    "SunCat: helping developers understand and predict performance problems in smartphone applications.",
                    "A variability-based testing approach for synthesizing video sequences.",
                    "Robust test automation using contextual clues.",
                    "Efficient mutation analysis by propagating and partitioning infected execution states.",
                    "Lightweight automated detection of unsafe information leakage via exceptions.",
                    "Integrated energy-directed test suite optimization.",
                    "Identifying optimal trade-offs between CPU time usage and temporal constraints using search.",
                    "Feedback-driven dynamic invariant discovery.",
                    "Link: exploiting the web of data to generate test inputs.",
                    "Empirically revisiting the test independence assumption.",
                    "An empirical study of injected versus actual interface errors.",
                    "Legend: an agile DSL toolset for web acceptance testing.",
                    "ProCrawl: mining test models from multi-user web applications.",
                    "X-PERT: a web application testing tool for cross-browser inconsistency detection.",
                    "Extending a search-based test generator with adaptive dynamic symbolic execution.",
                    "Canalyze: a static bug-finding tool for C programs.",
                    "MuCheck: an extensible tool for mutation testing of haskell programs.",
                    "The major mutation framework: efficient and scalable mutation analysis for Java.",
                    "Defects4J: a database of existing faults to enable controlled testing studies for Java programs.",
                    "A format string checker for Java.",
                    "Constructing coding duels in Pex4Fun and code hunt.",
                    "Reusing constraint proofs for scalable program analysis.",
                    "Effective test generation and adequacy assessment for JavaScript-based web applications.",
                    "Efficient statistical debugging via hierarchical instrumentation."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2014woda",
                "sub_name": "Proceedings of the 2014 Joint International Workshop on Dynamic Analysis (WODA) and Software and System Performance Testing, Debugging, and Analytics (PERTEA), WODA+PERTEA 2014, San Jose, CA, USA, July 22, 2014.",
                "count": 10,
                "papers": [
                    "Intent fuzzer: crafting intents of death.",
                    "Automated test generation for API proxy code (invited talk abstract).",
                    "Usable program analysis at google-scale (invited talk abstract).",
                    "P: a domain-specific language for asynchronous event-driven programming (invited talk abstract).",
                    "Effective race detection for event-driven programs (invited talk abstract).",
                    "On the probabilistic analysis of software (invited talk abstract).",
                    "Context-sensitive delta inference for identifying workload-dependent performance bottlenecks (invited talk abstract).",
                    "Detecting and repairing performance bugs using execution and code patterns (invited talk abstract).",
                    "Language, compiler, and runtime system support towards highly scalable big data application (invited talk abstract).",
                    "Improving energy efficiency of work-stealing parallel languages (invited talk abstract)."
                ]
            }
        ]
    },
    {
        "year": "2013",
        "name": "22nd ISSTA 2013",
        "info": "Lugano, Switzerland",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2013",
                "sub_name": "International Symposium on Software Testing and Analysis, ISSTA '13, Lugano, Switzerland, July 15-20, 2013.",
                "count": 38,
                "papers": [
                    "Expressing and checking intended changes via software change contracts.",
                    "Finding rare numerical stability errors in concurrent computations.",
                    "Parallel bounded analysis in code with rich invariants by refinement of field bounds.",
                    "Efficient and flexible GUI test execution via test merging.",
                    "Automatically repairing broken workflows for evolving GUI applications.",
                    "Semi-valid input coverage for fuzz testing.",
                    "Automated testing with targeted event sequence generation.",
                    "Calculating source line level energy information for Android applications.",
                    "Context-sensitive delta inference for identifying workload-dependent performance bottlenecks.",
                    "Combining model checking and testing with an application to reliability prediction and distribution.",
                    "Dynamically validating static memory leak warnings.",
                    "Collecting a heap of shapes.",
                    "Griffin: grouping suspicious memory-access patterns to improve understanding of concurrency bugs.",
                    "Variable and thread bounding for systematic testing of multithreaded programs.",
                    "EnforceMOP: a runtime property enforcement system for multithreaded programs.",
                    "SimRacer: an automated framework to support testing for process-level races.",
                    "Practical static race detection for Java parallel loops.",
                    "Using automated program repair for evaluating the effectiveness of fault localization techniques.",
                    "Data model property inference and repair.",
                    "F3: fault localization for field failures.",
                    "Selective mutation testing for concurrent code.",
                    "Faster mutation testing inspired by test prioritization and reduction.",
                    "Declarative mocking.",
                    "Orthogonal exploration of the search space in evolutionary test case generation.",
                    "Hybrid learning: interface generation through static, dynamic, and symbolic analysis.",
                    "Optimizing monitoring of finite state properties through monitor compaction.",
                    "Does automated white-box test generation really help software testers?",
                    "Comparing non-adequate test suites using coverage criteria.",
                    "Threats to the validity and value of empirical assessments of the accuracy of coverage-based fault locators.",
                    "An empirical study of PHP feature usage: a static analysis perspective.",
                    "Practical blended taint analysis for JavaScript.",
                    "Finding your way in the testing jungle: a learning approach to web security testing.",
                    "Debugging non-deadlock concurrency bugs.",
                    "Generation of Java programs properties from test purposes.",
                    "Generation of test databases using sampling methods.",
                    "Analysis of performance regression testing data by transaction profiles.",
                    "Product-line verification with feature-oriented contracts.",
                    "Formal safety proof: a real case study in a railway interlocking system."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2013qasba",
                "sub_name": "Proceedings of the 2nd International Workshop on Quality Assurance for Service-based Applications, QASBA 2013, in conjunction with ISSTA 2013, Lugano, Switzerland, July 15, 2013.",
                "count": 5,
                "papers": [
                    "Towards a quality modelling language for component-based systems (QML/CS).",
                    "Verification of variable service orchestrations using model checking.",
                    "Conformance testing for quality assurance of clustering architectures.",
                    "Runtime testing framework for improving quality in dynamic service-based systems.",
                    "Safe substitution for service-based applications."
                ]
            }
        ]
    },
    {
        "year": "2012",
        "name": "21st ISSTA 2012",
        "info": "Minneapolis, MN, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2012",
                "sub_name": "International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012.",
                "count": 31,
                "papers": [
                    "RefaFlex: safer refactorings for reflective Java programs.",
                    "THeME: a system for testing by hardware monitoring events.",
                    "Multi-slicing: a compiler-supported parallel approach to data dependence profiling.",
                    "Remedying the eval that men do.",
                    "State aware test case regeneration for improving web application test suite coverage and fault detection.",
                    "ViewPoints: differential string analysis for discovering client- and server-side input validation inconsistencies.",
                    "Search-based system testing: high coverage, no false alarms.",
                    "Swarm testing.",
                    "Compositional load test generation for software pipelines.",
                    "Combining model-based and combinatorial testing for effective test case generation.",
                    "A first step towards algorithm plagiarism detection.",
                    "A quantitative study of accuracy in system call-based malware detection.",
                    "Undangle: early detection of dangling pointers in use-after-free and double-free vulnerabilities.",
                    "Memoized symbolic execution.",
                    "Abstracting path conditions.",
                    "Probabilistic symbolic execution.",
                    "A human study of patch maintainability.",
                    "Understanding user understanding: determining correctness of generated program invariants.",
                    "Empirical investigation of search algorithms for environment model-based testing of real-time embedded software.",
                    "Testing concurrent programs to achieve high synchronization coverage.",
                    "CARISMA: a context-sensitive approach to race-condition sample-instance selection for multithreaded applications.",
                    "Cooperative types for controlling thread interference in Java.",
                    "Finding errors in multithreaded GUI applications.",
                    "Static memory leak detection using full-sparse value-flow analysis.",
                    "Static detection of brittle parameter typing.",
                    "Measuring enforcement windows with symbolic trace interpretation: what well-behaved programs say.",
                    "Detecting inconsistencies via universal reachability analysis.",
                    "Residual investigation: predictive and precise bug detection.",
                    "Isolating failure causes through test case generation.",
                    "Efficient regression testing of ontology-driven systems.",
                    "Regression mutation testing."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2012w",
                "sub_name": "Proceedings of the International Workshop on Dynamic Analysis: held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2012), WODA 2012, Minneapolis, MN, USA, Sunday, July 15, 2012.",
                "count": 7,
                "papers": [
                    "Evaluating program analysis and testing tools with the RUGRAT random benchmark application generator.",
                    "Extended program invariants: applications in testing and fault localization.",
                    "Finding common ground: choose, assert, and assume.",
                    "Dynamic cost verification for cloud applications.",
                    "Towards an integrated approach for validating qualities of self-adaptive systems.",
                    "Dynamic analysis of inefficiently-used containers.",
                    "Communication-aware HW/SW co-design for heterogeneous multicore platforms."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2012p",
                "sub_name": "Proceedings of the 10th Workshop on Parallel and Distributed Systems: Testing, Analysis, and Debugging, PADTAD 2012, Minneapolis, MN, USA, July 16, 2012.",
                "count": 5,
                "papers": [
                    "On-the-fly detection of data races in OpenMP programs.",
                    "A static analysis tool using a three-step approach for data races in HPC programs.",
                    "Using program closures to make an application programming interface (API) implementation thread safe.",
                    "Using combinatorial benchmark construction to improve the assessment of concurrency bug detection tools.",
                    "Noise-based testing and analysis of multi-threaded C/C++ programs on the binary level."
                ]
            }
        ]
    },
    {
        "year": "2011",
        "name": "20th ISSTA 2011",
        "info": "Toronto, ON, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2011",
                "sub_name": "Proceedings of the 20th International Symposium on Software Testing and Analysis, ISSTA 2011, Toronto, ON, Canada, July 17-21, 2011.",
                "count": 35,
                "papers": [
                    "eXpress: guided path exploration for efficient regression test generation.",
                    "Statically-directed dynamic automated test generation.",
                    "Automatic partial loop summarization in dynamic test generation.",
                    "Symbolic execution with mixed concrete-symbolic solving.",
                    "Polyglot: modeling and analysis for multiple Statechart formalisms.",
                    "Scalable analysis of conceptual data models.",
                    "Bounded verification of Ruby on Rails data models.",
                    "Automated framework for formal operator task analysis.",
                    "Efficient, sensitivity resistant binary instrumentation.",
                    "Recovering the toolchain provenance of binary code.",
                    "Defective error/pointer interactions in the Linux kernel.",
                    "Testing concurrent programs on relaxed memory models.",
                    "Change-aware preemption prioritization.",
                    "Persuasive prediction of concurrency access anomalies.",
                    "Demand-driven context-sensitive alias analysis for Java.",
                    "Path- and index-sensitive string analysis based on monadic second-order logic.",
                    "Saving the world wide web from vulnerable JavaScript.",
                    "Geometric encoding: forging the high performance context sensitive points-to analysis for Java.",
                    "Are automated debugging techniques actually helping programmers?",
                    "On the influence of multiple faults on coverage-based fault localization.",
                    "Minimizing reproduction of software failures.",
                    "Detecting anomalies in the order of equally-typed method arguments.",
                    "Feedback driven adaptive combinatorial testing.",
                    "Using binary decision diagrams for combinatorial test design.",
                    "Adaptive random testing: an illusion of effectiveness?",
                    "Iterative refinement of specification for component based embedded systems.",
                    "Using automatic persistent memoization to facilitate data analysis scripting.",
                    "CoDeSe: fast deserialization via code generation.",
                    "Selecting peers for execution comparison.",
                    "Generating analyses for detecting faults in path segments.",
                    "Characterizing failure-causing parameter interactions by adaptive testing.",
                    "The use of mutation in testing experiments and its sensitivity to external threats.",
                    "Combined static and dynamic automated test generation.",
                    "Generating parameterized unit tests.",
                    "High coverage testing of Haskell programs."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2011w",
                "sub_name": "Proceedings of the International Workshop on Dynamic Analysis: held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2011), WODA 2011, Toronto, ON, Canada, July 18, 2011.",
                "count": 7,
                "papers": [
                    "Detecting algorithms using dynamic analysis.",
                    "A method facilitating integration testing of embedded software.",
                    "Dynamic invariant detection for relational databases.",
                    "Custom-made instrumentation based on static analysis.",
                    "Continuation equivalence: a correctness criterion for static optimizations of dynamic analyses.",
                    "Retroactive aspects: programming in the past.",
                    "Sloppy Python: using dynamic analysis to automatically add error tolerance to ad-hoc data processing scripts."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2011p",
                "sub_name": "Proceedings of the 9th Workshop on Parallel and Distributed Systems: Testing, Analysis, and Debugging, PADTAD 2011, Toronto, ON, Canada, July 17-21, 2011.",
                "count": 7,
                "papers": [
                    "Research in concurrent software testing: a systematic review.",
                    "Deterministic replay for MCAPI programs.",
                    "Java replay for dependence-based debugging.",
                    "Practical verification of high-level dataraces in transactional memory programs.",
                    "Refactoring Java programs using concurrent libraries.",
                    "Extending a distributed loop network to tolerate node failures.",
                    "Executing association rule mining algorithms under a Grid computing environment."
                ]
            }
        ]
    },
    {
        "year": "2010",
        "name": "19th ISSTA 2010",
        "info": "Trento, Italy",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2010",
                "sub_name": "Proceedings of the Nineteenth International Symposium on Software Testing and Analysis, ISSTA 2010, Trento, Italy, July 12-16, 2010.",
                "count": 26,
                "papers": [
                    "Proving memory safety of floating-point computations by combining static and dynamic program analysis.",
                    "Strict control dependence and its effect on dynamic information flow analyses.",
                    "Analysis of invariants for efficient bounded verification.",
                    "Automatically identifying critical input regions and code in applications.",
                    "Directed test generation for effective fault localization.",
                    "Automated fixing of programs with contracts.",
                    "Causal inference for statistical fault localization.",
                    "Generating test cases for specification mining.",
                    "Modeling consumer-perceived web application fault severities for testing.",
                    "Automatic detection of unsafe component loadings.",
                    "Learning from 6, 000 projects: lightweight cross-project anomaly detection.",
                    "Perturbing numerical calculations for statistical analysis of floating-point program (in)stability.",
                    "Automated analysis of load testing results.",
                    "Mutation-driven generation of unit tests and oracles.",
                    "OCAT: object capture-based automated testing.",
                    "Testing system virtual machines.",
                    "Parallel symbolic execution for structural test generation.",
                    "Exploiting program dependencies for scalable multiple-path symbolic execution.",
                    "On test repair using symbolic execution.",
                    "Formal analysis of the effectiveness and predictability of random testing.",
                    "A study on agility and testing processes in software organizations.",
                    "The Google FindBugs fixit.",
                    "Analyzing concurrency bugs using dual slicing.",
                    "N-version disassembly: differential testing of x86 disassemblers.",
                    "Software fault prediction tool.",
                    "ASSURE: automated support for secure and usable requirements engineering."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2010w",
                "sub_name": "Proceedings of the International Workshop on Dynamic Analysis: held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2010), WODA 2010, Trento, Italy, July 12, 2010.",
                "count": 6,
                "papers": [
                    "An approach for modeling dynamic analysis using ontologies.",
                    "Using compression algorithms to support the comprehension of program traces.",
                    "Detection of high-level execution patterns in reactive behavior of control programs.",
                    "DSDSR: a tool that uses dynamic symbolic execution for data structure repair.",
                    "Dsc+Mock: a test case + mock class generator in support of coding against interfaces.",
                    "Metrics for QoS analysis in dynamic, evolving and heterogeneous connected systems."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2010p",
                "sub_name": "Proceedings of the 8th Workshop on Parallel and Distributed Systems: Testing, Analysis, and Debugging, PADTAD 2010, Trento, Italy, July 12-16, 2010.",
                "count": 7,
                "papers": [
                    "Robust non-intrusive record-replay with processor extraction.",
                    "Debugging support tool for MCAPI applications.",
                    "Detection of Transactional Memory anomalies using static analysis.",
                    "Unit testing for concurrent business code.",
                    "A platform for search-based testing of concurrent software.",
                    "Profiling of real-world web applications.",
                    "Open virtualization framework for testing ground systems."
                ]
            }
        ]
    },
    {
        "year": "2009",
        "name": "18th ISSTA 2009",
        "info": "Chicago, IL, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2009",
                "sub_name": "Proceedings of the Eighteenth International Symposium on Software Testing and Analysis, ISSTA 2009, Chicago, IL, USA, July 19-23, 2009.",
                "count": 25,
                "papers": [
                    "Exception analysis and points-to analysis: better together.",
                    "Analyzing singularity channel contracts.",
                    "Identifying semantic differences in AspectJ programs.",
                    "Advanced code coverage analysis using substring holes.",
                    "A formal analysis of requirements-based testing.",
                    "The influence of size and coverage on test suite effectiveness.",
                    "Efficient mutation testing by checking invariant violations.",
                    "Automatic mining of functionally equivalent code fragments via random testing.",
                    "A comparative study of programmer-written and automatically inferred contracts.",
                    "HAMPI: a solver for string constraints.",
                    "Detecting code clones in binary executables.",
                    "Precise pointer reasoning for dynamic test generation.",
                    "Identifying bug signatures using discriminative graph mining.",
                    "Fault localization and repair for Java runtime exceptions.",
                    "Memory slicing.",
                    "Incremental covering array failure characterization in large configuration spaces.",
                    "Automatic system testing of programs without test oracles.",
                    "Clustering test cases to achieve effective and scalable prioritisation incorporating expert knowledge.",
                    "Time-aware test-case prioritization using integer linear programming.",
                    "Loop-extended symbolic execution on binary programs.",
                    "AVA: automated interpretation of dynamically detected anomalies.",
                    "Penumbra: automatically identifying failure-relevant inputs using dynamic tainting.",
                    "Testing CPU emulators.",
                    "Specifying the worst case: orthogonal modeling of hardware errors.",
                    "Precise interface identification to improve testing and analysis of web applications."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2009w",
                "sub_name": "Proceedings of the International Workshop on Dynamic Analysis: held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2009), WODA 2009, Chicago, IL, USA, July, 2009.",
                "count": 7,
                "papers": [
                    "A runtime environment for online processing of operating system kernel events.",
                    "Using AOP for detailed runtime monitoring instrumentation.",
                    "Tiddle: A Trace Description Language for generating concurrent benchmarks to test dynamic analyses.",
                    "(Quickly) testing the tester via path coverage.",
                    "Test case filtering and prioritization based on coverage of combinations of program elements.",
                    "Cooperative crug isolation.",
                    "Limits of parallelism using dynamic dependency graphs."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2009p",
                "sub_name": "Proceedings of the 7th Workshop on Parallel and Distributed Systems: Testing, Analysis, and Debugging, PADTAD 2009, Chicago, Illinois, USA, July 19-20, 2009.",
                "count": 11,
                "papers": [
                    "Run-time conformance checking of mobile and distributed systems using executable models.",
                    "Some resources for teaching concurrency.",
                    "Understanding the behavior of transactional memory applications.",
                    "Unit testing for multi-threaded Java programs.",
                    "MulticoreSDK: a practical and efficient data race detector for real-world applications.",
                    "Pattern-driven deadlock avoidance.",
                    "Forcing small models of conditions on program interleaving for detection of concurrent bugs.",
                    "SideTrack: generalizing dynamic atomicity analysis.",
                    "Clash of the Titans: tools and techniques for hunting bugs in concurrent programs.",
                    "An annotation assistant for interactive debugging of programs with common synchronization idioms.",
                    "A proposal of operation history management system for source-to-source optimization of HPC programs."
                ]
            }
        ]
    },
    {
        "year": "2008",
        "name": "17th ISSTA 2008",
        "info": "Seattle, WA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2008",
                "sub_name": "Proceedings of the ACM/SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 2008, Seattle, WA, USA, July 20-24, 2008.",
                "count": 33,
                "papers": [
                    "The real value of testing.",
                    "Proofs from tests.",
                    "Combining unit-level symbolic execution and system-level concrete execution for testing NASA software.",
                    "Testing for buffer overflows with length abstraction.",
                    "Efficient solving of structural constraints.",
                    "Using sensitivity analysis to create simplified economic models for regression testing.",
                    "Effective and scalable software compatibility testing.",
                    "Configuration-aware regression testing: an empirical study of sampling and prioritization.",
                    "Finding errors in .net with feedback-directed random testing.",
                    "Customization change impact analysis for erp professionals via program slicing.",
                    "Finding bugs in java native interface programs.",
                    "Cooperative debugging with five hundred million test cases.",
                    "A metric for software readability.",
                    "Comparing software metrics tools.",
                    "Dynamic recognition of synchronization operations for improved data race detection.",
                    "Racer: effective race detection using aspectj.",
                    "Fault localization using value replacement.",
                    "AFID: an automated fault identification tool.",
                    "The probabilistic program dependence graph and its application to fault diagnosis.",
                    "Practical pluggable types for java.",
                    "Verifying dereference safety via expanding-scope analysis.",
                    "Merging equivalent contexts for scalable heap-cloning-based context-sensitive points-to analysis.",
                    "Are your votes really counted?: testing the security of real-world electronic voting systems.",
                    "Dynamic test input generation for web applications.",
                    "Finding bugs in dynamic web applications.",
                    "Automatic documentation inference for exceptions.",
                    "Universal symbolic execution and its application to likely data structure invariant generation.",
                    "Dynamic inference of likely data preconditions over predicates by tree learning.",
                    "DEFECTS 2008: international workshop on defects in large software systems.",
                    "6th workshop on parallel and distributed systems: testing and debugging (PADTAD '08).",
                    "Workshop on testing, analysis and verification of web software (TAV-WEB 2008).",
                    "WODA 2008: the sixth international workshop on dynamic analysis.",
                    "Workshop on state-space exploration for automated testing (SSEAT 2008)."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2008d",
                "sub_name": "Proceedings of the 2008 Workshop on Defects in Large Software Systems, held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2008), DEFECTS 2008, Seattle, Washington, USA, July 20, 2008.",
                "count": 12,
                "papers": [
                    "A report on a survey and study of static analysis users.",
                    "Predicting fault-prone modules based on metrics transitions.",
                    "Exploring the relationship of history characteristics and defect count: an empirical study.",
                    "Can data transformation help in the detection of fault-prone modules?",
                    "The impact of product development on the lifecycle of defects.",
                    "Nearest neighbor sampling for cross company defect predictors: abstract only.",
                    "Comparing methods to identify defect reports in a change management database.",
                    "SZZ revisited: verifying when changes induce fixes.",
                    "A criterion for filtering code clone related bugs.",
                    "Defect classification and defect types revisited.",
                    "Retrieving similar code fragments based on identifier similarity for defect detection.",
                    "Do bad smells indicate \"trouble\" in code?"
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2008w",
                "sub_name": "Proceedings of the 2008 International Workshop on Dynamic Analysis: held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2008), WODA 2008, Seattle, Washington, USA, July 21, 2008.",
                "count": 11,
                "papers": [
                    "Dynamic detection of event handlers.",
                    "Feature-level phase detection for execution trace using object cache.",
                    "A dynamic tool for finding redundant computations in native code.",
                    "Random testing and model checking: building a common framework for nondeterministic exploration.",
                    "Testing mobile computing applications: toward a scenario language and tools.",
                    "BERT: BEhavioral Regression Testing.",
                    "Efficient runtime invariant checking: a framework and case study.",
                    "Mining past-time temporal rules from execution traces.",
                    "Extending dynamic constraint detection with disjunctive constraints.",
                    "An observation-based model for fault localization.",
                    "Replaying and isolating failing multi-object interactions."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2008p",
                "sub_name": "Proceedings of the 6th Workshop on Parallel and Distributed Systems: Testing, Analysis, and Debugging, held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2008), PADTAD 2008, Seattle, Washington, USA, July 20-21, 2008.",
                "count": 11,
                "papers": [
                    "Reproducible testing of distributed software with middleware virtualization and simulation.",
                    "Dynamic testing of flow graph based parallel applications.",
                    "Scheduling considerations for building dynamic verification tools for MPI.",
                    "Memory tagging in Charm++.",
                    "Support for symmetric shadow memory in multiprocessors.",
                    "On-the-fly race detection in multi-threaded programs.",
                    "AtomRace: data race and atomicity violation detector and healer.",
                    "Towards a better collaboration of static and dynamic analyses for testing concurrent programs.",
                    "Software development tools for multi-core/parallel programming.",
                    "Systematic concurrency testing using CHESS.",
                    "Pitfalls in teaching development and testing of concurrent programs and how to overcome them."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2008t",
                "sub_name": "Proceedings of the 2008 Workshop on Testing, Analysis, and Verification of Web Services and Applications, held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2008), TAV-WEB 2008, Seattle, Washington, USA, July 21, 2008.",
                "count": 8,
                "papers": [
                    "Hybrid test of web applications with webtest.",
                    "Empirical studies of a decentralized regression test selection framework for web services.",
                    "Towards a unified framework for the monitoring and recovery of BPEL processes.",
                    "Policy expression and checking in XACML, WS-Policies, and the jABC.",
                    "Multiple-implementation testing for XACML implementations.",
                    "SAFELI: SQL injection scanner using symbolic execution.",
                    "Client and server verification for web services using interface grammars.",
                    "White-box testing of behavioral web service contracts with Pex."
                ]
            }
        ]
    },
    {
        "year": "2007",
        "name": "16th ISSTA 2007",
        "info": "London, UK",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2007",
                "sub_name": "Proceedings of the ACM/SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 2007, London, UK, July 9-12, 2007.",
                "count": 24,
                "papers": [
                    "Under-constrained execution: making automatic code destruction easy and scalable.",
                    "Statistical debugging using compound boolean predicates.",
                    "Debugging in Parallel.",
                    "Instrumenting where it hurts: an automatic concurrent debugging technique.",
                    "Interface grammars for modular software model checking.",
                    "Delta execution for efficient state-space exploration of object-oriented programs.",
                    "Automating component-based system assembly.",
                    "A theoretical & empirical znalysis of evolutionary testing and hill climbing for structural test data generation.",
                    "Experimental assessment of random testing for object-oriented software.",
                    "Chasing rainbows: improving software testing in the real world.",
                    "Variably interprocedural program analysis for runtime error detection.",
                    "Using portfolio theory for better and more consistent quality.",
                    "Blended analysis for performance understanding of framework-based applications.",
                    "Interaction testing of highly-configurable systems in the presence of constraints.",
                    "Pareto efficient multi-objective test case selection.",
                    "Dynamic test input generation for database applications.",
                    "Finding what's not there: a new approach to revealing neglected conditions in software.",
                    "Static specification mining using automata-based abstractions.",
                    "Efficient online detection of dynamic control dependence.",
                    "Dytan: a generic dynamic taint analysis framework.",
                    "Enabling tracing Of long-running multithreaded programs via dynamic execution reduction.",
                    "Automating algorithms for the identification of fault-prone files.",
                    "Hierarchical dynamic slicing.",
                    "Heuristic ranking of java program edits for fault localization."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2007p",
                "sub_name": "Proceedings of the 5th Workshop on Parallel and Distributed Systems: Testing, Analysis, and Debugging, held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2007), PADTAD 2007, London, UK, July 9, 2007.",
                "count": 8,
                "papers": [
                    "Experience with fluid: analysis, design intent, and assurance for concurrency.",
                    "JThreadSpy: teaching multithreading programming by analyzing execution traces.",
                    "A debugger for flow graph based parallel applications.",
                    "Organizing processes and threads for debugging.",
                    "Techniques for specifying bug patterns.",
                    "Testing patterns for software transactional memory engines.",
                    "Semantics driven dynamic partial-order reduction of MPI-based parallel programs.",
                    "Healing data races on-the-fly."
                ]
            }
        ]
    },
    {
        "year": "2006",
        "name": "15th ISSTA 2006",
        "info": "Portland, Maine, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2006",
                "sub_name": "Proceedings of the ACM/SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 2006, Portland, Maine, USA, July 17-20, 2006.",
                "count": 23,
                "papers": [
                    "TimeAware test suite prioritization.",
                    "The species per path approach to SearchBased test data generation.",
                    "Coverage metrics for requirements-based testing.",
                    "Test input generation for java containers using state matching.",
                    "Experimental program analysis: a new program analysis paradigm.",
                    "Looking for bugs in all the right places.",
                    "A model and sensitivity analysis of the quality economics of defect-detection techniques.",
                    "Subdomain testing of units and systems with state.",
                    "Breaking up is hard to do: an investigation of decomposition for assume-guarantee reasoning.",
                    "Modular verification of code with SAT.",
                    "Role-Based access control consistency validation.",
                    "Effective typestate verification in the presence of aliasing.",
                    "Testing, abstraction, theorem proving: better together!",
                    "Using model checking with symbolic execution to verify parallel numerical programs.",
                    "From daikon to agitator: lessons and challenges in building a commercial tool for developer testing.",
                    "Run-time monitoring of architecturally significant behaviors using behavioral profiles and aspects.",
                    "The case for analysis preserving language transformation.",
                    "Application of automated environment generation to commercial software.",
                    "Automated testing of stochastic systems: a statistically grounded approach.",
                    "Performance assertions for mobile devices.",
                    "Inference and enforcement of data structure consistency specifications.",
                    "DSD-Crasher: a hybrid analysis tool for bug finding.",
                    "Dynamic inference of abstract types."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2006rt",
                "sub_name": "Proceedings of the 1st International Workshop on Random Testing, RT 2006, Portland, Maine, USA, July 20, 2006.",
                "count": 9,
                "papers": [
                    "When only random testing will do.",
                    "Uniform random sampling of traces in very large models.",
                    "Random testing of formal software models and induced coverage.",
                    "Path-oriented random testing.",
                    "Tool support for randomized unit testing.",
                    "An empirical study of the robustness of MacOS applications using random testing.",
                    "Object distance and its application to adaptive random testing of object-oriented programs.",
                    "Is adaptive random testing really better than random testing.",
                    "Adaptive random testing with randomly translated failure region."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2006p",
                "sub_name": "Proceedings of the 4th Workshop on Parallel and Distributed Systems: Testing, Analysis, and Debugging, held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2006), PADTAD 2006, Portland, Maine, USA, July 17, 2006.",
                "count": 9,
                "papers": [
                    "A state-of-practice questionnaire on verification and validation for concurrent programs.",
                    "Formal verification of concurrent software: two case studies.",
                    "A classification of concurrency bugs in java benchmarks by developer intent.",
                    "Improving distributed memory applications testing by message perturbation.",
                    "Producing scheduling that causes concurrent programs to fail.",
                    "Confirmation of deadlock potentials detected by runtime analysis.",
                    "Run-time detection of potential deadlocks for programs with locks, semaphores, and condition variables.",
                    "Multi-environment software testing on the grid.",
                    "A theory of data race detection."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2006t",
                "sub_name": "Proceedings of the 2006 Workshop on Testing, Analysis, and Verification of Web Services and Applications, held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2006), TAV-WEB 2006, Portland, Maine, USA, July 17, 2006.",
                "count": 5,
                "papers": [
                    "A case study of automatically creating test suites from web application field data.",
                    "Towards self-adaptive service-oriented architectures.",
                    "Model-based functional conformance testing of web services operating on persistent data.",
                    "Integrating customized test requirements with traditional requirements in web application testing.",
                    "Towards a BPEL unit testing framework."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2006r",
                "sub_name": "Proceedings of the 2006 Workshop on Role of Software Architecture for Testing and Analysis, held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2006), ROSATEA 2006, Portland, Maine, USA, July 17-20, 2006.",
                "count": 11,
                "papers": [
                    "Performance implications of design pattern usage in distributed applications: case studies in J2EE and .NET.",
                    "Towards an architectural approach for the dynamic and automatic composition of software components.",
                    "Making testing product lines more efficient by improving the testability of product line architectures.",
                    "Architecture-driven platform independent deterministic replay for distributed hard real-time systems.",
                    "A foundation for behavioural conformance in software product line architectures.",
                    "Verification support for plug-and-play architectural design.",
                    "Application of built-in-testing in component-based embedded systems.",
                    "Coverage and adequacy in software product line testing.",
                    "Architecture-based testing using goals and plans.",
                    "Analyzing architectural styles with alloy.",
                    "Towards supporting the architecture design process through evaluation of design alternatives."
                ]
            },
            {
                "sub_name_abbr": "conf/issta/2006w",
                "sub_name": "Proceedings of the 2nd Workshop on Testing Aspect-Oriented Programs, held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2006), WTAOP 2006, Portland, Maine, USA, July 20, 2006.",
                "count": 6,
                "papers": [
                    "Towards a fault model for AspectJ programs: step 1 -- pointcut faults.",
                    "State-based testing of integration aspects.",
                    "A regression tests selection technique for aspect-oriented programs.",
                    "Towards regression test selection for AspectJ programs.",
                    "APTE: automated pointcut testing for AspectJ programs.",
                    "Testing aspect-oriented programming Pointcut Descriptors."
                ]
            }
        ]
    },
    {
        "year": "2004",
        "name": "ISSTA 2004",
        "info": "Boston, Massachusetts, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2004",
                "sub_name": "Proceedings of the ACM/SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 2004, Boston, Massachusetts, USA, July 11-14, 2004.",
                "count": 28,
                "papers": [
                    "Static and dynamic analysis of call chains in Java.",
                    "Software validation via scalable path-sensitive value flow analysis.",
                    "Testing of java web services for robustness.",
                    "Testing malware detectors.",
                    "Covering arrays for efficient fault characterization in complex configuration spaces.",
                    "Optimal strategies for testing nondeterministic systems.",
                    "An empirical study of profiling strategies for released software and their impact on testing activities.",
                    "An experimental evaluation of continuous testing during development.",
                    "Where the bugs are.",
                    "Test input generation with java PathFinder.",
                    "Evolutionary testing in the presence of loop-assigned flags: a testability transformation approach.",
                    "Evolutionary testing of classes.",
                    "The AGEDIS tools for model based testing.",
                    "Software assurance by bounded exhaustive testing.",
                    "Automated black-box testing of functional correctness using function approximation.",
                    "On the analytical comparison of testing techniques.",
                    "Automating commutativity analysis at the design level.",
                    "Modeling and verification of an air traffic concept of operations.",
                    "An optimizing compiler for batches of temporal logic formulas.",
                    "Active learning for automatic classification of software behavior.",
                    "Improving the adaptability of multi-mode systems via program steering.",
                    "Slicing tools for synchronous reactive programs.",
                    "Exploiting purity for atomicity.",
                    "Faster constraint solving with subtypes.",
                    "SABER: smart analysis based error reduction.",
                    "Model checking XML manipulating software.",
                    "A formal approach for modeling and verification of RTCORBA-based applications.",
                    "Verifying process models built using parameterized state machines."
                ]
            }
        ]
    },
    {
        "year": "2002",
        "name": "ISSTA 2002",
        "info": "Roma, Italy",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2002",
                "sub_name": "Proceedings of the International Symposium on Software Testing and Analysis, ISSTA 2002, Roma, Italy, July 22-24, 2002.",
                "count": 31,
                "papers": [
                    "Parameterized object sensitivity for points-to and side-effect analyses for Java.",
                    "Model checking Java programs using structural heuristics.",
                    "Evaluating the precision of static reference analysis using profiling.",
                    "A conservative algorithm for computing the flow of permissions in Java programs.",
                    "Domain partitioning for open reactive systems.",
                    "The distirubtion of faults in a large industrial software system.",
                    "Gamma system: continuous evolution of software after deployment.",
                    "Investigating the use of analysis contracts to support fault isolation in object oriented code.",
                    "PROPANE: an environment for examining the propagation of errors in software.",
                    "Efficient instrumentation for code coverage testing.",
                    "Effectively prioritizing tests in development environment.",
                    "Dependence analysis in reduction of requirement based test suites.",
                    "Generating finite state machines from abstract state machines.",
                    "Korat: automated testing based on Java predicates.",
                    "Projected state machine coverage for software testing.",
                    "On testing and conformance relations for UML statechart diagrams behaviours.",
                    "Experiences in automating the testing of SS7 signalling transfer points.",
                    "Conformance test experiments for distributed real-time systems.",
                    "Refactoring design models for inductive verification.",
                    "Specification, verification, and synthesis of concurrency control components.",
                    "Rescaling reliability bounds for a new operational profile.",
                    "Semi-proving: an integrated method based on global symbolic evaluation and metamorphic testing.",
                    "Continuity in sofware systems.",
                    "ISSTA 2002 panel: is ISSTA research relevant to industrial users?",
                    "Is ISSTA research relevant to industrial users? panel - ISSTA 2002: empowering the developer to be a tester too!",
                    "Is ISSTA research relevant to industry?",
                    "Ericsson lab Italy: is ISSTA research relevant to industrial users?",
                    "Panel discussion: is ISSTA testing research relevant to industrial users?",
                    "Isolating failure-inducing thread schedules.",
                    "Automatic extraction of object-oriented component interfaces.",
                    "Automatic generation of program specifications."
                ]
            }
        ]
    },
    {
        "year": "2000",
        "name": "ISSTA 2000",
        "info": "Portland, OR, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/2000",
                "sub_name": "Proceedings of the International Symposium on Software Testing and Analysis, ISSTA 2000, Portland, OR, USA, August 21-24, 2000.",
                "count": 25,
                "papers": [
                    "Analysis is necessary, but far from sufficient: Experiences building and deploying successful tools for developers and testers (abstract only).",
                    "Verisim: Formal analysis of network simulations.",
                    "Finding bugs with a constraint solver.",
                    "Putting static analysis to work for verification: A case study.",
                    "Automated Testing of Classes.",
                    "OMEN: A strategy for testing object-oriented software.",
                    "UML-Based integration testing.",
                    "On subdomains: Testing, profiles, and components.",
                    "Requirements-based monitors for real-time systems.",
                    "Classification schemes to aid in the analysis of real-time systems.",
                    "Verifying properties of process definitions.",
                    "Prioritizing test cases for regression testing.",
                    "Which pointer analysis should I use?",
                    "Comparison of delivered reliability of branch, data flow and operational testing: A case study.",
                    "Simplifying failure-inducing input.",
                    "Finite state verification: An emerging technology for validating software systems (abstract only).",
                    "A framework for testing database applications.",
                    "jRapture: A Capture/Replay tool for observation-based testing.",
                    "Testability, fault size and the domain-to-range ratio: An eternal triangle.",
                    "Black-box test reduction using input-output analysis.",
                    "Progress in testing component-based software (abstract only).",
                    "Model checking Java programs (abstract only).",
                    "Slicing concurrent programs.",
                    "Improving the precision of INCA by preventing spurious cycles.",
                    "A thread-aware debugger with an open interface."
                ]
            }
        ]
    },
    {
        "year": "1998",
        "name": "ISSTA 1998",
        "info": "Clearwater Beach, Florida, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/1998",
                "sub_name": "Proceedings of ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 1998, Clearwater Beach, Florida, USA, March 2-5, 1998.",
                "count": 18,
                "papers": [
                    "Constructing Compact Models of Concurrent Java Programs.",
                    "Computation of Interprocedural Control Dependence.",
                    "Comparing Flow and Context Sensitivity on the Modification-Side-Effects Problem.",
                    "An Experiment in Estimating Reliability Growth Under Both Representative and Directed Testing.",
                    "On Random and Partition Testing.",
                    "The Most Influential Papers from the ISSTA Research Community (Panel).",
                    "What Can We Learn by Testing a Program?",
                    "Automatic Test Data Generation Using Constraint Solving Techniques.",
                    "An Applicable Test Data Generation Algorithm for Domain Errors.",
                    "Automated Program Flaw Finding Using Simulated Annealing.",
                    "A Visual Test Development Environment for GUI Systems.",
                    "Automatic Interoperability Test Generation for Source-to-Source Translators.",
                    "Improving Efficiency of Symbolic Model Checking for State-Based System Requirements.",
                    "Verifying Systems with Integer Constraints and Boolean Predicates: A Composite Approach.",
                    "Model Checking Without a Model: An Analysis of the Heart-Beat Monitor of a Telephone Switch Using VeriSoft.",
                    "On the Limit of Control Flow Analysis for Regression Test Selection.",
                    "Automated Regression Test Generation.",
                    "All-du-path Coverage for Parallel Programs."
                ]
            }
        ]
    },
    {
        "year": "1996",
        "name": "ISSTA 1996",
        "info": "San Diego, CA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/1996",
                "sub_name": "Proceedings of the 1996 International Symposium on Software Testing and Analysis, ISSTA 1996, San Diego, CA, USA, January 8-10, 1996.",
                "count": 31,
                "papers": [
                    "Test and Analysis of Software Architectures.",
                    "An Efficient State Space Generation for Analysis of Real-Time Systems.",
                    "An Incremental Approach to Structural Testing of Concurrent Software.",
                    "Improving the Accuracy of Petri Net-Based Analysis of Concurrent Programs.",
                    "Generating Functional Test Cases in-the-large for Time-critical Systems from Logic-based Specifications.",
                    "Daistish: Systematic Algebraic Testing for OO Programs in the Presence of Side-effects.",
                    "Structural Specification-Based Testing with ADL.",
                    "Issues in the Full Scale Use of Formal Methods for Automated Testing.",
                    "Experiences and Lessons from the Analysis of TCAS II.",
                    "Predicting Dependability by Testing.",
                    "Using Perturbation Analysis to Measure Variation in the Information Content of Test Sets.",
                    "Linear and Structural Event Sequence Analysis.",
                    "Separate Computation of Alias Information for Reuse.",
                    "Critical Slicing for Software Fault Localization.",
                    "The Path-Wise Approach to Data Flow Testing with Pointer Variables.",
                    "Unconstrained Duals and Their Use in Achieving All-Uses Coverage.",
                    "Software Error Analysis: A Real Case Study Involving Real Faults and Mutations.",
                    "Generation of Multi-Formalism State-Space Analysis Tools.",
                    "Beyond Traditional Program Slicing.",
                    "An Approach to Verification and Validation of a Reliable Multicasting Protocol.",
                    "A Semantic Model of Program Faults.",
                    "Towards a Structural Load Testing Tool.",
                    "Automated Test Data Generation for Programs with Procedures.",
                    "Reachability Analysis of Feature Interactions: A Progress Report.",
                    "Compositional Verification by Model Checking for Counter-Examples.",
                    "Elements of Style: Analyzing a Software Design Feature with a Counterexample Detector.",
                    "Constructing Abstract Models of Concurrent Real-Time Software.",
                    "Using Partial-Order Methods in the Formal Validation of Industrial Concurrent Programs.",
                    "Formal Specification and Verification of the Kernel Functional Unit of the OSI Session Layer Protocol and Service Using CCS.",
                    "A Logic-Model Semantics for SCR Software Requirements.",
                    "Why State-of-the-Art is not State-of-the-Practice (Panel Abstract)."
                ]
            }
        ]
    },
    {
        "year": "1994",
        "name": "ISSTA 1994",
        "info": "Seattle, WA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/1994",
                "sub_name": "Proceedings of the 1994 International Symposium on Software Testing and Analysis, ISSTA 1994, Seattle, WA, USA, August 17-19, 1994.",
                "count": 26,
                "papers": [
                    "Automatic Verification of Requirements Implementation.",
                    "Aslantest: A Symbolic Execution Tool for Testing Aslan Formal Specifications.",
                    "An Automated Tool for Analyzing Completeness of Equational Specifications.",
                    "Generating Test Suites for Software Load Testing.",
                    "Generating a Test Oracle from Program Documentation (Work in Progress).",
                    "Forward Computation of Dynamic Program Slices.",
                    "Applications of Feasible Path Analysis to Program Testing.",
                    "Test Data Generation and Feasible Path Analysis.",
                    "Protocol Testing: Review of Methods and Relevance for Software Testing.",
                    "Visualization using Timelines.",
                    "TAOS: Testing with Analysis and Oracle Support.",
                    "TOBAC: A Test Case Browser for Testing Object-Oriented Software.",
                    "Selecting Tests and Identifying Test Coverage Requirements for Modified Software.",
                    "Efficient Mutation Analysis: A New Approach.",
                    "Confidence Oriented Software Dependability Measurement (Abstract).",
                    "The Incorporation of Testing into Verification: Direct, Modular, and Hierarchical Correctness Degrees (Abstract).",
                    "The All Program Functions Criterion for Revealing Computation Errors (Abstract).",
                    "Testing a Safety-Critical Application.",
                    "An Experimental Approach to Analyzing Software Semantics Using Error Flow Information (Abstract).",
                    "Debugging Optimized Code Via Tailoring (Abstract).",
                    "A Meaningful Bound for Branch Testing (Abstract).",
                    "State-Space Analysis as an Aid to Testing (Abstract).",
                    "An Empirical Evaluation of Three Methods for Deadlock Analysis of Ada Tasking Programs.",
                    "Testing Races in Parallel Programs with an OtOt Strategy.",
                    "Analysis of Real-Time Programs with Simple Time Petri Nets.",
                    "Views on Software Testability (Panel Abstract)."
                ]
            }
        ]
    },
    {
        "year": "1993",
        "name": "ISSTA 1993",
        "info": "Cambridge, MA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/1993",
                "sub_name": "Proceedings of the 1993 International Symposium on Software Testing and Analysis, ISSTA 1993, Cambridge, MA, USA, June 28-30, 1993.",
                "count": 22,
                "papers": [
                    "Designing Programs to Check Their Work (Abstract).",
                    "Specifying Operational Profiles for Modules.",
                    "Test Template Framework: A Specification-Based Testing Case Study.",
                    "Abstract Analysis with Aspect.",
                    "Analyzing Refinements of State Based Specifications: The Case of TB Nets.",
                    "Metric-Driven Reengineering for Static Concurrency Analysis.",
                    "Using State Space Reduction Methods for Deadlock Analysis in Ada Tasking.",
                    "An Integrated General Purpose Automated Test Environment.",
                    "Implementation-Based Analysis and Testing of Prolog Programs.",
                    "Structured IV&V for the Space Shuttle Flight Software.",
                    "Load Testing Software Using Deterministic State Testing.",
                    "Faults on Its Sleeve: Amplifying Software Reliability Testing.",
                    "STATEMATE Applied to Statistical Software Testing.",
                    "A Practical Technique for Bounding the Time Between Events in Concurrent Real-Time Systems.",
                    "Analyzing Timing Requirements.",
                    "The Composability of ASTRAL Realtime Specifications.",
                    "Mutation Analysis Using Mutant Schemata.",
                    "Improved Serial Algorithms for Mutation Analysis.",
                    "Exploitation of Software Test Technology (Abstract).",
                    "Efficient Construction of Program Dependence Graphs.",
                    "Dynamic Impact Analysis: A Cost-Effective Technique to Enforce Error-Propagation.",
                    "An Information Flow Model of Fault Detection."
                ]
            }
        ]
    },
    {
        "year": "1991",
        "name": "TAV 1991",
        "info": "Victoria, British Columbia, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/issta/1991",
                "sub_name": "Proceedings of the Symposium on Testing, Analysis, and Verification, TAV 1991, Victoria, British Columbia, Canada, October 8-10, 1991.",
                "count": 19,
                "papers": [
                    "Comparison of Program Testing Strategies.",
                    "Reliability, Sampling, and Algorithmic Randomness.",
                    "Data Flow Analysis of Concurrent Systems that Use the Rendezvous Model of Synchronization.",
                    "Concurrency Analysis in the Presence of Procedures Using a Data-Flow Framework.",
                    "Compositional Reachability Analysis Using Process Algebra.",
                    "Dynamic Slicing in the Presence of Unconstrained Pointers.",
                    "Data Flow-Based Test Adequacy Analysis for Languages with Pointers.",
                    "Data Flow Coverage and the C Language.",
                    "Loop Monotonic Computations: An Approach for the Efficient Run-Time Detection of Races.",
                    "Executing Formal Specifications: The ASTRAL to TRIO Translation Approach.",
                    "Run-Time Consistency Checking of Algebraic Specifications.",
                    "The Effects of Optimizing Transformations on Data-Flow Adequate Test Sets.",
                    "Interprocedural Def-Use Associations in C Programs.",
                    "An Experimental Comparison of the Effectiveness of the All-Uses and All-Edges Adequacy Criteria.",
                    "Case Studies on Testing Object-Oriented Programs.",
                    "Experiments with an Improved Constrained Expression Toolset.",
                    "Formal Methods versus Software Engineering: Is There a Conflict?",
                    "The Weak Mutation Hypothesis.",
                    "How Strong is Weak Mutation?"
                ]
            },
            {
                "sub_name_abbr": "conf/issta/1989",
                "sub_name": "Proceedings of the ACM SIGSOFT '89 Third Symposium on Testing, Analysis, and Verification, TAV 1989, Key West, Florida, USA, December 13-15, 1989.",
                "count": 24,
                "papers": [
                    "Validating Programs without Specifications.",
                    "Real-Time Interval Logic for Reasoning about Executions of Real-Time Programs.",
                    "Verified Compilation in micro-Gypsy.",
                    "Theoretical Comparison of Testing Methods.",
                    "Some Observations on Partition Testing.",
                    "Reducing the Effects of Infeasible Paths in Branch Testing.",
                    "PMothra: Scheduling Mutants for Execution on a Hypercube.",
                    "Cesar: A Static Sequencing Constraint Analyzer.",
                    "Automating Software Analysis and Testing Using a Program Transformation System.",
                    "Approaches to Specification-Based Testing.",
                    "Module Test Case Generation.",
                    "A Practical Approach to Semantic Configuration Management.",
                    "The Logic of Propagation in the Inscape Environment.",
                    "Experiments in Automated Analysis of Concurrent Software Systems.",
                    "The Coupling Effect: Fact or Fiction.",
                    "Experimental Comparison of Three System Test Strategies Preliminary Report.",
                    "Preliminary Summary: FM89 Assessment of Formal Methods for Trustworthy Computer Systems.",
                    "Interprocedual Data Flow Testing.",
                    "The Implications of Program Dependencies for Software Testing, Debugging, and Maintenance.",
                    "Estimating the Number of Test Cases Required to Satisfy the All-du-paths Testing Criterion.",
                    "Testing the Correctness of Tasking Supervisors with TSL Specifications.",
                    "Integrated Concurrency Analysis in a Software Development Enviornment.",
                    "Automatic Generation of Test Scripts from Formal Test Specifications.",
                    "Integrating Testing Techniques Through Process Programming."
                ]
            }
        ]
    }
]