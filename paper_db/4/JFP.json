[
    {
        "name": "JFP",
        "year": "2021",
        "info": "Volume 31, 2021",
        "count": 31,
        "papers": [
            "PhD Abstracts.",
            "Not by equations alone: Reasoning with extensible effects.",
            "Protocol combinators for modeling, testing, and execution of distributed systems.",
            "Integrating region memory management and tag-free generational garbage collection.",
            "Ready, Set, Verify! Applying hs-to-coq to real-world Haskell code.",
            "Linear capabilities for fully abstract compilation of separation-logic-verified code.",
            "Lambda calculus with algebraic simplification for reduction parallelisation: Extended study.",
            "Cubical Agda: A dependently typed programming language with univalence and higher inductive types.",
            "StkTokens: Enforcing well-bracketed control flow and stack encapsulation using linear capabilities.",
            "Explainable dynamic programming.",
            "Higher order functions and Brouwer's thesis.",
            "Proof-directed program transformation: A functional account of efficient regular expression matching.",
            "Composable data visualizations.",
            "PhD Abstracts.",
            "How to design co-programs.",
            "What is an education paper?",
            "A trustful monad for axiomatic reasoning with probability and nondeterminism.",
            "Verified secure compilation for mixed-sensitivity concurrent programs.",
            "Real-time MLton: A Standard ML runtime for real-time functional programs.",
            "Blame and coercion: Together again for the first time.",
            "Gradual type theory.",
            "A type- and scope-safe universe of syntaxes with binding: their semantics and proofs.",
            "Segments: An alternative rainfall problem.",
            "Extensional equality preservation and verified generic programming.",
            "Cogent: uniqueness types and certifying compilation.",
            "On the correctness of monadic backward induction.",
            "Relational cost analysis in a functional-imperative setting.",
            "Taming the Merge Operator.",
            "A greedy algorithm for dropping digits.",
            "Parameterized cast calculi and reusable meta-theory for gradually typed lambda calculi.",
            "Longest segment of balanced parentheses: an exercise in program inversion in a segment problem."
        ]
    },
    {
        "name": "JFP",
        "year": "2020",
        "info": "Volume 30, 2020",
        "count": 28,
        "papers": [
            "PhD Abstracts.",
            "Elaborating dependent (co)pattern matching: No pattern left behind.",
            "An optimal, purely functional implementation of the Garsia-Wachs algorithm.",
            "Review of \"Thinking with Types\"* by Sandy Maguire, LeanPub, 2019.",
            "Effect handlers via generalised continuations.",
            "Review of \"The Little Prover\" by Daniel P. Friedman and Carl Eastlund, MIT Press, 2015.",
            "Many more predecessors: A representation workout.",
            "Effekt: Capability-passing style for type- and effect-safe, extensible effect handlers in Scala.",
            "Doo bee doo bee doo.",
            "Heterogeneous binary random-access lists.",
            "Build systems \u00e0 la carte: Theory and practice.",
            "Fault-tolerant functional reactive programming (extended version).",
            "Local algebraic effect theories.",
            "Tight typings and split bounds, fully developed.",
            "Explicit effect subtyping.",
            "Type-Driven Development with Idris.",
            "Leibniz equality is isomorphic to Martin-L\u00f6f identity, parametrically.",
            "PhD Abstracts.",
            "Review of \"Algorithms for Functional Programming\" by John David Stone, Springer-Verlag, 2018.",
            "Review of \"Functional and Reactive Domain Modeling\" by Debasish Ghosh, Manning, 2017, ISBN 978-1-617-29224-8.",
            "Faster coroutine pipelines: A reconstruction.",
            "Generalized monoidal effects and handlers.",
            "A focused solution to the avoidance problem.",
            "Calculating correct compilers II: Return of the register machines.",
            "Elastic sheet-defined functions: Generalising spreadsheet functions to variable-size input arrays.",
            "Typed dataspace actors.",
            "Runtime verification and validation of functional reactive systems.",
            "Review of \"Algorithm Design with Haskell\" by Richard Bird and Jeremy Gibbons, Cambridge University Press, 2020."
        ]
    },
    {
        "name": "JFP",
        "year": "2019",
        "info": "Volume 29, 2019",
        "count": 20,
        "papers": [
            "PhD Abstracts.",
            "The verified CakeML compiler backend.",
            "COCHIS: Stable and coherent implicits.",
            "How to evaluate the performance of gradual type systems.",
            "A theory of RPC calculi for client-server model.",
            "Folding left and right over Peano numbers.",
            "The full-reducing Krivine abstract machine KN simulates pure normal-order reduction in lockstep: A proof via corresponding calculus.",
            "How to find a fake coin.",
            "A SQL to C compiler in 500 lines of code.",
            "PhD Abstracts.",
            "Constructive Galois Connections.",
            "Perturbation confusion in forward automatic differentiation of higher-order functions.",
            "Emerging languages: An alternative approach to teaching programming languages.",
            "Pure iso-type systems.",
            "On the expressive power of user-defined effects: Effect handlers, monadic reflection, delimited control.",
            "A relational logic for higher-order programs.",
            "Gradual session types.",
            "Review of \"The Haskell School of Music: from Signals to Symphonies, \" by Paul Hudak and Donya Quick, Cambridge University Press, 2018.",
            "POPLMark reloaded: Mechanizing proofs by logical relations.",
            "How to prove decidability of equational theories with second-order computation analyser SOL."
        ]
    },
    {
        "name": "JFP",
        "year": "2018",
        "info": "Volume 28, 2018",
        "count": 22,
        "papers": [
            "The adequacy of Launchbury's natural semantics for lazy evaluation.",
            "Systematic identification and communication of type errors.",
            "A tutorial on computational classical logic and the sequent calculus.",
            "An extended account of contract monitoring strategies as patterns of communication.",
            "Infusing an HtDP-based CS1 with distributed programming using functional video games.",
            "Editorial for the Special Issue on Parallel and Concurrent Functional Programming.",
            "A programming model and foundation for lineage-based distributed computation.",
            "Special Issue on Programming Languages for Big Data Editorial.",
            "Foundations of dependent interoperability.",
            "Push versus pull-based loop fusion in query engines.",
            "Size-based termination of higher-order rewriting.",
            "Proof-relevant unification: Dependent pattern matching with only the axioms of your type theory.",
            "Dynamic witnesses for static type errors (or, Ill-Typed Programs Usually Go Wrong).",
            "Batcher's odd-even merging network revealed.",
            "Applicative bidirectional programming: Mixing lenses and semantic bidirectionalization.",
            "Ghostbuster: A tool for simplifying and converting GADTs.",
            "PhD Abstracts.",
            "Abstract allocation as a unified approach to polyvariance in control-flow analyses.",
            "On constructing 2-3 trees.",
            "Iris from the ground up: A modular foundation for higher-order concurrent separation logic.",
            "Parberry's pairwise sorting network revealed.",
            "1ML - Core and modules united."
        ]
    },
    {
        "name": "JFP",
        "year": "2017",
        "info": "Volume 27, 2017",
        "count": 27,
        "papers": [
            "Correctness of compiling polymorphism to dynamic typing.",
            "Programming with ornaments.",
            "Higher order symbolic execution for contract verification and refutation.",
            "A simple library implementation of binary sessions.",
            "Flexible dynamic information flow control in the presence of exceptions.",
            "Normal-order reduction grammars.",
            "No value restriction is needed for algebraic effects and handlers.",
            "Interactive programming in Agda - Objects and graphical user interfaces.",
            "The essence of ornaments.",
            "A comprehensible guide to a new unifier for CIC including universe polymorphism and overloading.",
            "Modular, higher order cardinality analysis in theory and practice.",
            "Call-by-name extensionality and confluence.",
            "Finiteness and rational sequences, constructively.",
            "The calculus of dependent lambda eliminations.",
            "Special issue on Programming with Dependent Types Editorial.",
            "PhD Abstracts.",
            "Quick specifications for the busy programmer.",
            "Backtracking with cut via a distributive law and left-zero monoids.",
            "Fair enumeration combinators.",
            "Compiling a 50-year journey.",
            "Notions of computation as monoids.",
            "Computation semantics of the functional scientific workflow language Cuneiform.",
            "Contributions to a computational theory of policy advice and avoidability.",
            "Algebraic data integration.",
            "PhD Abstracts.",
            "Capability-based localization of distributed and heterogeneous queries.",
            "An algebra for distributed Big Data analytics."
        ]
    },
    {
        "name": "JFP",
        "year": "2016",
        "info": "Volume 26, 2016",
        "count": 24,
        "papers": [
            "Unifying structured recursion schemes - An Extended Study.",
            "Well-founded recursion with copatterns and sized types.",
            "Efficiency of lambda-encodings in total type theory.",
            "Testing noninterference, quickly.",
            "Transparent fault tolerance for scalable functional computation.",
            "A language for hierarchical data parallel design-space exploration on GPUs.",
            "OCaml-Java: The Java Virtual Machine as the target of an OCaml compiler.",
            "PhD Abstracts.",
            "Composable scheduler activations for Haskell.",
            "PAEAN: Portable and scalable runtime support for parallel Haskell dialects.",
            "Skeleton composition versus stable process systems in Eden.",
            "A characterization of lambda-terms transforming numerals.",
            "Romeo: A system for more flexible binding-safe programming.",
            "Preface for special section from FLOPS 2014.",
            "Safe zero-cost coercions for Haskell.",
            "Eliminating dependent pattern matching without K.",
            "Review of spreadsheet implementation technology: Basics and extensions, by Peter Sestoft , MIT Press, 2014, ISBN 978-0-262-52664-7.",
            "Homotopical patch theory.",
            "Gradual type-and-effect systems.",
            "Special issue dedicated to ICFP 2014: Editorial.",
            "Linear lambda terms as invariants of rooted trivalent maps.",
            "Reasoning about multi-stage programs.",
            "Oracle-guided scheduling for controlling granularity in implicitly parallel languages.",
            "PhD Abstracts."
        ]
    },
    {
        "name": "JFP",
        "year": "2015",
        "info": "Volume 25, 2015",
        "count": 24,
        "papers": [
            "Counting and generating terms in the binary lambda calculus.",
            "Teaching types with a cognitively effective worked example format.",
            "Calculating a linear-time solution to the densest-segment problem.",
            "PhD abstracts.",
            "Interleaving data and effects.",
            "Pure type systems with explicit substitutions.",
            "Verified decision procedures for MSO on words based on derivatives of regular expressions.",
            "Type-based amortized resource analysis with integers and arrays.",
            "Review of \"Learn you some Erlang for great good! A beginner's guide\", by Fred H\u00e9bert, No Starch Press, 2013, \u00a326.80 (paperback), ISBN: 978-1-59327-435-1.",
            "Review of \"A functional start to computing with Python\", Ted Herman, CRC Press, 2014, ISBN 978-1-4665-0455-4.",
            "Calculating correct compilers.",
            "A representation theorem for second-order functionals.",
            "Mtac: A monad for typed tactic programming in Coq.",
            "Understanding beginners' mistakes with Haskell.",
            "Efficient parallel and incremental parsing of practical context-free languages.",
            "Generating constrained random data with uniform distribution.",
            "Formalisation in higher-order logic and code generation to functional languages of the Gauss-Jordan algorithm.",
            "PhD Abstracts.",
            "Evaluation of splittable pseudo-random generators.",
            "Indexed containers.",
            "CUFP'13 scribe's report.",
            "How to mingle streams.",
            "Thinking Functionally with Haskell by Richard Bird, Cambridge University Press, 2014.",
            "PhD Abstracts."
        ]
    },
    {
        "name": "JFP",
        "year": "2014",
        "info": "Volume 24, 2014",
        "count": 24,
        "papers": [
            "Delimited control and computational effects.",
            "Implicit self-adjusting computation for purely functional programs.",
            "Work it, wrap it, fix it, fold it.",
            "Systematic Program Design: From Clarity to Efficiency, by Yanhong Annie Liu, Cambridge University Press, 2013, ISBN: 978-1-107-03660-4.",
            "Special Issue Dedicated to ICFP 2012: Editorial.",
            "Elaborating intersection and union types.",
            "On the complexity of stream equality.",
            "Pushdown flow analysis with abstract garbage collection.",
            "Proof-producing translation of higher-order logic into pure and stateful ML.",
            "Transporting functions across ornaments.",
            "Propositions as sessions.",
            "Realm of Racket, by Forrest Bice, Rose DeMaio, Spencer Florence, Feng-Yun Mimi Lin, Scott Lindeman, Nicole Nussbaum, Eric Peterson, Ryan Plessner, David Van Horn, Matthias Felleisen and Conrad Barski, MD, No Starch Press, San Franscisco, CA, 2013, \u00a327.49. ISBN-10: 1-59327-491-2.",
            "Beginning Haskell, by Alejandro Serrano Mena, Apress, New York City, NY, 2014, ISBN-10: 1430262508, 428 pp.",
            "Deletion: The curse of the red-black tree.",
            "The Kansas University rewrite engine - A Haskell-Embedded Strategic Programming Language with Custom Closed Universes.",
            "PhD Abstracts.",
            "Review: Practical Foundations for Programming Languages, by Robert Harper, Cambridge University Press, New York, December2012, English, ISBN-10: 1107029570, Hardcover, 487 pp.",
            "Computational Semantics with Functional Programming, byJan van Eijck andChristina Unger.",
            "F-ing modules.",
            "Introduction to the art of programming using Scala, by Mark C. Lewis, Chapman and Hall/CRC Press, 2012, \u00a3 46.99 (paperback) ISBN-10: 1439896666.",
            "Editorial.",
            "Special Issue on Run-Time Systems and Target Platforms for Functional Languages: Editorial.",
            "MultiMLton: A multicore-aware runtime for standard ML.",
            "A run-time representation of scheme record types."
        ]
    },
    {
        "name": "JFP",
        "year": "2013",
        "info": "Volume 23, 2013",
        "count": 23,
        "papers": [
            "An insider's look at LF type reconstruction: everything you (n)ever wanted to know.",
            "Syntactic soundness proof of a type-and-capability system with hidden state.",
            "Solving the snake cube puzzle in Haskell.",
            "Metamorphism in jigsaw.",
            "An in-situ algorithm for expanding a graph.",
            "EditorArrow: An arrow-based model for editor-based programming.",
            "Building Web Applications with Erlang, by Zachary Kessin, O'Reilly Media, Inc., 2012, ISBN 97-81-4493-20652.",
            "Pearls of Functional Algorithm Design, by Richard Bird, Cambridge University Press, September 2010, \u00a335.00, US $ 60.00. ISBN: 978052151338 (hardback), 286pp.",
            "A library for polymorphic dynamic typing.",
            "A consistent semantics of self-adjusting computation.",
            "Refactoring tools for functional languages.",
            "Learn You a Haskell for Great Good! A Beginner's Guide, by Miran Lipovaca, No Starch Press, April 2011, ISBN-10: 1593272839; ISBN-13: 978-1593272838, 376 pp.",
            "OCaml from the Very Beginning, by John Whitington, Coherent Press, 2013, \u00a3 25.99, US $37.99. ISBN-10: 0957671105 (paperback), 204 pp.",
            "Special Issue Dedicated to ICFP 2011 Editorial.",
            "How to make ad hoc proof automation less ad hoc.",
            "Secure distributed programming with value-dependent types.",
            "Modular verification of preemptive OS kernels.",
            "Enhancing semantic bidirectionalization via shape bidirectionalizer plug-ins.",
            "Idris, a general-purpose dependently typed programming language: Design and implementation.",
            "Counting and generating lambda terms.",
            "Fractal image compression.",
            "Contextual equivalence for inductive definitions with binders in higher order typed functional programming.",
            "Commercial users of functional programming workshop report."
        ]
    },
    {
        "name": "JFP",
        "year": "2012",
        "info": "Volume 22, 2012",
        "count": 26,
        "papers": [
            "CUFP 2011 Workshop Report.",
            "A compiled implementation of normalisation by evaluation.",
            "Semantic subtyping with an SMT solver.",
            "Proofs for free - Parametricity for dependent types.",
            "Pure Type System conversion is always typable.",
            "Macros that Work Together - Compile-time bindings, partial expansion, and definition contexts.",
            "Modeling in Event-B - System and Software Engineering Jean-Raymond Abrial Cambridge University Press, May 2010 ISBN-10: 0521895561.",
            "Drawing Programs: The Theory and Practice of Schematic Functional Programming, by Tom Addis and Jan Addis Springer, 2010, ISBN 978-1-84882-617-5, 379pp.",
            "Editorial.",
            "Contracts made manifest.",
            "Manipulating accumulative functions by swapping call-time and return-time computations.",
            "Generic top-down discrimination for sorting and partitioning in linear time.",
            "Bookreview JFP: Domain-Specific Languages by Martin Fowler The Addison Wesley Signature Series.",
            "Editorial - Special issue dedicated to ICFP 2010.",
            "Lazy tree splitting.",
            "Fortifying macros.",
            "The impact of higher-order state and control effects on local relational reasoning.",
            "Every bit counts: The binary representation of typed data and programs.",
            "The Reduceron reconfigured and re-evaluated.",
            "A unified treatment of syntax with binders.",
            "Systematic abstraction of abstract machines.",
            "When Maybe is not good enough.",
            "Finally tagless observable recursion for an abstract grammar model.",
            "MRI: Modular reasoning about interference in incremental programming.",
            "Functional Programming for Java Developers - Tools for Better Concurrency, Abstraction, and Agility, By Wampler, Media, July 2011, ISBN-13: 978-1449311032, 90pp.",
            "Steps in Scala: An introduction to Object-Functional Programming By Loverdos, Apostolos Syropoulos, Cambridge University Press, 2010, 504 pp, ISBN 0521747589."
        ]
    },
    {
        "name": "JFP",
        "year": "2011",
        "info": "Volume 21, 2011",
        "count": 26,
        "papers": [
            "The Soccer-Fun project.",
            "A calculus for hardware description.",
            "Functional and dynamic programming in the design of parallel prefix networks.",
            "Review: Lambda-Calculus and Combinators: An Introduction, Second Edition by J. R. Hindley and J. P. Seldin.",
            "Building a consensus: A rectangle covering problem.",
            "The Hough transform.",
            "More on balanced diets.",
            "Roles, stacks, histories: A triple for Hoare.",
            "Short note: Strict unwraps make worker/wrapper fusion totally correct.",
            "Language Implementation Patterns: Create your own Domain-Specific and General Programming Languages, by Terence Parr, Pragmatic Bookshelf, http://www.pragprog.com, ISBN 9781934356456.",
            "Foundations of F# Robert Pickering, Apress, 2007 ISBN 10: 1-59059-757-5.",
            "Typed quote/antiquote or: Compile-time parsing.",
            "Structural recursion with locally scoped names.",
            "Balancing weight-balanced trees.",
            "A combinator library for the design of railway track layouts.",
            "Special Issue Dedicated to ICFP 2009 Editorial.",
            "OutsideIn(X) Modular type inference with local assumptions.",
            "Purely functional lazy nondeterministic programming.",
            "Causal commutative arrows.",
            "Non-parametric parametricity.",
            "A note on the genuine Sieve of Eratosthenes.",
            "Sorted - Verifying the Problem of the Dutch National Flag in Agda.",
            "Embedding an interpreted language using higher-order functions and types.",
            "Shifting the stage - Staging with delimited control.",
            "Handbook of Practical Logic and Automated Reasoning, by John Harrison, Cambridge University Press, 2009 ISBN 9780521899574.",
            "How to think about algorithms, by Jeff Edmonds, Cambridge University Press, ISBN 0521614104."
        ]
    },
    {
        "name": "JFP",
        "year": "2010",
        "info": "Volume 20, 2010",
        "count": 19,
        "papers": [
            "Editorial.",
            "\"Little language\" project modules.",
            "Linear type theory for asynchronous session types.",
            "The arrow calculus.",
            "Ott: Effective tool support for the working semanticist.",
            "Experience report: Functional programming in C-Rules.",
            "Lightweight checkpointing for concurrent ML.",
            "Parametricity, type equality, and higher-order polymorphism.",
            "Special Issue on Generic Programming Editorial.",
            "Formal polytypic programs and proofs.",
            "Generic programming with C++ concepts and Haskell type classes - a comparison.",
            "Scala for generic programmers.",
            "Factorising folds for faster functions.",
            "A lightweight approach to datatype-generic rewriting.",
            "Special Issue Dedicated to ICFP 2008 Editorial.",
            "Space profiling for parallel functional programs.",
            "Concrete stream calculus: An extended study.",
            "Implicitly threaded parallelism in Manticore.",
            "NixOS: A purely functional Linux distribution."
        ]
    },
    {
        "name": "JFP",
        "year": "2009",
        "info": "Volume 19, 2009",
        "count": 36,
        "papers": [
            "Linear, bounded, functional pretty-printing.",
            "Control effects as a modality.",
            "Commercial uses: Going functional on exotic trades.",
            "From natural semantics to C: A formal derivation of two STG machines.",
            "The Genuine Sieve of Eratosthenes.",
            "Type-safe higher-order channels with channel locality.",
            "Editorial.",
            "Type-safe pattern combinators.",
            "Coherence of subsumption for monadic types.",
            "Regular-expression derivatives re-examined.",
            "First-class patterns.",
            "The worker/wrapper transformation.",
            "Software Abstractions: Logic, Language, and Analysis by Daniel Jackson, The MIT Press, 2006, 366pp, ISBN 978-0262101141.",
            "Peter Van Roy and Seif Haridi. Concepts, Techniques, and Models of Computer Programming. The MIT Press, 2004. ISBN: 0262220695 Price $70. 930pp.",
            "Programming in Haskell by Graham Hutton, Cambridge University Press, 2007, 184 pp., ISBN 0-521-69269-5.",
            "Programming Erlang - Software for a Concurrent World by Joe Armstrong, Pragmatic Bookshelf, 2007, p. 536. ISBN-10: 193435600X.",
            "FUNCTIONAL PEARL. Proof-directed debugging - Corrigendum.",
            "Preface.",
            "Gabriel-Ulmer duality and Lawvere theories enriched over a general base.",
            "Implementing a normalizer using sized heterogeneous types.",
            "Big-step normalisation.",
            "Parameterised notions of computation.",
            "The essence of the Iterator pattern.",
            "Categorical semantics for arrows.",
            "An induction principle for nested datatypes in intensional type theory.",
            "Algebras for combinatorial search.",
            "Editorial.",
            "The Bird Tree.",
            "Finally tagless, partially evaluated: Tagless staged interpreters for simpler typed languages.",
            "Algebra of programming in Agda: Dependent types for relational program derivation.",
            "The lambda-calculus with constructors: Syntax, confluence and separation.",
            "Purely Functional 1-2 Brother Trees.",
            "A domain-specific language for experimental game theory.",
            "Monadic constraint programming.",
            "Small-step and big-step semantics for call-by-need.",
            "Essentials of Programming Languages (third edition) by Daniel P. Friedman and Mitchell Wand, MIT Press, ISBN 978-0-262-06279-4, 2008."
        ]
    },
    {
        "name": "JFP",
        "year": "2008",
        "info": "Volume 18, 2008",
        "count": 23,
        "papers": [
            "Applicative programming with effects.",
            "Efficient execution in an automated reasoning environment.",
            "An operational semantics for Scheme.",
            "Boxes go bananas: Encoding higher-order abstract syntax with parametric polymorphism.",
            "A type system with usage aspects.",
            "Types and trace effects of higher order programs.",
            "HM(X) type inference is CLP(X) solving.",
            "Lightweight family polymorphism.",
            "Translation of tree-processing programs into stream-processing programs based on ordered linear type.",
            "Control reduction theories: the benefit of structural substitution.",
            "Logic in Computer Science: Modelling and Reasoning About Systems by Michael Huth and Mark Ryan, second edition. ISBN 0 521 54310 X.",
            "Data types \u00e0 la carte.",
            "Dynamic rebinding for marshalling and update, via redex-time and destruct-time reduction.",
            "Safety of N\u00f6cker's strictness analysis.",
            "Caml trading - experiences with functional programming on Wall Street.",
            "Editorial.",
            "A pattern for almost compositional functions.",
            "Modular development of certified program verifiers with a proof assistant, .",
            "Transactional events.",
            "Building language towers with Ziggurat.",
            "Algebraic fusion of functions with an accumulating parameter and its improvement.",
            "Exploiting reachability and cardinality in higher-order flow analysis.",
            "Hoare type theory, polymorphism and separation."
        ]
    },
    {
        "name": "JFP",
        "year": "2007",
        "info": "Volume 17, 2007",
        "count": 24,
        "papers": [
            "Practical type inference for arbitrary-rank types.",
            "Understanding functional dependencies via constraint handling rules.",
            "Spreadsheet functional programming.",
            "An extended comparative study of language support for generic programming.",
            "Type sharing constraints and undecidability.",
            "Dependent ML An approach to practical programming with dependent types.",
            "MC2 A module calculus for Pure Type Systems.",
            "An object-oriented calculus with term constraints.",
            "Warnings for pattern matching.",
            "SMIL 2.0 Interactive Multimedia for Web and Mobile Devices by C. A. Dick Bulterman and Lloyd Rutledge, Springer X.media.publishing, 2004, 440pp, ISBN 3-540-20234-X.",
            "Programming Languages and Operational Semantics by Fern\u00e1ndez Maribel, King's College Publications, 2004, ISBN 0954300637.",
            "The Haskell School of Expression by Hudak Paul, Cambridge Univerity Press, 20001.",
            "Inductive Synthesis of Functional Programs by U. Schmid, Springer Verlag, 2003, 420pp, ISBN 3540401741.",
            "Preface.",
            "Recursive type generativity.",
            "A logical analysis of aliasing in imperative higher-order functions.",
            "Acute: High-level programming language design for distributed computation.",
            "Mechanizing metatheory in a logical framework.",
            "Engineering Software Correctness.",
            "A monadic framework for delimited continuations.",
            "Monadic augment and generalised short cut fusion.",
            "What is the meaning of these constant interruptions?",
            "On one-pass CPS transformations.",
            "Verification of Reactive Systems by Klaus Schneider Springer Verlag, 2003, 600pp, ISBN 3-540-00296-0."
        ]
    },
    {
        "name": "JFP",
        "year": "2006",
        "info": "Volume 16, 2006",
        "count": 30,
        "papers": [
            "Educational Pearl: Biological sequence similarity.",
            "Functional Pearls: Finding celebrities: A lesson in functional programming.",
            "Functional Pearls: Probabilistic functional programming in Haskell.",
            "Efficient manipulation of binary data using pattern matching.",
            "Calculating PSSM probabilities with lazy dynamic programming.",
            "Type-based confinement.",
            "Functional Pearl: Marble mingling.",
            "Remarks on the equational theory of non-normalizing pure type systems.",
            "A reflective functional language for hardware design and theorem proving.",
            "Finger trees: a simple general-purpose data structure.",
            "Pure type systems with judgemental equality.",
            "Educational Pearl: Automata via macros.",
            "Theoretical Pearl: A simple proof of a folklore theorem about delimited control.",
            "Functional Pearl: Enumerating the rationals.",
            "Gencel: a program generator for correct spreadsheets.",
            "Consistency of the theory of contexts.",
            "Introduction.",
            "Sound and complete models of contracts.",
            "Making a fast curry: push/enter vs. eval/apply for higher-order languages.",
            "Generics for the masses.",
            "Monadic regions.",
            "Multi-return function call.",
            "Slideshow: functional presentations.",
            "Static analysis for path correctness of XML queries.",
            "Educational Pearl: 'Proof-directed debugging' revisited for a first-order version.",
            "Functional Pearl: A program to solve Sudoku.",
            "Type-safe run-time polytypic programming.",
            "Regular expression filters for XML.",
            "Phantom types and subtyping.",
            "Featherweight generic confinement."
        ]
    },
    {
        "name": "JFP",
        "year": "2005",
        "info": "Volume 15, 2005",
        "count": 29,
        "papers": [
            "Church numerals, twice!",
            "Models for machine learning and data mining in functional programming.",
            "An intuitionistic [lambda]-calculus with exceptions.",
            "Web programming in Scheme with LAML.",
            "Non-determinism analyses in a parallel-functional language.",
            "Lambda and pi calculi, CAM and SECD machines.",
            "\"Language-Based Security\".",
            "Stack-based access control and secure information flow.",
            "Interfaces for stack inspection.",
            "Correspondence assertions for process synchronization in concurrent communications.",
            "A monadic analysis of information flow security with mutable state.",
            "Noninterference through flow analysis.",
            "Shared memory multiprocessor support for functional array processing in SAC.",
            "VoDKA: Developing a Video-on-Demand Server using Distributed Functional Programming.",
            "Parallel functional programming in Eden.",
            "Loci: a rule-based framework for parallel multi-disciplinary simulation synthesis.",
            "Embedded interpreters.",
            "Deciding validity in a spatial logic for trees.",
            "A functional toolkit for morphological and phonological processing, application to a Sanskrit tagger.",
            "A parallel SML compiler based on algorithmic skeletons.",
            "Educational Pearl: A Nanopass framework for compiler education.",
            "Theoretical Pearls: A bargain for intersection types: a simple strong normalization proof.",
            "Countdown: A case study in Origami programming.",
            "Quantitative static analysis of distributed systems.",
            "Skribe: a functional authoring language.",
            "Typed lambda-calculi with one binder.",
            "Meta-programming through typeful code representation.",
            "The logic of demand in Haskell.",
            "Staged computation with names and necessity."
        ]
    },
    {
        "name": "JFP",
        "year": "2004",
        "info": "Volume 14, 2004",
        "count": 43,
        "papers": [
            "Introduction to the Special Issue on Dependent Type Theory Meets Practical Programming.",
            "Dependent types ensure partial correctness of theorem provers.",
            "Building reliable, high-performance networks with the Nuprl proof development system.",
            "The view from the left.",
            "The risks and benefits of teaching purely functional programming in first year.",
            "\"Proof, Language and Interaction, Essays in Honour of Robin Milner\" by Gordon Plotkin, Colin Sterling and Mads Tofte (eds.), Foundations of Computing Series, MIT Press 2000.",
            "The Functional \"C\" experience.",
            "Grammatical Framework.",
            "Constructed product result analysis for Haskell.",
            "\"An Introduction to Computing with Haskell\" by Manuel M. T. Chakravarty and Gabrielle C. Keller, Pearson SprintPrint, 2002, ISBN 1 74009 404 2.",
            "\"Practical Aspects of Declarative Languages\" by Shriram Krishnamurthi and C. R. Ramakrishnan (eds.), LNCS 2257, Springer-Verlag, 2002. ISBN 3-540-43092-X.",
            "Escape from Zurg: an exercise in logic programming.",
            "The recursive record semantics of objects revisited.",
            "Composition of functions with accumulating parameters.",
            "Editorial.",
            "The structure and interpretation of the computer science curriculum.",
            "Transformation techniques for context-sensitive rewrite systems.",
            "Functional programming with the FC++ library.",
            "Computer literacy via Scheme and web programming.",
            "Global variables in Haskell.",
            "Enumerating the strings of regular languages.",
            "Linearization of the lambda-calculus and its relation with intersection type systems.",
            "Two-level types and parameterized modules.",
            "Knowledge Representation, Reasoning and Declarative Problem Solving by C. Baral, Cambridge University Press, 2003.",
            "Reasoning About Program Transformations: Imperative Programming and Flow of Data by Jean-Francois Collard, Springer-Verlag, 2003.",
            "D\u00e9veloppement d'applications avec Objective CAML by E. Chailloux, P. Manoury and B. Pagano, O'Reilley, 2003.",
            "The Fun of Programming edited by Jeremy Gibbons and Oege de Moor, Palgrave Macmillan, 2003.",
            "Programming Methodology A. McIver and C. Morgan, editors, Springer-Verlag, 2002.",
            "Program Construction: Calculating Implementations from Specifications by R.C. Backhouse, John Wiley & Sons, 2004.",
            "Special issue on functional pearls Editorial.",
            "Inverting the Burrows-Wheeler transform.",
            "On tiling a chessboard.",
            "Linear lambda calculus and PTIME-completeness.",
            "Parsing permutation phrases.",
            "Functional satisfaction.",
            "Concurrent distinct choices.",
            "Functional chart parsing of context-free grammars.",
            "Type-safe cast.",
            "Derivation of a logarithmic time carry lookahead addition circuit.",
            "Composing fractals.",
            "Pickler combinators.",
            "Parallel Parsing Processes.",
            "Calculating the Sieve of Eratosthenes."
        ]
    },
    {
        "name": "JFP",
        "year": "2003",
        "info": "Volume 13, 2003",
        "count": 67,
        "papers": [
            "Haskell 98: Introduction.",
            "Haskell 98: Lexical Structure.",
            "Haskell 98: Expressions.",
            "Haskell 98: Declarations and Bindings.",
            "Haskell 98: Modules.",
            "Haskell 98: Predefined Types and Classes.",
            "Haskell 98: Basic Input/Output.",
            "Haskell 98: Standard Prelude.",
            "Haskell 98: Syntax Reference.",
            "Haskell 98: Specification of Derived Instances.",
            "Haskell 98: Compiler Pragmas.",
            "Haskell 98 Libraries: Rational Numbers.",
            "Haskell 98 Libraries: Complex Numbers.",
            "Haskell 98 Libraries: Numeric Functions.",
            "Haskell 98 Libraries: Indexing Operations.",
            "Haskell 98 Libraries: Arrays.",
            "Haskell 98 Libraries: List Utilities.",
            "Haskell 98 Libraries: Maybe Utilities.",
            "Haskell 98 Libraries: Character Utilities.",
            "Haskell 98 Libraries: Monad Utilities.",
            "Haskell 98 Libraries: Input/Output.",
            "Haskell 98 Libraries: Directory Functions.",
            "Haskell 98 Libraries: System Functions.",
            "Haskell 98 Libraries: Dates and Times.",
            "Haskell 98 Libraries: Locales.",
            "Haskell 98 Libraries: CPU Time.",
            "Haskell 98 Libraries: Random Numbers.",
            "Haskell 98 Libraries: Bibliography.",
            "Special issue on 'Logical frameworks and metalanguages'.",
            "Setoids in type theory.",
            "TinkerType: a language for playing with formal systems.",
            "PAL+: a lambda-free logical framework.",
            "Termination of rewriting in the Calculus of Constructions.",
            "A fully adequate shallow embedding of the [pi]-calculus in Isabelle/HOL with mechanized syntax analysis.",
            "Semantics, Applications, and Implementation of Program Generation.",
            "Compiling embedded languages.",
            "AutoBayes: a system for generating data analysis programs from statistical models.",
            "Specification and correctness of lambda lifting.",
            "Closed types for a safe imperative MetaML.",
            "Program specialization for execution monitoring.",
            "Pragmatic aspects of reusable program generators.",
            "Inlining as staged computation.",
            "Compiling for template-based run-time code generation.",
            "Verification of non-functional programs using interpretations in type theory.",
            "On bunched typing.",
            "Short cut fusion is correct.",
            "Theoretical Pearls.",
            "\"Trends in Functional Programming\" (volumes 1 & 2) by Greg Michaelson, Phil Trinder and Hans-Wolfgang Loidl (editors volume 1), and Stephen Gilmore (editor volume 2). Intellect Books, Bristol, 2001, 2002.",
            "\"Implicit parallel programming in pH\" by R. S. Nikhil and Arvind, Morgan Kaufmann, 2001.",
            "\"Structure and Interpretation of Classical Mechanics\" by Gerald Jay Sussman and Jack Wisdom with Meinhard E. Mayer, The MIT Press; 2001, ISBN 0262194554.",
            "\"Algorithms: A Functional Programming Approach\" by Fethi Rabhi and Guy Lapalme, Addison-Wesley, 1999, ISBN 0-201-59604-0, xi + 235pp.",
            "\"Essentials of Programming Languages\" (2nd ed) by Daniel P. Friedman, Mitchell Wand and Christopher T. Haynes, MIT Press, ISBN 0-262-06217-8, 2001.",
            "\"The World of Scripting Languages\" by David W. Barron, John Wiley & Sons, 2000, ISBN 0-471-99886-9.",
            "The Educational Pearls column.",
            "Welcome to the Educational Pearls Column.",
            "Programming graphical user interfaces with Scheme.",
            "Syntactic accidents in program analysis: on the impact of the CPS transformation.",
            "CPS transformation of flow information.",
            "CPS transformation of flow information, Part II: administrative reductions.",
            "Formatting: a class act.",
            "Producing all ideals of a forest, functionally.",
            "Stack-based typed assembly language.",
            "Regular expression pattern matching for XML.",
            "Single Assignment C: efficient support for high-level array operations in a functional setting.",
            "First-order unification by structural recursion.",
            "Haskell in Space.",
            "\"Concepts in Programming Languages\" by John C. Mitchell, Cambridge University Press, 2002, ISBN 0-521-78098-5."
        ]
    },
    {
        "name": "JFP",
        "year": "2002",
        "info": "Volume 12, 2002",
        "count": 19,
        "papers": [
            "A predicative analysis of structural recursion.",
            "Stack-based typed assembly language.",
            "A calculus of module systems.",
            "Type-checking multi-parameter type classes.",
            "DrScheme: a programming environment for Scheme.",
            "A calculus with polymorphic and polyvariant flow types.",
            "Region analysis and a pi-calculus with groups.",
            "A static semantics for Haskell.",
            "Developing a high-performance web server in Concurrent Haskell.",
            "Faking it: Simulating dependent types in Haskell.",
            "Secrets of the Glasgow Haskell Compiler inliner.",
            "A typed representation for HTML and XML documents in Haskell.",
            "Parallel and Distributed Haskells.",
            "Recursive subtyping revealed.",
            "The lambda calculus is algebraic.",
            "Intensional polymorphism in type-erasure semantics.",
            "A fresh look at binary search trees.",
            "The countdown problem.",
            "CPS in little pieces: composing partial continuations."
        ]
    },
    {
        "name": "JFP",
        "year": "2001",
        "info": "Volume 11, 2001",
        "count": 23,
        "papers": [
            "Automated complexity analysis of Nuprl extracted programs Journal of Functional Programming.",
            "Algorithms with polynomial interpretation termination proof.",
            "The expressive power of higher-order types or, life without CONS.",
            "A predicative approach to the classification problem.",
            "On characterizations of the basic feasible functionals (Part I).",
            "Forms/3: A first-order visual language to explore the boundaries of the spreadsheet paradigm.",
            "Promoting rewriting to a programming language: a compiler for non-deterministic rewrite programs in associative-commutative theories.",
            "From Polyvariant flow information to intersection and union types.",
            "Set constraints for destructive array update optimization.",
            "Unfolding pointer algorithms.",
            "Pipelined functional tree accesses and updates: scheduling, synchronization, caching and coherence.",
            "Exceptional Syntax Journal of Functional Programming.",
            "Maximum marking problems.",
            "Red-black trees with types.",
            "Persistent triangulations Journal of Functional Programming.",
            "Inductive graphs and functional graph algorithms.",
            "Manufacturing datatypes.",
            "Inductive benchmarking for purely functional data structures.",
            "Modular lazy search for Constraint Satisfaction Problems.",
            "Monadic encapsulation of effects: a revised approach (extended version).",
            "How to look busy while being as lazy as ever: the implementation of a lazy functional debugger.",
            "Normalization by evaluation with typed abstract syntax.",
            "Weaving a web."
        ]
    },
    {
        "name": "JFP",
        "year": "2000",
        "info": "Volume 10, 2000",
        "count": 23,
        "papers": [
            "Server side web scripting in Haskell.",
            "Kleisli, a functional query system.",
            "A visualisation of polymorphic type checking.",
            "Girard translation and logical predicates.",
            "Distributed communication in ML.",
            "Lambda terms for natural deduction, sequent calculus and cut elimination.",
            "Type checking dependent (record) types and subtyping.",
            "Program equivalence in a linear functional language.",
            "Container types categorically.",
            "A study of evaluation order semantics in expressions with side effects.",
            "A functional reactive animation of a lift using Fran.",
            "A modular module system.",
            "Perfect trees and bit-reversal permutations.",
            "The lambda-se-calculus does not preserve strong normalisation.",
            "Generalizing generalized tries.",
            "Bee: an integrated development environment for the Scheme programming language.",
            "Combinators for breadth-first search.",
            "Do we need dependent types?",
            "Domain-free pure type systems.",
            "Uniform confluence in concurrent computation.",
            "Automatic useless-code elimination for HOT functional programs.",
            "Compilation of a specialized functional language for massively parallel computers.",
            "Theoretical Pearl: An adequate and efficient left-associated binary numeral system in the Lambda-calculus."
        ]
    },
    {
        "name": "JFP",
        "year": "1999",
        "info": "Volume 9, 1999",
        "count": 27,
        "papers": [
            "The Semantics of Future and an Application.",
            "Higher-Order Narrowing with Definitional Trees.",
            "De Bruijn Notation as a Nested Datatype.",
            "Explaining Binomial Heaps.",
            "Transparent Optimisation of Rewriting Combinators.",
            "Implementing Theorem Provers in a Purely Functional Style.",
            "Functional Design and Implementation of Graphical User Interfaces for Theorem Provers.",
            "HOLCF=HOL+LCF.",
            "Automatic Verification of Functions with Accumulating Parameters.",
            "Semantics of Linear/Modal Lambda Calculus.",
            "Parallelization of Divide-and-Conquer by Translation to Nested Loops.",
            "A Poor Man's Concurrency Monad.",
            "Power Series, Power Serious.",
            "A Pointless Derivation of Radix Sort.",
            "A Tutorial on the Universality and Expressiveness of Fold.",
            "Compilation and Equivalence of Imperative Objects.",
            "Parallel Functional Programming on Recursively Defined Data via Data-Parallel Recursion.",
            "Proof-Directed Debugging.",
            "Red-Black Trees in a Functional Setting.",
            "Combinators for Program Generation.",
            "Higher-Order Functional Languages and Intensional Logic.",
            "Applications of Plotkin-Terms: Partitions and Morphisms for Closed Terms.",
            "Compiling lazy functional programs for the Java Virtual Machine.",
            "Using randomization to make recursive matrix algorithms practical.",
            "A confluent lambda-calculus with a catch/throw mechanism.",
            "Parallelizing functional programs by generalization.",
            "Type-checking injective pure type systems."
        ]
    },
    {
        "name": "JFP",
        "year": "1998",
        "info": "Volume 8, 1998",
        "count": 25,
        "papers": [
            "What is a Purely Functional Language?",
            "Algorithms + Strategy = Parallelism.",
            "The Dynamic Compilation of Lazy Functional Programs.",
            "Meertens Number.",
            "Expansion Postponement for Normalising Pure Type Systems.",
            "Why the Constant 'Undefined'? Logics of Partial Terms for Strict and Non-Strict Functional Programming Languages.",
            "Functional Runtime Systems Within the Lambda-Sigma Calculus.",
            "Computational Types from a Logical Perspective.",
            "Functional Pearl: Even Higher-Order Functions for Parsing.",
            "Profiling Large-Scale Lazy Functional Programs.",
            "A Type-Based Escape Analysis for Functional Languages.",
            "The Call-by-Need Lambda Calculus.",
            "Efficient Graph Algorithms Using Lazy Monolithic Arrays.",
            "Structured Operational Semantics of a Fragment of the Language Scheme.",
            "From ML to Ada: Strongly-Typed Language Interoperability via Source Translation.",
            "A Coherence Theorem for Martin-L\u00f6f's Type Theory.",
            "Monadic Parsing in Haskell.",
            "A Theory of Weak Bisimulation for Core CML.",
            "Dynamic Tabbing for Automatic Indentation with the Layout Rule.",
            "Animated Fuzzy Logic.",
            "Polytypic Unification.",
            "Classical Logic, Continuation Semantics and Abstract Machines.",
            "Functorial ML.",
            "Functional Unparsing.",
            "Diets for Fat Sets."
        ]
    },
    {
        "name": "JFP",
        "year": "1997",
        "info": "Volume 7, 1997",
        "count": 25,
        "papers": [
            "A Foundation for Actor Computation.",
            "First-Order Functional Languages and Intensional Logic.",
            "On the Effectiveness of Functional Language Features: NAS Benchmark FT.",
            "Leftmost Outside-In Narrowing Calculi.",
            "Natural Expert: A Commercial Functional Programming Environment.",
            "EQUALS - A Fast Parallel Implementation of a Lazy Language.",
            "Lazy Wheel Sieves and Spirals of Primes.",
            "Deriving a Lazy Abstract Machine.",
            "The Call-By-Need lambda Calculus.",
            "Thunks and the lambda-Calculus.",
            "Type and Behaviour Reconstruction for Higher-Order Concurrent Programs.",
            "On Merging and Selection.",
            "A Syntactic Method for Finding Least Fixed Points of Higher-Order Functions over Finite Domains.",
            "Extending a lambda-Calculus with Explicit Substitution which Preserves Strong Normalisation Into a Confluent Calculus on Open Terms.",
            "A Competitive Algorithm for Managing Sharing in the Distributed Execution of Functional Programs.",
            "On Building Trees with Minimum Height.",
            "A Functional Description of TEX's Formula Layout.",
            "A New Method for Functional Arrays.",
            "Shrinking lambda Expressions in Linear Time.",
            "More Haste, Less Speed: Lazy Versus Eager Evaluation.",
            "The Zipper.",
            "Trust in the lambda-Calculus.",
            "On Combinatory Complete Sets of Proper Combinators.",
            "Modularity of Strong Normalization in the Algebraic-lambda-Cube.",
            "Three Algorithms on Braun Trees."
        ]
    },
    {
        "name": "JFP",
        "year": "1996",
        "info": "Volume 6, 1996",
        "count": 35,
        "papers": [
            "Generic Functional Programming with Types and Relations.",
            "The Resource Constrained Shortest Path Problem Implemented in a Lazy Functional Language.",
            "Empirical and Analytic Study of Stack Versus Heap Cost for Languages with Closures.",
            "Proving the Correctness of Compiler Optimisations Based on a Global Analysis: A Study of Strictness Analysis.",
            "Weak Polymorphism can be Sound.",
            "Sparse Matrix Representations in a Functional Language.",
            "Note on Algol and Conservatively Extending Functional Programming.",
            "Back to Basics: Deriving Representation Changers Functionally.",
            "Reference Counting as a Computational Interpretation of Linear Logic.",
            "Canonical Typing and Pi-Conversion in the Barendregt Cube.",
            "Generating Action Compilers by Partial Evaluation.",
            "A Confluent Reduction for the lambda-Calculus with Surjective Pairing and Terminal Object.",
            "Formal Basis for the Refinement of Rule Based Transition Systems.",
            "Predictive Parser Combinators Need four Values to Report Errors.",
            "Deduction for Functional Programmers.",
            "On Cubism.",
            "Operational Interpretations of an Extension of Fomega with Control Operators.",
            "Some Lattice-Based Scientific Problems, Expressed in Haskell.",
            "Combinators for Parsing Expressions.",
            "Haskore Music Notation - An Algebra of Music.",
            "Type Classes with Existential Types.",
            "Proof-Irrelevance out of Exluded-Middle and Choice in the Calculus of Constructions.",
            "Drawing Trees.",
            "Deriving Tidy Drawings of Trees.",
            "Representing Demand by Partial Projections.",
            "New Dimensions in Heap Profiling.",
            "Benchmarking Implementations of Functional Languages with 'Pseudoknot', a Float-Intensive Benchmark.",
            "The Third Homomorphism Theorem.",
            "A Syntactic Theory of Type Generativity and Sharing.",
            "lambda-nu, A Calculus of Explicit Substitutions which Preserves Strong Normalisation.",
            "\u03c0-Red+ An Interactive Compiling Graph Reduction System for an Applied \u03bb-Calculus.",
            "A Simple Proof of the Undecidability of Inhabitation in lambdaP.",
            "The Bologna Optimal Higher-Order Machine.",
            "A Positive Supercompiler.",
            "Optimal Purely Functional Priority Queues."
        ]
    },
    {
        "name": "JFP",
        "year": "1995",
        "info": "Volume 5, 1995",
        "count": 23,
        "papers": [
            "A System of Constructor Classes: Overloading and Implicit Higher-Order Polymorphism.",
            "Untyped Strictness Analysis.",
            "Defining Data Structures via B\u00f6hm-Out.",
            "Strong Normalisation for the Linear Term Calculus.",
            "The Ins and Outs of Clean I/O.",
            "Dynamic Typing in Polymorphic Languages.",
            "The Virtues of Eta-Expansion.",
            "A Debugger for Standard ML.",
            "Type Reconstruction for Type Classes.",
            "Lexical Profiling: Theory and Practice.",
            "Special Issue on State-of-the-Art Applications of Pure Functional Programming Languages.",
            "Comparing Id and Haskell in a Monte Carlo Photon Transport Code.",
            "Funser: A Functional Server for Textual Information Retrieval.",
            "Prototyping a Parallel Vision System in Standard ML.",
            "Implementing a Functional Spreadsheet in Clean.",
            "A Polymorphic Library for Constructive Solid Geometry.",
            "Exploring the Conformations of Nucleic Acids.",
            "On-Line & Off-Line Partial Evaluation: Semantic Specifications and Correctness Proofs.",
            "Semantics Directed Program Execution Monitoring.",
            "Communication Lifting: Fixed Point Computation for Parallelism.",
            "Simple and Efficient Purely Functional Queues and Deques.",
            "A Unifying Type-Theoretic Framework for Objects.",
            "Refining Reduction in the Lambda Calculus."
        ]
    },
    {
        "name": "JFP",
        "year": "1994",
        "info": "Volume 4, 1994",
        "count": 20,
        "papers": [
            "A Functional Animation Starter-Lit.",
            "An Overview of the Flagship System.",
            "On the Equivalence Between CMC and TIM.",
            "Worst Case Scheduling for Parallel Functional Programs.",
            "A - Translation and Looping Combinators in Pure Type Systems.",
            "How Powerful are Folding/Unfolding Transformations?",
            "Yet Yet a Counterexample for lambda + SP.",
            "On Generating unique Names.",
            "A Paradigmatic Object-Oriented Programming Language: Design, Static Typing and Semantics.",
            "Simple Type-Theoretic Foundations for Object-Oriented Programming.",
            "Baby Modula-3 and a Theory of Objects.",
            "Principal Signatures for Higher-Order Program Modules.",
            "Algorithmic Debugging for Lazy Functional Languages.",
            "Residual Theory in lambda-Calculus: A Formal Development.",
            "Lilac: A Functional Programming Language Based on Linear Logic.",
            "The Complexity of Type Inference for Higher-Order Typed lambda Calculi.",
            "Total Unfolding: Theory and Applications.",
            "On the Generation of Specializers.",
            "Safe Fusion of Functional Expressions II: Further Improvements.",
            "Book Review: Introduction to HOL: A Theorem Proving Environment for Higher Order Logic by Mike Gordon and Tom Melham (eds.), Cambridge University Press, 1993, ISBN 0-521-44189-7."
        ]
    },
    {
        "name": "JFP",
        "year": "1993",
        "info": "Volume 3, 1993",
        "count": 25,
        "papers": [
            "Functional Programming in Education - Introduction.",
            "Using Miranda as a First Programming Language.",
            "Functional Programming for Business Students.",
            "Teaching Functional Programming to First-Year Students.",
            "The Use of Functional Languages in Teaching Computer Science.",
            "The Interactive Lazy ML System.",
            "An Incremental, Exploratory and Transformational Environment for the Lazy Functional Programming.",
            "Functional Pearls: The Last Tail.",
            "Extended Natural Semantics.",
            "Improving Intervals.",
            "Pattern Matching with Abstract Data Types.",
            "Partially Strict Non-Recursive Data Types.",
            "Heap Profiling of Lazy Functional Programs.",
            "Terminating Comprehensions.",
            "On the Specialization of Online Program Specializers.",
            "Program Transformation with Metasystem Transitions.",
            "Efficient Analysis for Realistic Off-Line Partial Evaluation.",
            "Correctness of Binding-Time Analysis.",
            "Specifying the Correctness of Binding-Time Analysis.",
            "A Critique of Standard ML.",
            "Dynamics in ML.",
            "Typing First-Class Continuations in ML.",
            "Deciding Type Isomorphisms in a Type-Assignment Framework.",
            "Lessons from the Design of a Standard ML Library.",
            "Efficient Sets - A Balancing Act."
        ]
    },
    {
        "name": "JFP",
        "year": "1992",
        "info": "Volume 2, 1992",
        "count": 21,
        "papers": [
            "Modelling Operating System Structures by Timed Stream Processing Functions.",
            "A Categorical Understanding of Environment Machines.",
            "A Study of Sparse Matrix Representations for Solving Linear Systems in a Functional Language.",
            "Tail Recursion without Space Leaks.",
            "A Practical Functional Program for the CRAY X-MP.",
            "Implementing Lazy Functional Languages on Stock Hardware: The Spineless Tagless G-Machine.",
            "Distributed Random Number Generation.",
            "Quantifier Elimination and Parametric Polymorphism in Programming Languages.",
            "Enumerators of lambda Terms are Reducing.",
            "Two Greedy Algorithms.",
            "Polymorphic Type, Region and Effect Inference.",
            "A Domain-Theoretic Approach to Functional and Logic Programming.",
            "Higher-Order Functions for Parsing.",
            "Efficient Self-Interpretations in lambda Calculus.",
            "Representing 'undefined' in lambda Calculus.",
            "Unravelling Greedy Algorithms.",
            "A Run-Time Algorithm for Managing the Granularity of Parallel Functional Programs.",
            "Abstract Interpretation by Dynamic Partitioning.",
            "MetaMorph - A Formal Methods Toolkit with Application to the Design of Digital Hardware.",
            "Computing with Lattices: An Application of Type Classes.",
            "A Symmetric Set of Efficient List Operations."
        ]
    },
    {
        "name": "JFP",
        "year": "1991",
        "info": "Volume 1, 1991",
        "count": 18,
        "papers": [
            "Encapsulating Non-Determinacy in an Abstract Data Type with Determinate Semantics.",
            "A Partial Evaluator for the Untyped lambda-Calculus.",
            "Using Types as Search Keys in Function Libraries.",
            "Fixed Points and Frontiers: A New Perspective.",
            "The Minout Problem.",
            "Introduction to Generalized Type Systems.",
            "Modular Proof of Strong Normalization for the Calculus of Constructions.",
            "Retrieving Reusable Software Components by Polymorphic Type.",
            "Domain Generating Functions for Solving Constraint Satisfaction Problems.",
            "Self-Interpretations in lambda Calculus.",
            "On Removing Duplicates.",
            "Type Inference With Simple Subtypes.",
            "Equivalence in Functional Languages with Effects.",
            "Implementing the Evaluation Transformer Model of Reduction on Parallel Machines.",
            "An Unsolvable Numeral System in lambda Calculus.",
            "Explicit Substitutions.",
            "A Semantic Basis for Quest.",
            "Using Transformations in the Implementations of Higher-Order Functions."
        ]
    }
]