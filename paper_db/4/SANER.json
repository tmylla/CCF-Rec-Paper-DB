[
    {
        "year": "2021",
        "name": "28th SANER 2021",
        "info": "Honolulu, HI, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2021",
                "sub_name": "28th IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2021, Honolulu, HI, USA, March 9-12, 2021.",
                "count": 83,
                "papers": [
                    "Towards Understanding Tool-chain Bugs in the LLVM Compiler Infrastructure.",
                    "Analyzing and Detecting Emerging Quality-Related Concerns across OSS Defect Report Summaries.",
                    "An Empirical Study for Common Language Features Used in Python Projects.",
                    "Graph Neural Network Based Collaborative Filtering for API Usage Recommendation.",
                    "MulCode: A Multi-task Learning Approach for Source Code Understanding.",
                    "A Neural Question Answering System for Basic Questions about Subroutines.",
                    "A Multi-Metric Ranking Approach for Library Migration Recommendations.",
                    "HashMTI: Scalable Mutation-based Taint Inference with Hash Records.",
                    "Is the Ground Truth Really Accurate? Dataset Purification for Automated Program Repair.",
                    "OTA: An Operation-oriented Time Allocation Strategy for Greybox Fuzzing.",
                    "Leveraging Stack Overflow to Detect Relevant Tutorial Fragments of APIs.",
                    "Binary level toolchain provenance identification with graph neural networks.",
                    "Assessing time-based and range-based strategies for commit assignment to releases.",
                    "XSnare: Application-specific client-side cross-site scripting protection.",
                    "Combining Query Reduction and Expansion for Text-Retrieval-Based Bug Localization.",
                    "A Survey-Based Empirical Evaluation of Bad Smells in LabVIEW Systems Models.",
                    "DeepCon: Contribution Coverage Testing for Deep Learning Systems.",
                    "FrameFix: Automatically Repairing Statically-Detected Directive Violations in Framework Applications.",
                    "VIVA: Binary Level Vulnerability Identification via Partial Signature.",
                    "Assessing Code Clone Harmfulness: Indicators, Factors, and Counter Measures.",
                    "The Usability (or Not) of Refactoring Tools.",
                    "Javadoc Violations and Their Evolution in Open-Source Software.",
                    "Quality Assurance for Automated Commit Message Generation.",
                    "Understanding and Facilitating the Co-Evolution of Production and Test Code.",
                    "Leveraging Fault Localisation to Enhance Defect Prediction.",
                    "On the Impact of Flaky Tests in Automated Program Repair.",
                    "GhostBuster: understanding and overcoming the pitfalls of transient execution vulnerability checkers.",
                    "Automatic Detection of Five API Documentation Smells: Practitioners' Perspectives.",
                    "Action Word Prediction for Neural Source Code Summarization.",
                    "Two-Stage Attention-Based Model for Code Search with Textual and Structural Features.",
                    "SQLIFIX: Learning Based Approach to Fix SQL Injection Vulnerabilities in Source Code.",
                    "Call Frequency-Based Fault Localization.",
                    "A Multi-Criteria Strategy for Redesigning Legacy Features as Microservices: An Industrial Case Study.",
                    "Underproduction: An Approach for Measuring Risk in Open Source Software.",
                    "A Large-Scale Empirical Study of Android App Decompilation.",
                    "EnHMM: On the Use of Ensemble HMMs and Stack Traces to Predict the Reassignment of Bug Report Fields.",
                    "On the Co-evolution of ML Pipelines and Source Code - Empirical Study of DVC Projects.",
                    "Summarizing Relevant Parts from Technical Videos.",
                    "Empirical Analysis of Security Vulnerabilities in Python Packages.",
                    "Plot2API: Recommending Graphic API from Plot via Semantic Parsing Guided Neural Network.",
                    "Understanding Code Reuse in Smart Contracts.",
                    "Android Compatibility Issue Detection Using API Differences.",
                    "Evaluating Bug Prediction under Realistic Settings.",
                    "Multi-threshold token-based code clone detection.",
                    "Onboarding to Open Source Projects with Good First Issues: A Preliminary Analysis.",
                    "Human-Centric Issues in eHealth App Development and Usage: A Preliminary Assessment.",
                    "Enhancing Just-in-Time Defect Prediction Using Change Request-based Metrics.",
                    "Linking Developer Experience to Coding Style in Open-Source Repositories.",
                    "Adaptive Immunity for Software: Towards Autonomous Self-healing Systems.",
                    "How Do Users Answer MATLAB Questions on Q&A Sites? A Case Study on Stack Overflow and MathWorks.",
                    "Anti-patterns in Modern Code Review: Symptoms and Prevalence.",
                    "MSR4ML: Reconstructing Artifact Traceability in Machine Learning Repositories.",
                    "Automatically Customizing Static Analysis Tools to Coding Rules Really Followed by Developers.",
                    "Using Structural and Semantic Information to Identify Software Components.",
                    "G-Repo: a Tool to Support MSR Studies on GitHub.",
                    "Gasser.",
                    "Recording, Visualising and Understanding Developer Programming Behaviour.",
                    "ClarchMap: API-oriented reconstruction of architecture for cloud-based systems.",
                    "TinySpline: A Small, yet Powerful Library for Interpolating, Transforming, and Querying NURBS, B-Splines, and B\u00e9zier Curves.",
                    "Makar: A Framework for Multi-source Studies based on Unstructured Data.",
                    "Practitioners' Testimonials about Software Testing.",
                    "Technical Debt in Large-Scale Distributed Projects: An Industrial Case Study.",
                    "Mining for Graph-Based Library Usage Patterns in COBOL Systems.",
                    "A Testing Approach While Re-engineering Legacy Systems: An Industrial Case Study.",
                    "How do Technical Debt Payment Practices Relate to the Effects of the Presence of Debt Items in Software Projects?",
                    "How Explicit Feature Traces Did Not Impact Developers' Memory.",
                    "Will Data Influence the Experiment Results?: A Replication Study of Automatic Identification of Decisions.",
                    "Regression Test Selection Tool for Python in Continuous Integration Process.",
                    "An Analysis of Testing Scenarios for Automated Driving Systems.",
                    "A Case Study on the Evolution of Configuration Options of a Highly-Configurable Software System.",
                    "AI-Based Enhancement of Test Models in an Industrial Model-Based Testing Tool.",
                    "Research Progress of Flaky Tests.",
                    "Representation vs. Model: What Matters Most for Source Code Vulnerability Detection.",
                    "Bug Question Answering with Pretrained Encoders.",
                    "Characterizing Duplicate Bugs: An Empirical Analysis.",
                    "Blockchain in Agri-Food Traceability Systems: a Model Proposal for a Typical Italian Food Product.",
                    "Drone-based Risk Management of Autonomous Systems Using Contracts and Blockchain.",
                    "Lightweight extension of an execution environment for safer function calls in Solidity/Ethereum Virtual Machine smart contracts.",
                    "Raising Sustainability Awareness in Agile Blockchain-Oriented Software Engineering.",
                    "Analysis of Source Code Duplication in Ethreum Smart Contracts.",
                    "Smart-Graph: Graphical Representations for Smart Contract on the Ethereum Blockchain.",
                    "Investigation of Blockchain Cryptocurrencies' Price Movements Through Deep Learning: A Comparative Analysis.",
                    "Blockchain and Contact Tracing Applications for COVID-19: The Opportunity and The Challenges."
                ]
            }
        ]
    },
    {
        "year": "2020",
        "name": "27th SANER 2020",
        "info": "London, ON, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2020",
                "sub_name": "27th IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2020, London, ON, Canada, February 18-21, 2020.",
                "count": 77,
                "papers": [
                    "Referee: A Pattern-Guided Approach for Auto Design in Compiler-Based Analyzers.",
                    "Web APIs in Android through the Lens of Security.",
                    "SMARTSHIELD: Automatic Smart Contract Protection Made Easy.",
                    "Automatically Extracting Subroutine Summary Descriptions from Unstructured Comments.",
                    "Resource Race Attacks on Android.",
                    "We Are Family: Analyzing Communication in GitHub Software Repositories and Their Forks.",
                    "Exploring Type Inference Techniques of Dynamically Typed Languages.",
                    "How Do Python Framework APIs Evolve? An Exploratory Study.",
                    "Associating Code Clones with Association Rules for Change Impact Analysis.",
                    "LibDX: A Cross-Platform and Accurate System to Detect Third-Party Libraries in Binary Code.",
                    "EthPloit: From Fuzzing to Efficient Exploit Generation against Smart Contracts.",
                    "Sequence Directed Hybrid Fuzzing.",
                    "LESSQL: Dealing with Database Schema Changes in Continuous Deployment.",
                    "Cross-Dataset Design Discussion Mining.",
                    "C-3PR: A Bot for Fixing Static Analysis Violations via Pull Requests.",
                    "Automated Bug Detection and Replay for COTS Linux Kernel Modules with Concolic Execution.",
                    "Ultra-Large-Scale Repository Analysis via Graph Compression.",
                    "Studying Developer Reading Behavior on Stack Overflow during API Summarization Tasks.",
                    "On the Adoption of Kotlin on Android Development: A Triangulation Study.",
                    "Energy Refactorings for Android in the Large and in the Wild.",
                    "Essential Sentences for Navigating Stack Overflow Answers.",
                    "HistoRank: History-Based Ranking of Co-change Candidates.",
                    "D-Goldilocks: Automatic Redistribution of Remote Functionalities for Performance and Efficiency.",
                    "Detecting Code Clones with Graph Neural Network and Flow-Augmented Abstract Syntax Tree.",
                    "SAGA: Efficient and Large-Scale Detection of Near-Miss Clones with GPU Acceleration.",
                    "CORE: Automating Review Recommendation for Code Changes.",
                    "Distinguishing Similar Design Pattern Instances through Temporal Behavior Analysis.",
                    "Relationship between the Effectiveness of Spectrum-Based Fault Localization and Bug-Fix Types in JavaScript Programs.",
                    "Incremental Map-Reduce on Repository History.",
                    "How EvoStreets Are Observed in Three-Dimensional and Virtual Reality Environments.",
                    "Are the Code Snippets What We Are Searching for? A Benchmark and an Empirical Study on Code Search with Natural-Language Queries.",
                    "Automatically Learning Patterns for Self-Admitted Technical Debt Removal.",
                    "Refactoring Graphs: Assessing Refactoring over Time.",
                    "On Relating Technical, Social Factors, and the Introduction of Bugs.",
                    "Characterizing Architectural Drifts of Adaptive Systems.",
                    "Using Productive Collaboration Bursts to Analyze Open Source Collaboration Effectiveness.",
                    "Slice-Based Cognitive Complexity Metrics for Defect Prediction.",
                    "The Silent Helper: The Impact of Continuous Integration on Code Reviews.",
                    "Heap Memory Snapshot Assisted Program Analysis for Android Permission Specification.",
                    "A Code-Description Representation Learning Model Based on Attention.",
                    "Suggesting Comment Completions for Python using Neural Language Models.",
                    "Leveraging Contextual Information from Function Call Chains to Improve Fault Localization.",
                    "Deep Learning Based Identification of Suspicious Return Statements.",
                    "Clone Detection in Test Code: An Empirical Evaluation.",
                    "Are SonarQube Rules Inducing Bugs?",
                    "Enhancing Source Code Refactoring Detection with Explanations from Commit Messages.",
                    "Unleashing the Potentials of Immersive Augmented Reality for Software Engineering.",
                    "Reflection on Building Hybrid Access Control by Configuring RBAC and MAC Features.",
                    "Is Developer Sentiment Related to Software Bugs: An Exploratory Study on GitHub Commits.",
                    "The Python/C API: Evolution, Usage Statistics, and Bug Patterns.",
                    "Revisiting the Challenges and Opportunities in Software Plagiarism Detection.",
                    "Req2Lib: A Semantic Neural Model for Software Library Recommendation.",
                    "Dependency Solving Is Still Hard, but We Are Getting Better at It.",
                    "A Reflection on \"An Exploratory Study on Exception Handling Bugs in Java Programs\".",
                    "A Preliminary Study on Open-Source Memory Vulnerability Detectors.",
                    "A Reflection on the Predictive Accuracy of Dynamic Impact Analysis.",
                    "JavaScript API Deprecation in the Wild: A First Assessment.",
                    "A Semantic-Based Framework for Analyzing App Users' Feedback.",
                    "MobiLogLeak: A Preliminary Study on Data Leakage Caused by Poor Logging Practices.",
                    "Identifying Vulnerable IoT Applications using Deep Learning.",
                    "A Mutation Framework for Evaluating Security Analysis Tools in IoT Applications.",
                    "Pull Requests or Commits? Which Method Should We Use to Study Contributors' Behavior?",
                    "Automated Deprecated-API Usage Update for Android Apps: How Far are We?",
                    "Experience Report: How Effective is Automated Program Repair for Industrial Software?",
                    "Reducing Code Complexity through Code Refactoring and Model-Based Rejuvenation.",
                    "Leveraging Machine Learning for Software Redocumentation.",
                    "Automated Code Transformations: Dealing with the Aftermath.",
                    "CryptoExplorer: An Interactive Web Platform Supporting Secure Use of Cryptography APIs.",
                    "AUSearch: Accurate API Usage Search in GitHub Repositories with Type Resolution.",
                    "Clone Notifier: Developing and Improving the System to Notify Changes of Code Clones.",
                    "Mining Version Control Systems and Issue Trackers with LibVCS4j.",
                    "SpojitR: Intelligently Link Development Artifacts.",
                    "ChangeBeadsThreader: An Interactive Environment for Tailoring Automatically Untangled Changes.",
                    "Reinforcement Learning Guided Symbolic Execution.",
                    "Live Replay of Screen Videos: Automatically Executing Real Applications as Shown in Recordings.",
                    "Documentation of Machine Learning Software.",
                    "Building an Inclusive Distributed Ledger System."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2020vst",
                "sub_name": "IEEE Workshop on Validation, Analysis and Evolution of Software Tests, VST@SANER 2020, London, ON, Canada, February 18, 2020.",
                "count": 6,
                "papers": [
                    "Semi-automatic Test Case Expansion for Mutation Testing.",
                    "An Empirical Evaluation for Object Initialization of Member Variables in Unit Testing.",
                    "An Early Investigation of Unit Testing Practices of Component-Based Software Systems.",
                    "Do Bug-Fix Types Affect Spectrum-Based Fault Localization Algorithms' Efficiency?",
                    "Towards Fault Localization via Probabilistic Software Modeling.",
                    "Simulating the Effect of Test Flakiness on Fault Localization Effectiveness."
                ]
            }
        ]
    },
    {
        "year": "2019",
        "name": "26th SANER (CSMR-WCRE) 2019",
        "info": "Hangzhou, China",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2019",
                "sub_name": "26th IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2019, Hangzhou, China, February 24-27, 2019.",
                "count": 74,
                "papers": [
                    "Message from the General Chair, Program Co-Chairs, and Local Chair.",
                    "Software engineering in a data science future (Keynote).",
                    "Does your software value what you value? (Keynote).",
                    "Forward and backward traceability: Requirements and challenges (Keynote).",
                    "Software Multiple-Level Change Detection Based on Two-Step MPAT Matching.",
                    "Pruning the AST with Hunks to Speed up Tree Differencing.",
                    "Expressions of Sentiments during Code Reviews: Male vs. Female.",
                    "A Study on the Interplay between Pull Request Review and Continuous Integration Builds.",
                    "Confusion in Code Reviews: Reasons, Impacts, and Coping Strategies.",
                    "Deep Review Sharing.",
                    "A Comparative Study of Software Bugs in Micro-clones and Regular Code Clones.",
                    "On Precision of Code Clone Detection Tools.",
                    "Learning-Based Recursive Aggregation of Abstract Syntax Trees for Code Clone Detection.",
                    "Fuzzing Program Logic Deeply Hidden in Binary Program Stages.",
                    "How Stable Are Eclipse Application Framework Internal Interfaces?",
                    "Unveiling Exception Handling Guidelines Adopted by Java Developers.",
                    "Migrating to GraphQL: A Practical Assessment.",
                    "Are Refactorings to Blame? An Empirical Study of Refactorings in Merge Conflicts.",
                    "Accurate Design Pattern Detection Based on Idiomatic Implementation Matching in Java Language Context.",
                    "Detecting Feature-Interaction Symptoms in Automotive Software using Lightweight Analysis.",
                    "Mining Cross-Task Artifact Dependencies from Developer Interactions.",
                    "A Human-as-Sensors Approach to API Documentation Integration and Its Effects on Novice Programmers.",
                    "Feature Maps: A Comprehensible Software Representation for Design Pattern Detection.",
                    "Reformulating Queries for Duplicate Bug Report Detection.",
                    "Identifying Redundancies in Fork-based Development.",
                    "Systematic Comprehension for Developer Reply in Mobile System Forum.",
                    "Improving Model Inference in Industry by Combining Active and Passive Learning.",
                    "Towards Understandable Guards of Extracted State Machines from Embedded Software.",
                    "Mining Specifications from Documentation using a Crowd.",
                    "Studying Android App Popularity by Cross-Linking GitHub and Google Play Store.",
                    "An Empirical Study of Learning to Rank Techniques for Effort-Aware Defect Prediction.",
                    "COLOR: Correct Locator Recommender for Broken Test Scripts using Various Clues in Web Application.",
                    "A Comparative Study of Android Repackaged Apps Detection Techniques.",
                    "Want to Earn a Few Extra Bucks? A First Look at Money-Making Apps.",
                    "APPCOMMUNE: Automated Third-Party Libraries De-duplicating and Updating for Android Apps.",
                    "Characterizing and Detecting Inefficient Image Displaying Issues in Android Apps.",
                    "Detecting Data Races Caused by Inconsistent Lock Protection in Device Drivers.",
                    "An Empirical Study of Messaging Passing Concurrency in Go Projects.",
                    "A Splitting Strategy for Testing Concurrent Programs.",
                    "Understanding Node Change Bugs for Distributed Systems.",
                    "A Neural Model for Method Name Generation from Functional Description.",
                    "Bilateral Dependency Neural Networks for Cross-Language Algorithm Classification.",
                    "DeepLink: A Code Knowledge Graph Based Deep Learning Approach for Issue-Commit Link Recovery.",
                    "CNN-FL: An Effective Approach for Localizing Faults using Convolutional Neural Networks.",
                    "AVATAR: Fixing Semantic Bugs with Fix Patterns of Static Analysis Violations.",
                    "BEARS: An Extensible Java Bug Benchmark for Automatic Program Repair Studies.",
                    "Sorting and Transforming Program Repair Ingredients via Deep Learning Code Similarities.",
                    "On the Relation between Outdated Docker Containers, Severity Vulnerabilities, and Bugs.",
                    "Exploring Regular Expression Evolution.",
                    "Mining Scala Framework Extensions for Recommendation Patterns.",
                    "Reuse (or Lack Thereof) in Travis CI Specifications: An Empirical Study of CI Phases and Commands.",
                    "Is Self-Admitted Technical Debt a Good Indicator of Architectural Divergences?",
                    "Identifying Feature Clones: An Industrial Case Study.",
                    "Towards Generating Cost-Effective Test-Suite for Ethereum Smart Contract.",
                    "EVM*: From Offline Detection to Online Reinforcement for Ethereum Virtual Machine.",
                    "Testing the Message Flow of Android Auto Apps.",
                    "Open-Source License Violations of Binary Software at Large Scale.",
                    "Qualify First! A Large Scale Modernisation Report.",
                    "Challenges of SonarQube Plug-In Maintenance.",
                    "GUI Migration using MDE from GWT to Angular 6: An Industrial Case.",
                    "Program State Coverage: A Test Coverage Metric Based on Executed Program States.",
                    "On the Diversity of Software Package Popularity Metrics: An Empirical Study of npm.",
                    "On the Impact of Refactoring Operations on Code Naturalness.",
                    "Knowledge Graphing Git Repositories: A Preliminary Study.",
                    "Should You Consider Adware as Malware in Your Study?",
                    "Please Help! A Preliminary Study on the Effect of Social Proof and Legitimization of Paltry Contributions in Donations to OSS.",
                    "DeepCT: Tomographic Combinatorial Testing for Deep Learning Systems.",
                    "On the Impact of Outdated and Vulnerable Javascript Packages in Docker Images.",
                    "GUARDIAML: Machine Learning-Assisted Dynamic Information Flow Control.",
                    "OBLIVE: Seamless Code Obfuscation for Java Programs and Android Apps.",
                    "Madoop: Improving Browser-Based Volunteer Computing Based on Modern Web Technologies.",
                    "Automating Performance Antipattern Detection and Software Refactoring in UML Models.",
                    "ICSD: Interactive Visual Support for Understanding Code Control Structure.",
                    "GoCity: Code City for Go."
                ]
            }
        ]
    },
    {
        "year": "2018",
        "name": "25th SANER 2018",
        "info": "Campobasso, Italy",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2018",
                "sub_name": "25th International Conference on Software Analysis, Evolution and Reengineering, SANER 2018, Campobasso, Italy, March 20-23, 2018.",
                "count": 78,
                "papers": [
                    "A decade of software quality analysis in practice: Surprises, anecdotes, and lessons learned (keynote).",
                    "Towards a new digital business operating system: Speed, data, ecosystems, and empowerment (keynote).",
                    "Compilers are sprinters - IDEs are marathoners (keynote).",
                    "Ten years of JDeodorant: Lessons learned from the hunt for smells.",
                    "Design patterns impact on software quality: Where are the theories?",
                    "Benchmarks for software clone detection: A ten-year retrospective.",
                    "Context is king: The developer perspective on the usage of static analysis tools.",
                    "Micro-clones in evolving software.",
                    "SMARTLOG: Place error log statement by deep understanding of log intention.",
                    "Exploring the integration of user feedback in automated testing of Android applications.",
                    "Structured random differential testing of instruction decoders.",
                    "Clustering support for inadequate test suite reduction.",
                    "Automatically repairing dependency-related build breakage.",
                    "Mining stackoverflow for program repair.",
                    "Dissection of a bug dataset: Anatomy of 395 patches from Defects4J.",
                    "Detecting third-party libraries in Android applications with high precision and recall.",
                    "How do developers fix issues and pay back technical debt in the Apache ecosystem?",
                    "How good is your puppet? An empirically defined and validated quality model for puppet.",
                    "Maintaining behaviour driven development specifications: Challenges and opportunities.",
                    "Recursion aware modeling and discovery for hierarchical software event log analysis.",
                    "Automatically exploiting implicit design knowledge when solving the class responsibility assignment problem.",
                    "Cross-version defect prediction via hybrid active learning with kernel principal component analysis.",
                    "Using a probabilistic model to predict bug fixes.",
                    "Connecting software metrics across versions to predict defects.",
                    "Classifying stack overflow posts on API issues.",
                    "Why and how Java developers break APIs.",
                    "Mining accurate message formats for service APIs.",
                    "Mining framework usage graphs from app corpora.",
                    "A generalized model for visualizing library popularity, adoption, and diffusion within a software ecosystem.",
                    "Supporting exploratory code search with differencing and visualization.",
                    "Syntax and sensibility: Using language models to detect and correct syntax errors.",
                    "A deep neural network language model with contexts for source code.",
                    "Efficient features for function matching between binary executables.",
                    "Using recurrent neural networks for decompilation.",
                    "How do developers discuss rationale?",
                    "Automated quality assessment for crowdsourced test reports of mobile applications.",
                    "The impact of refactoring changes on the SZZ algorithm: An empirical study.",
                    "An extensible approach for taming the challenges of JavaScript dead code elimination.",
                    "Automated refactoring of client-side JavaScript code to ES6 modules.",
                    "Improving developers awareness of the exception handling policy.",
                    "Detecting faulty empty cells in spreadsheets.",
                    "Detection of protection-impacting changes during software evolution.",
                    "Mining sandboxes: Are we there yet?",
                    "DeepWeak: Reasoning common software weaknesses via knowledge graph embedding.",
                    "Towards just-in-time suggestions for log changes (journal-first abstract).",
                    "Which log level should developers choose for a new logging statement? (journal-first abstract).",
                    "A study of the relation of mobile device attributes with the user-perceived quality of Android apps (journal-first abstract).",
                    "How developers micro-optimize Android apps (journal-first abstract).",
                    "The relationship between evolutionary coupling and defects in large industrial software (journal-first abstract).",
                    "A comparison framework for runtime monitoring approaches (journal-first abstract).",
                    "Modularity and architecture of PLC-based software for automated production systems: An analysis in industrial companies (journal-first abstract).",
                    "A mapping study on design-time quality attributes and metrics (journal-first abstract).",
                    "Review participation in modern code review: An empirical study of the Android, Qt, and OpenStack projects (journal-first abstract).",
                    "Spreadsheet guardian: An approach to protecting semantic correctness throughout the evolution of spreadsheets (journal-first abstract).",
                    "Extracting features from requirements: Achieving accuracy and automation with neural networks.",
                    "OctoBubbles: A Multi-view interactive environment for concurrent visualization and synchronization of UML models and code.",
                    "A comparison of software engineering domain specific sentiment analysis tools.",
                    "Generating descriptions for screenshots to assist crowdsourced testing.",
                    "Reconciling the past and the present: An empirical study on the application of source code transformations to automatically rejuvenate Java programs.",
                    "The Statechart Workbench: Enabling scalable software event log analysis using process mining.",
                    "APIDiff: Detecting API breaking changes.",
                    "LICCA: A tool for cross-language clone detection.",
                    "GoldRusher: A miner for rapid identification of hidden code.",
                    "BECLoMA: Augmenting stack traces with user review information.",
                    "Bring your own coding style.",
                    "FINALIsT2: Feature identification, localization, and tracing tool.",
                    "ChangeMacroRecorder: Recording fine-grained textual changes of source code.",
                    "RETICULA: Real-time code quality assessment.",
                    "Reengineering an industrial HMI: Approach, objectives, and challenges.",
                    "Model-based software restructuring: Lessons from cleaning up COM interfaces in industrial legacy code.",
                    "Grammatical inference from data exchange files: An experiment on engineering software.",
                    "Fuzz testing in practice: Obstacles and solutions.",
                    "Diggit: Automated code review via software repository mining.",
                    "Duplicate question detection in stack overflow: A reproducibility study.",
                    "How do scientists develop scientific software? An external replication.",
                    "Re-evaluating method-level bug prediction.",
                    "Keep it simple: Is deep learning good for linguistic smell detection?",
                    "Detecting code smells using machine learning techniques: Are we there yet?"
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2018iwbose",
                "sub_name": "2018 International Workshop on Blockchain Oriented Software Engineering, IWBOSE@SANER 2018, Campobasso, Italy, March 20, 2018.",
                "count": 7,
                "papers": [
                    "Why blockchain is important for software developers, and why software engineering is important for blockchain software (Keynote).",
                    "Smart contracts: security patterns in the ethereum ecosystem and solidity.",
                    "SmartInspect: solidity smart contract inspector.",
                    "Smart contracts vulnerabilities: a call for blockchain software engineering?",
                    "The ICO phenomenon and its relationships with ethereum smart contract environment.",
                    "Evaluation of initial cryptoasset offerings: the state of the practice.",
                    "Checking laws of the blockchain with property-based testing."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2018maint",
                "sub_name": "2018 IEEE Workshop on Mining and Analyzing Interaction Histories, MAINT@SANER 2018, Campobasso, Italy, March 20, 2018.",
                "count": 5,
                "papers": [
                    "Welcome from the chairs.",
                    "Integrating source code search into git client for effective retrieving of change history.",
                    "The cost-benefit analysis of usage data in robotstudio (keynote).",
                    "Privacy preservation in interaction history on integrated development environments.",
                    "CodeCAM: capturing programmer's reaction during coding session."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2018vst",
                "sub_name": "2018 IEEE Workshop on Validation, Analysis and Evolution of Software Tests, VST@SANER 2018, Campobasso, Italy, March 20, 2018.",
                "count": 5,
                "papers": [
                    "Summarization techniques for code, change, testing, and user feedback (Invited paper).",
                    "Detecting duplicate examples in behaviour driven development specifications.",
                    "Automated generation of requirements-based test cases for an adaptive cruise control system.",
                    "A retrospective of production and test code co-evolution in an industrial project.",
                    "Evaluating the efficiency of continuous testing during test-driven development."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2018maltesque",
                "sub_name": "2018 IEEE Workshop on Machine Learning Techniques for Software Quality Evaluation, MaLTeSQuE@SANER 2018, Campobasso, Italy, March 20, 2018.",
                "count": 9,
                "papers": [
                    "Varying defect prediction approaches during project evolution: A preliminary investigation.",
                    "The role of meta-learners in the adaptive selection of classifiers.",
                    "Machine learning-based run-time anomaly detection in software systems: An industrial evaluation.",
                    "How high will it be? Using machine learning models to predict branch coverage in automated testing.",
                    "Ensemble techniques for software change prediction: A preliminary investigation.",
                    "Co-evolution analysis of production and test code by learning association rules of changes.",
                    "ConfigFile++: Automatic comment enhancement for misconfiguration prevention.",
                    "Investigating type declaration mismatches in Python.",
                    "User-perceived reusability estimation based on analysis of software repositories."
                ]
            }
        ]
    },
    {
        "year": "2017",
        "name": "24th SANER 2017",
        "info": "Klagenfurt, Austria",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2017",
                "sub_name": "IEEE 24th International Conference on Software Analysis, Evolution and Reengineering, SANER 2017, Klagenfurt, Austria, February 20-24, 2017.",
                "count": 83,
                "papers": [
                    "UNVEIL: A large-scale, automated approach to detecting ransomware (keynote).",
                    "An empirical comparison of dependency issues in OSS packaging ecosystems.",
                    "Detecting similar repositories on GitHub.",
                    "Code of conduct in open source projects.",
                    "Socio-technical evolution of the Ruby ecosystem in GitHub.",
                    "StiCProb: A novel feature mining approach using conditional probability.",
                    "HDSKG: Harvesting domain specific knowledge graph from content of webpages.",
                    "Analyzing closeness of code dependencies for improving IR-based Traceability Recovery.",
                    "STRICT: Information retrieval based search term identification for concept location.",
                    "Analyzing reviews and code of mobile apps for better release planning.",
                    "Software-based energy profiling of Android apps: Simple, efficient and reliable?",
                    "Investigating the energy impact of Android smells.",
                    "Automated generation of consistency-achieving model editors.",
                    "Historical and impact analysis of API breaking changes: A large-scale study.",
                    "Reducing redundancies in multi-revision code analysis.",
                    "Recommending source code locations for system specific transformations.",
                    "Extracting executable transformations from distilled code changes.",
                    "Automatic generation of opaque constants based on the k-clique problem for resilient data obfuscation.",
                    "The dark side of event sourcing: Managing data conversion.",
                    "Automatically generating natural language descriptions for object-related statement sequences.",
                    "Shorter identifier names take longer to comprehend.",
                    "Lexical categories for source code identifiers.",
                    "Computing counter-examples for privilege protection losses using security models.",
                    "Enriching in-IDE process information with fine-grained source code history.",
                    "How to gamify software engineering.",
                    "Scalable tag recommendation for software information sites.",
                    "Stack Overflow: A code laundering platform?",
                    "An empirical study of code smells in JavaScript projects.",
                    "Antipatterns causing memory bloat: A case study.",
                    "Variant-preserving refactorings for migrating cloned products to a product line.",
                    "Efficient method extraction for automatic elimination of type-3 clones.",
                    "Spreadsheet testing in practice.",
                    "Dynamic patch generation for null pointer exceptions using metaprogramming.",
                    "Improving fault localization for Simulink models using search-based testing and prediction models.",
                    "An empirical investigation into the cost-effectiveness of test effort allocation strategies for finding faults.",
                    "What information about code snippets is available in different software-related documents? An exploratory study.",
                    "Harnessing Twitter to support serendipitous learning of developers.",
                    "Why do we break APIs? First answers from developers.",
                    "An arc-based approach for visualization of code smells.",
                    "Towards continuous software release planning.",
                    "An exploratory study on library aging by monitoring client usage in a software ecosystem.",
                    "Trends on empty exception handlers for Java open source libraries.",
                    "Analyzing the evolution of testing library usage in open source Java projects.",
                    "On the evolution of exception usage in Java projects.",
                    "Statically identifying class dependencies in legacy JavaScript systems: First results.",
                    "CodeCritics applied to database schema: Challenges and first results.",
                    "Cloud-based parallel concolic execution.",
                    "Under-optimized smart contracts devour your money.",
                    "Pluggable Controllers and Nano-Patterns.",
                    "Query Construction Patterns in PHP.",
                    "Supporting schema evolution in schema-less NoSQL data stores.",
                    "XCORE: Support for developing program analysis tools.",
                    "srcQL: A syntax-aware query language for source code.",
                    "UAV: Warnings from multiple Automated Static Analysis Tools at a glance.",
                    "The Spartanizer: Massive automatic refactoring.",
                    "c-JRefRec: Change-based identification of Move Method refactoring opportunities.",
                    "Lightweight detection of Android-specific code smells: The aDoctor project.",
                    "scat: Learning from a single execution of a binary.",
                    "dynStruct: An automatic reverse engineering tool for structure recovery and memory use analysis.",
                    "InsDal: A safe and extensible instrumentation tool on Dalvik byte-code for Android applications.",
                    "Columbo: High perfomance unpacking.",
                    "Hindsight: Revealing the evolution of dependencies to developers.",
                    "Replan: A Release Planning Tool.",
                    "Bringing back-in-time debugging down to the database.",
                    "Performance tuning for automotive Software Fault Prediction.",
                    "Business process recovery based on system log and information of organizational structure.",
                    "Multi-language re-documentation to support a COBOL to Java migration project.",
                    "Proactive reviews of textual requirements.",
                    "Data access visualization for legacy application maintenance.",
                    "An empirical study of clone density evolution and developer cloning tendency.",
                    "Towards reverse engineering of intermediate code for documentation generators.",
                    "A framework for classifying and comparing source code recommendation systems.",
                    "Self-adaptive systems framework based on agent and search-based optimization.",
                    "The importance of program Design Patterns training.",
                    "Conventionality analysis of array objects in JavaScript.",
                    "Two improvements to detect duplicates in Stack Overflow.",
                    "Modernizing domain-specific languages with XMLText and IntellEdit.",
                    "Lost comments support program comprehension.",
                    "Does the release cycle of a library project influence when it is adopted by a client project?",
                    "Which review feedback did long-term contributors get on OSS projects?",
                    "Frame-based behavior preservation in refactoring.",
                    "Log generation for coding behavior analysis: For focusing on how kids are coding not what they are coding.",
                    "Towards understanding an open-source bounty: Analysis of Bountysource."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2017maltesque",
                "sub_name": "2017 IEEE Workshop on Machine Learning Techniques for Software Quality Evaluation, MaLTeSQuE@SANER, Klagenfurt, Austria, February 21, 2017.",
                "count": 6,
                "papers": [
                    "Using source code metrics to predict change-prone web services: A case-study on ebay services.",
                    "Investigating code smell co-occurrences using association rule learning: A replicated study.",
                    "Using machine learning to design a flexible LOC counter.",
                    "Machine learning for finding bugs: An initial report.",
                    "Automatic feature selection by regularization to improve bug prediction accuracy.",
                    "Hyperparameter optimization to improve bug prediction accuracy."
                ]
            }
        ]
    },
    {
        "year": "2016",
        "name": "23rd SANER 2016",
        "info": "Suita, Osaka, Japan",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2016",
                "sub_name": "IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering, SANER 2016, Suita, Osaka, Japan, March 14-18, 2016 - Volume 1.",
                "count": 76,
                "papers": [
                    "Domino Effect: Move More Methods Once a Method is Moved.",
                    "Supporting Selective Undo for Refactoring.",
                    "Finding the Best Compromise Between Design Quality and Testing Effort During Refactoring.",
                    "Studying the Relation between Anti-Patterns in Design Models and in Source Code.",
                    "An Empirical Study on Recommendations of Similar Bugs.",
                    "Cross-Architecture Binary Semantics Understanding via Similar Code Comparison.",
                    "Bug Replication in Code Clones: An Empirical Study.",
                    "On the Relationship of Inconsistent Software Clones and Faults: An Empirical Study.",
                    "Software-Specific Named Entity Recognition in Software Engineering Social Content.",
                    "Forking and the Sustainability of the Developer Community Participation - An Empirical Investigation on Outcomes and Reasons.",
                    "More Common Than You Think: An In-depth Study of Casual Contributors.",
                    "A Study of Visual Studio Usage in Practice.",
                    "Evaluating Automatic Spreadsheet Metadata Extraction on a Large Set of Responses from MOOC Participants.",
                    "Localizing Multiple Faults in Simulink Models.",
                    "A More Accurate Model for Finding Tutorial Segments Explaining APIs.",
                    "An Empirical Study on the Use of CSS Preprocessors.",
                    "Examining the Impact of Self-Admitted Technical Debt on Software Quality.",
                    "The Impact of Human Discussions on Just-in-Time Quality Assurance: An Empirical Study on OpenStack and Eclipse.",
                    "Generalizing the Analysis of Evolutionary Coupling for Software Change Impact Analysis.",
                    "History Driven Program Repair.",
                    "Negative Effects of Bytecode Instrumentation on Java Source Code Coverage.",
                    "UROBOROS: Instrumenting Stripped Binaries with Static Reassembling.",
                    "Towards Transparent Introspection.",
                    "Linvail: A General-Purpose Platform for Shadow Execution of JavaScript.",
                    "Custom-Tailored Variability Mining for Block-Based Languages.",
                    "A Case Study on Type Hints in Method Argument Names in Pharo Smalltalk Projects.",
                    "Visualizing Data-Flows in Functional Programs.",
                    "Tracking Null Checks in Open-Source Java Systems.",
                    "Parameterizing and Assembling IR-Based Solutions for SE Tasks Using Genetic Algorithms.",
                    "Examining the Stability of Logging Statements.",
                    "Mining Analogical Libraries in Q&A Discussions - Incorporating Relational and Categorical Knowledge into Word Embedding.",
                    "RACK: Automatic API Recommendation Using Crowdsourced Knowledge.",
                    "Do Developers Deprecate APIs with Replacement Messages? A Large-Scale Analysis on Java Systems.",
                    "MICHAC: Defect Prediction via Feature Selection Based on Maximal Information Coefficient with Hierarchical Agglomerative Clustering.",
                    "On the Detection of Licenses Violations in the Android Ecosystem.",
                    "Do Code Smells Impact the Effort of Different Maintenance Programming Activities?",
                    "An Investigation into the Use of Common Libraries in Android Apps.",
                    "Revisiting the Description-to-Behavior Fidelity in Android Applications.",
                    "Mining Android Apps to Recommend Permissions.",
                    "Optimizing User Experience in Choosing Android Applications.",
                    "Efficient and Precise Dynamic Slicing for Client-Side JavaScript Programs.",
                    "Supporting Program Analysis for Non-Mainstream Languages: Experiences and Lessons Learned.",
                    "Analyzing the State of Static Analysis: A Large-Scale Evaluation in Open Source Software.",
                    "Marea: A Semi-Automatic Decision Support System for Breaking Dependency Cycles.",
                    "When GitHub Meets CRAN: An Analysis of Inter-Repository Package Dependency Problems.",
                    "Achieving Knowledge Evolution in Dynamic Software Product Lines.",
                    "Haskell in Green Land: Analyzing the Energy Behavior of a Purely Functional Language.",
                    "Client-Side Energy Efficiency of HTTP/2 for Web and Mobile App Developers.",
                    "Predicting Build Co-changes with Source Code Change and Commit Categories.",
                    "Release Practices for Mobile Apps - What do Users and Developers Think?",
                    "A Large Scale Study of Multiple Programming Languages and Code Quality.",
                    "Botched Releases: Do We Need to Roll Back? Empirical Study on a Commercial Web App.",
                    "Parameter Values of Android APIs: A Preliminary Study on 100, 000 Apps.",
                    "Native or Web? A Preliminary Study on the Energy Consumption of Android Development Models.",
                    "Composite Refactoring for Decoupling Multiple Classes.",
                    "A Code Refactoring Dataset and Its Assessment Regarding Software Maintainability.",
                    "Frankencode: Creating Diverse Programs Using Code Clones.",
                    "Antipattern and Code Smell False Positives: Preliminary Conceptualization and Classification.",
                    "Identifying Utility Functions Using Random Forests.",
                    "Towards Building API Usage Example Metrics.",
                    "Software Language Identification with Natural Language Classifiers.",
                    "At Ease with Your Warnings: The Principles of the Salutogenesis Model Applied to Automatic Static Analysis.",
                    "An Empirical Study on the Usage of the Swift Programming Language.",
                    "AutoBench: Finding Workloads That You Need Using Pluggable Hybrid Analyses.",
                    "Analyzing the Decision Criteria of Software Developers Based on Prospect Theory.",
                    "BUMPER: A Tool for Coping with Natural Language Searches of Millions of Bugs and Fixes.",
                    "BINSEC/SE: A Dynamic Symbolic Execution Toolkit for Binary-Level Analysis.",
                    "CoreTAna: A Trace Analyzer for Reverse Engineering Real-Time Software.",
                    "Supporting Merge Conflict Resolution by Using Fine-Grained Code Change History.",
                    "Managing Traceability Links with MaTraca.",
                    "Automated Generalization and Refinement of Code Templates with Ekeko/X.",
                    "Improving the Performance of a Large Scale Spreadsheet: A Case Study.",
                    "A Systematic Framework for Modernizing Legacy Application Systems.",
                    "Experience Report on Building ASTM Based Tools for Multi-language Reverse Engineering.",
                    "On Error-Class Distribution in Automotive Model-Based Software.",
                    "Designing and Developing Automated Refactoring Transformations: An Experience Report."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2016fose",
                "sub_name": "Leaders of Tomorrow Symposium: Future of Software Engineering, FOSE@SANER 2016, Osaka, Japan, March 14, 2016.",
                "count": 9,
                "papers": [
                    "Mining Unstructured Data in Software Repositories: Current and Future Trends.",
                    "Program Comprehension: Past, Present, and Future.",
                    "Future Trends in Software Engineering Research for Mobile Apps.",
                    "Defect Prediction: Accomplishments and Future Challenges.",
                    "Green Software Engineering: The Curse of Methodology.",
                    "Spreadsheets are Code: An Overview of Software Engineering Approaches Applied to Spreadsheets.",
                    "Leveraging Biometric Data to Boost Software Developer Productivity.",
                    "Modern Release Engineering in a Nutshell - Why Researchers Should Care.",
                    "Software Analysis for the Web: Achievements and Prospects."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2016vst",
                "sub_name": "First International Workshop on Validating Software Tests, VST@SANER 2016, Osaka, Japan, March 15, 2016.",
                "count": 8,
                "papers": [
                    "Towards Inferring Environment Models for Control Functions from Recorded Signal Data.",
                    "Discovering and Validating Concurrency Specification from Test Executions.",
                    "Trace Files for Automatic Memory Management Systems.",
                    "Assessing the Test Suite of a Large System Based on Code Coverage, Efficiency and Uniqueness.",
                    "Using the City Metaphor for Visualizing Test-Related Metrics.",
                    "Precondition Coverage in Software Testing.",
                    "Automated Static Analysis of Unit Test Code.",
                    "Classification of Randomly Generated Test Cases."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2016ppap",
                "sub_name": "Third International Workshop on Patterns Promotion and Anti-patterns Prevention, PPAP@SANER 2016, Osaka, Japan, March 15, 2016.",
                "count": 3,
                "papers": [
                    "Do Developers Focus on Severe Code Smells?",
                    "ACDPR: A Recommendation System for the Creational Design Patterns Using Anti-patterns.",
                    "Understanding the Evolution of Code Smells by Observing Code Smell Clusters."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2016iwsc",
                "sub_name": "10th International Workshop on Software Clones, IWSC@SANER 2016, Osaka, Japan, March 15, 2016.",
                "count": 13,
                "papers": [
                    "Software-Clone Rates in Open-Source Programs Written in C or C++.",
                    "A Comparative Study on Vulnerabilities in Categories of Clones and Non-cloned Code.",
                    "Assessing the Differences of Clone Detection Methods Used in the Fault-Prone Module Prediction.",
                    "Towards Detection and Analysis of Interlanguage Clones for Multilingual Web Applications.",
                    "Introducing Parameter Sensitivity to Dynamic Code-Clone Analysis Methods.",
                    "Challenges in Behavioral Code Clone Detection.",
                    "Combining Clone Detection and Latent Semantic Indexing to Detect Re-implementations.",
                    "Extensions of Component Rank Model by Taking into Account for Clone Relations.",
                    "Pattern Analysis of TXL Programs.",
                    "An Empirical Study on Ranking Change Recommendations Retrieved Using Code Similarity.",
                    "Towards a Structural Clone Based Recommender System.",
                    "Duplication for the Removal of Duplication.",
                    "Towards Implementation of an Integrated Clone Management Infrastructure."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2016iwesep",
                "sub_name": "7th International Workshop on Empirical Software Engineering in Practice, IWESEP@SANER 2016, Osaka, Japan, March 13, 2016.",
                "count": 11,
                "papers": [
                    "Measuring Navigation Efficiency in the IDE.",
                    "How do GitHub Users Feel with Pull-Based Development?",
                    "How to Provide Developers Only with Relevant Information?",
                    "Identifying Auto-Generated Code by Using Machine Learning Techniques.",
                    "Evaluation of Moving Window Policies with CART.",
                    "Clustering OSS License Statements toward Automatic Generation of License Rules.",
                    "A Preliminary Study of Size Optimization for Text-Based Web-Resource.",
                    "Evaluating an Architecture Conformance Monitoring Solution.",
                    "A Capable Crossover Technique on Automatic Program Repair.",
                    "Identifying the Exact Bug Fixing Actions.",
                    "Open Source Resume (OSR): A Visualization Tool for Presenting OSS Biographies of Developers."
                ]
            }
        ]
    },
    {
        "year": "2015",
        "name": "22nd SANER 2015",
        "info": "Montreal, QC, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2015",
                "sub_name": "22nd IEEE International Conference on Software Analysis, Evolution, and Reengineering, SANER 2015, Montreal, QC, Canada, March 2-6, 2015.",
                "count": 86,
                "papers": [
                    "On whose shoulders? (Keynote).",
                    "Checkpoint alpha (keynote).",
                    "Modeling the evolution of development topics using Dynamic Topic Models.",
                    "Understanding developers' natural language queries with interactive clarification.",
                    "Mining Multi-level API Usage Patterns.",
                    "An observational study on API usage constraints and their documentation.",
                    "Improving pattern tracking with a language-aware tree differencing algorithm.",
                    "Measuring the quality of design pattern detection results.",
                    "Are PHP applications ready for Hack?",
                    "Does JavaScript software embrace classes?",
                    "Evolution analysis for Accessibility Excessiveness in Java.",
                    "A software quality model for RPG.",
                    "JCHARMING: A bug reproduction approach using crash traces and directed model checking.",
                    "Towards a common metamodel for traces of high performance computing systems to enable software analysis tasks.",
                    "Automated extraction of failure reproduction steps from user interaction traces.",
                    "Misery loves company: CrowdStacking traces to aid problem detection.",
                    "Who should review my code? A file location-based code-reviewer recommendation approach for Modern Code Review.",
                    "Code review: Veni, ViDI, vici.",
                    "Would static analysis tools help developers with code reviews?",
                    "Do code review practices impact design quality? A case study of the Qt, VTK, and ITK projects.",
                    "Scaling up evaluation of code search tools through developer usage metrics.",
                    "Optimized feature selection towards functional and non-functional requirements in Software Product Lines.",
                    "Threshold-free code clone detection for a large-scale heterogeneous Java repository.",
                    "Detecting duplicate bug reports with software engineering domain knowledge.",
                    "Impact analysis based on a global hierarchical Object Graph.",
                    "A framework for cost-effective dependence-based dynamic impact analysis.",
                    "Circular dependencies and change-proneness: An empirical study.",
                    "An empirical study of work fragmentation in software evolution tasks.",
                    "Library functions identification in binary code by using graph isomorphism testings.",
                    "A non-convex abstract domain for the value analysis of binaries.",
                    "Precision vs. scalability: Context sensitive analysis with prefix approximation.",
                    "MG++: Memory graphs for analyzing dynamic data structures.",
                    "SQA-Profiles: Rule-based activity profiles for Continuous Integration environments.",
                    "Cross-project build co-change prediction.",
                    "The influence of App churn on App success and StackOverflow discussions.",
                    "Beyond support and confidence: Exploring interestingness measures for rule-based specification mining.",
                    "Untangling fine-grained code changes.",
                    "A comprehensive and scalable method for analyzing fine-grained source code change patterns.",
                    "Summarizing Evolutionary Trajectory by Grouping and Aggregating relevant code changes.",
                    "Identifying the exact fixing actions of static rule violation.",
                    "CloCom: Mining existing source code for automatic comment generation.",
                    "amAssist: In-IDE ambient search of online programming resources.",
                    "Reverse engineering time-series interaction data from screen-captured videos.",
                    "Niche vs. breadth: Calculating expertise over time through a fine-grained analysis.",
                    "Protecting web applications via Unicode extension.",
                    "A search-based approach to multi-view clustering of software systems.",
                    "CEL: Touching software modeling in essence.",
                    "NIRMAL: Automatic identification of software relevant tweets leveraging language model.",
                    "A static code analysis tool for control system software.",
                    "RbG: A documentation generator for scientific and engineering software.",
                    "Historef: A tool for edit history refactoring.",
                    "ClonePacker: A tool for clone set visualization.",
                    "GiLA: GitHub label analyzer.",
                    "SPCP-Miner: A tool for mining code clones that are important for refactoring or tracking.",
                    "TRACERJD: Generic trace-based dynamic dependence analysis with fine-grained logging.",
                    "Umple: A framework for Model Driven Development of Object-Oriented Systems.",
                    "Assessing the bus factor of Git repositories.",
                    "Old habits die hard: Why refactoring for understandability does not give immediate benefits.",
                    "Bash2py: A bash to Python translator.",
                    "On implementational variations in static analysis tools.",
                    "Tracking known security vulnerabilities in proprietary software systems.",
                    "Trusting a library: A study of the latency to adopt the latest Maven release.",
                    "Evolution of dynamic feature usage in PHP.",
                    "Towards incremental model slicing for delta-oriented software product lines.",
                    "Understanding software performance regressions using differential flame graphs.",
                    "TextRank based search term identification for software change tasks.",
                    "Query expansion via WordNet for effective code search.",
                    "Exploring the use of labels to categorize issues in Open-Source Software projects.",
                    "Explore the evolution of development topics via on-line LDA.",
                    "Code coverage and test suite effectiveness: Empirical study with real bugs in large systems.",
                    "Detection of violation causes in reflexion models.",
                    "A comparative study on the effectiveness of part-of-speech tagging techniques on bug reports.",
                    "Efficiently identifying object production sites.",
                    "Where was this SQL query executed? a static concept location approach.",
                    "Taint analysis of manual service compositions using Cross-Application Call Graphs.",
                    "TXL source transformation in practice.",
                    "Software risk management in practice: Shed light on your software product.",
                    "Software architecture reconstruction: Why? What? How?",
                    "SKilLed communication for toolchains.",
                    "The impact of column-orientation on the quality of class inheritance mapping specifications.",
                    "Improving the integration process of large software systems.",
                    "Handling the differential evolution of software artefacts: A framework for consistency management.",
                    "Towards a framework for analysis, transformation, and manipulation of Makefiles.",
                    "Towards a framework for automatic correction of anti-patterns.",
                    "Towards an ontology-based context-aware meta-model for the software domain.",
                    "Investigating modern release engineering practices."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2015swan",
                "sub_name": "1st IEEE International Workshop on Software Analytics, SWAN 2015, Montreal, QC, Canada, March 2, 2015.",
                "count": 11,
                "papers": [
                    "Toward a learned project-specific fault taxonomy: application of software analytics.",
                    "Challenges and Issues of Mining Crash Reports.",
                    "Bug report recommendation for code inspection.",
                    "Test case analytics: Mining test case traces to improve risk-driven testing.",
                    "Testing analytics on software variability.",
                    "How we resolve conflict: an empirical study of method-level conflict resolution.",
                    "M3: A general model for code analytics in rascal.",
                    "Studying the impact of evolution in R libraries on software engineering research.",
                    "Analyzing dynamic information with spy and roassal: an experience report.",
                    "MARFCAT: Fast code analysis for defects and vulnerabilities.",
                    "University-industry collaboration and open source software (OSS) dataset in mining software repositories (MSR) research."
                ]
            },
            {
                "sub_name_abbr": "conf/wcre/2015pcoda",
                "sub_name": "6th IEEE International Workshop on Program Comprehension through Dynamic Analysis, PCODA 2015, Montreal, QC, Canada, March 2, 2015.",
                "count": 4,
                "papers": [
                    "Parceive: Interactive parallelization based on dynamic analysis.",
                    "Symbolic analysis of assembly traces: Lessons learned and perspectives.",
                    "A generalized monitor verdict for log trace triaging.",
                    "Conceptual interpretation of SQL execution traces for program comprehension."
                ]
            }
        ]
    },
    {
        "year": "2014",
        "name": "CSMR-WCRE 2014",
        "info": "Antwerp, Belgium",
        "venues": [
            {
                "sub_name_abbr": "conf/csmr/2014",
                "sub_name": "2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014, Antwerp, Belgium, February 3-6, 2014.",
                "count": 71,
                "papers": [
                    "Using biology and ecology as inspiration for software maintenance? (Keynote abstract).",
                    "Mitigating the Risk of software change in practice: Retrospective on more than 50 architecture evaluations in industry (Keynote paper).",
                    "The vision of software clone management: Past, present, and future (Keynote paper).",
                    "NL-based query refinement and contextualized code search results: A user study.",
                    "Automated construction of a software-specific word similarity database.",
                    "A case study of paired interleaving for evaluating code search techniques.",
                    "Broken promises: An empirical study into evolution problems in Java programs caused by library upgrades.",
                    "Detecting infeasible branches based on code patterns.",
                    "Web API growing pains: Stories from client developers and their code.",
                    "An empirical study on the fault-proneness of clone migration in clone genealogies.",
                    "Unification and refactoring of clones.",
                    "Automatic ranking of clones for refactoring through mining association rules.",
                    "Follow the path: Debugging state anomalies along execution histories.",
                    "Towards more accurate multi-label software behavior learning.",
                    "An empirical study of long lived bugs.",
                    "Identifying risky areas of software code in Agile/Lean software development: An industrial experience report.",
                    "Cross-project defect prediction models: L'Union fait la force.",
                    "An empirical study of bug report field reassignment.",
                    "Supporting continuous integration by mashing-up software quality information.",
                    "Towards a context-aware IDE-based meta search engine for recommendation about programming errors and exceptions.",
                    "Test suite reduction for fault detection and localization: A combined approach.",
                    "In medio stat virtus: Extract class refactoring through nash equilibria.",
                    "Remodularization analysis using semantic clustering.",
                    "Mc2FOR: A tool for automatically translating MATLAB to FORTRAN 95.",
                    "Does return null matter?",
                    "Extracting relative thresholds for source code metrics.",
                    "Reverse engineering web configurators.",
                    "A contextual approach for effective recovery of inter-process communication patterns from HPC traces.",
                    "Transition and defect patterns of components in dependency cycles during software evolution.",
                    "Anti-pattern detection with model queries: A comparison of approaches.",
                    "Examining the relationship between topic model similarity and software maintenance.",
                    "On the maintainability of CRAN packages.",
                    "Formal foundations for semi-parsing.",
                    "On the use of positional proximity in IR-based feature location.",
                    "Recommending verbs for rename method using association rule mining.",
                    "An algorithm for keyword search on an execution path.",
                    "Comparison of feature implementations across languages, technologies, and styles.",
                    "Spotting automatically cross-language relations.",
                    "Mining frequent bug-fix code changes.",
                    "Orchestrating change: An artistic representation of software evolution.",
                    "Co-evolving code-related and database-related changes in a data-intensive software system.",
                    "Improving the detection accuracy of evolutionary coupling by measuring change correspondence.",
                    "Fact extraction from bash in support of script migration.",
                    "Lightweight runtime reverse engineering of binary file format variants.",
                    "Towards tool support for analyzing legacy systems in technical domains.",
                    "Analysis and clustering of model clones: An automotive industrial experience.",
                    "Experience on applying software architecture recovery to automotive embedded systems.",
                    "Towards recovering and exploiting domain knowledge from C code: A case study on automotive software.",
                    "Migrating legacy spreadsheets-based systems to Web MVC architecture: An industrial case study.",
                    "CHOREOS: Large scale choreographies for the future internet.",
                    "DIVERSIFY: Ecology-inspired software evolution for diversity emergence.",
                    "The market for open source: An intelligent virtual open source marketplace.",
                    "ECOS: Ecological studies of open source software ecosystems.",
                    "FITTEST: A new continuous and automated testing process for future Internet applications.",
                    "Model inference and security testing in the spacios project.",
                    "In\u2217bug: Visual analytics of bug repositories.",
                    "APIEvolutionMiner: Keeping API evolution under control.",
                    "How the Sando search tool recommends queries.",
                    "Building development tools interactively using the EKEKO meta-programming library.",
                    "Bit-error injection for software developers.",
                    "Qualitygate SourceAudit: A tool for assessing the technical quality of software.",
                    "Follow the path: Debugging tools for test-driven fault navigation.",
                    "JMODEX: Model extraction for verifying security properties of web applications.",
                    "PHP AiR: Analyzing PHP systems with Rascal.",
                    "Mc2FOR demo: A tool for automatically translating MATLAB to FORTRAN 95.",
                    "DAHLIA: A visual analyzer of database schema evolution.",
                    "SENSEI: Software evolution service integration.",
                    "Understanding the evolution of socio-technical aspects in open source ecosystems.",
                    "International workshop on software clones.",
                    "International workshop on open and original problems in software language engineering.",
                    "International workshop on software quality and maintainability."
                ]
            }
        ]
    },
    {
        "year": "2013",
        "name": "20th WCRE 2013",
        "info": "Koblenz, Germany",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2013",
                "sub_name": "20th Working Conference on Reverse Engineering, WCRE 2013, Koblenz, Germany, October 14-17, 2013.",
                "count": 61,
                "papers": [
                    "Genetic programming for Reverse Engineering.",
                    "The first decade of GUI ripping: Extensions, applications, and broader impacts.",
                    "Reverse Engineering in Industry.",
                    "Who allocated my memory? Detecting custom memory allocators in C binaries.",
                    "MemPick: High-level data structure detection in C/C++ binaries.",
                    "Reconstructing program memory state from multi-gigabyte instruction traces to support interactive analysis.",
                    "Static binary rewriting without supplemental information: Overcoming the tradeoff between coverage and correctness.",
                    "An incremental update framework for efficient retrieval from software libraries for bug localization.",
                    "Accurate developer recommendation for bug resolution.",
                    "Has this bug been reported?",
                    "Automatic recovery of root causes from bug-fixing changes.",
                    "Distilling useful clones by contextual differencing.",
                    "Effects of cloned code on software maintainability: A replicated developer study.",
                    "The influence of non-technical factors on code review.",
                    "Understanding project dissemination on a social coding site.",
                    "What help do developers seek, when and how?",
                    "Towards understanding how developers spend their effort during maintenance activities.",
                    "Leveraging specifications of subcomponents to mine precise specifications of composite components.",
                    "A model-driven graph-matching approach for design pattern detection.",
                    "Automated library recommendation.",
                    "Automatic discovery of function mappings between similar libraries.",
                    "Find your library experts.",
                    "Towards automatically improving package structure while respecting original design decisions.",
                    "Heuristics for discovering architectural violations.",
                    "Recommending Move Method refactorings using dependency sets.",
                    "Do developers care about code smells? An exploratory survey.",
                    "LigRE: Reverse-engineering of control and data flow models for black-box XSS detection.",
                    "Circe: A grammar-based oracle for testing Cross-site scripting in web applications.",
                    "Capture-replay vs. programmable web testing: An empirical assessment during test case evolution.",
                    "Clustering static analysis defect reports to reduce maintenance costs.",
                    "Lehman's laws in agile and non-agile projects.",
                    "Inferring Extended Finite State Machine models from software executions.",
                    "Comparing and combining evolutionary couplings from interactions and commits.",
                    "Improving SOA antipatterns detection in Service Based Systems by mining execution traces.",
                    "Mining system specific rules from change patterns.",
                    "Empirical evidence of code decay: A systematic mapping study.",
                    "Mining the relationship between anti-patterns dependencies and fault-proneness.",
                    "Leveraging historical co-change information for requirements traceability.",
                    "Using relationships for matching textual domain models with existing code.",
                    "On the effectiveness of accuracy of automated feature location technique.",
                    "On the effect of program exploration on maintenance tasks.",
                    "Documenting APIs with examples: Lessons learned with the APIMiner platform.",
                    "Extracting business rules from COBOL: A model-based framework.",
                    "Evaluating architecture stability of software projects.",
                    "Migrating a large scale legacy application to SOA: Challenges and lessons learned.",
                    "Assessing the complexity of upgrading software modules.",
                    "Analyzing PL/1 legacy ecosystems: An experience report.",
                    "PsybOt malware: A step-by-step decompilation case study.",
                    "Reusing reused code.",
                    "Specification extraction by symbolic execution.",
                    "An IDE-based context-aware meta search engine.",
                    "An approach to clone detection in behavioural models.",
                    "MemBrush: A practical tool to detect custom memory allocators in C binaries.",
                    "MemPick: A tool for data structure detection.",
                    "Gelato: GEneric language tools for model-driven analysis of legacy software systems.",
                    "Extracting business rules from COBOL: A model-based tool.",
                    "Detecting dependencies in Enterprise JavaBeans with SQuAVisiT.",
                    "REdiffs: Refactoring-aware difference viewer for java.",
                    "CCCD: Concolic code clone detection.",
                    "3rd workshop on Mining Unstructured Data.",
                    "Workshop on open and original problems in software language engineering."
                ]
            }
        ]
    },
    {
        "year": "2012",
        "name": "19th WCRE 2012",
        "info": "Kingston, ON, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2012",
                "sub_name": "19th Working Conference on Reverse Engineering, WCRE 2012, Kingston, ON, Canada, October 15-18, 2012.",
                "count": 55,
                "papers": [
                    "The Law and Reverse Engineering.",
                    "Workshop on Mining Unstructured Data (MUD) ... Because \"Mining Unstructured Data is Like Fishing in Muddy Waters\"!",
                    "Structured Binary Editing with a CFG Transformation Algebra.",
                    "C to O-O Translation: Beyond the Easy Stuff.",
                    "Refactoring with Unit Testing: A Match Made in Heaven?",
                    "Astra: Bottom-up Construction of Structured Artifact Repositories.",
                    "Detection and Recovery of Functions and their Arguments in a Retargetable Decompiler.",
                    "Towards Static Analysis of Virtualization-Obfuscated Binaries.",
                    "Code Defactoring: Evaluating the Effectiveness of Java Obfuscations.",
                    "Understanding Android Fragmentation with Topic Analysis of Vendor-Specific Bugs.",
                    "Using Network Analysis for Recommendation of Central Software Classes.",
                    "TRIS: A Fast and Accurate Identifiers Splitting and Expansion Algorithm.",
                    "Software Clustering: Unifying Syntactic and Semantic Features.",
                    "Using Bug Report Similarity to Enhance Bug Localisation.",
                    "SCAN: An Approach to Label and Relate Execution Trace Segments.",
                    "Feature Location in a Collection of Product Variants.",
                    "Feature Location Using Data Mining on Existing Test-Cases.",
                    "Execution Trace Abstraction Based on Meta Patterns Usage.",
                    "Reverse Engineering iOS Mobile Applications.",
                    "Understanding the Runtime Topology of Service-Oriented Systems.",
                    "Precise Detection of Uninitialized Variables Using Dynamic Analysis - Extending to Aggregate and Vector Types.",
                    "Automatic Defect Categorization.",
                    "Information Retrieval Based Nearest Neighbor Classification for Fine-Grained Bug Severity Prediction.",
                    "An Empirical Study on Factors Impacting Bug Fixing Time.",
                    "Can Lexicon Bad Smells Improve Fault Prediction?",
                    "Fast Detection of Access Control Vulnerabilities in PHP Applications.",
                    "On the Evolutionary Nature of Architectural Violations.",
                    "Ownership Object Graphs with Dataflow Edges.",
                    "A Framework to Compare Alert Ranking Algorithms.",
                    "Mining Library Migration Graphs.",
                    "What Do Foreign Keys Actually Mean?",
                    "A Rule-based Automated Approach for Extracting Models from Source Code.",
                    "Automated Acceptance Testing of JavaScript Web Applications.",
                    "Inferring Repository File Structure Modifications Using Nearest-Neighbor Clone Detection.",
                    "Linking Documentation and Source Code in a Software Chrestomathy.",
                    "Reconstructing Architectural Views from Legacy Systems.",
                    "Reverse Engineering Variability in Source Code Using Clone Detection: A Case Study for Linux Variants of Consumer Electronic Devices.",
                    "Empirical Evaluation of Diagrams of the Run-time Structure for Coding Tasks.",
                    "Empirically Examining the Parallelizability of Open Source Software System.",
                    "Inter-Project Functional Clone Detection Toward Building Libraries - An Empirical Study on 13, 000 Projects.",
                    "AQUA: Android QUery Analyzer.",
                    "Detecting Clones Across Microsoft .NET Programming Languages.",
                    "Modeling Software Execution Environment.",
                    "A Very Efficient and Scalable Forward Static Slicing Approach.",
                    "Analyzing the Impact of Antipatterns on Change-Proneness Using Fine-Grained Source Code Changes.",
                    "The Secret Life of Patches: A Firefox Case Study.",
                    "An Empirical Study of the Effect of File Editing Patterns on Software Quality.",
                    "SMURF: A SVM-based Incremental Anti-pattern Detection Approach.",
                    "Towards the Automatic Extraction of Structural Business Rules from Legacy Databases.",
                    "Exploring How to Develop Transformations and Tools for Automated Umplification.",
                    "Towards Tracing at the Model Level.",
                    "Automatic C to O-O Translation with C2Eiffel.",
                    "Archimetrix: A Tool for Deficiency-Aware Software Architecture Reconstruction.",
                    "ATLANTIS - Assembly Trace Analysis Environment.",
                    "OpenTrace: An Open Source Workbench for Automatic Software Traceability Link Recovery."
                ]
            }
        ]
    },
    {
        "year": "2011",
        "name": "18th WCRE 2011",
        "info": "Limerick, Ireland",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2011",
                "sub_name": "18th Working Conference on Reverse Engineering, WCRE 2011, Limerick, Ireland, October 17-20, 2011.",
                "count": 60,
                "papers": [
                    "Incremental Code Clone Detection: A PDG-based Approach.",
                    "On the Effectiveness of Simhash for Detecting Near-Miss Clones in Large Scale Software Systems.",
                    "Internet-scale Real-time Code Clone Search Via Multi-level Indexing.",
                    "An Investigation into the Impact of Software Licenses on Copy-and-paste Reuse among OSS Projects.",
                    "Automatic Segmentation of Method Code into Meaningful Blocks to Improve Readability.",
                    "Requirements Traceability for Object Oriented Systems by Partitioning Source Code.",
                    "Can We Predict Dependencies Using Domain information?",
                    "Does the Documentation of Design Pattern Instances Impact on Source Code Comprehension? Results from Two Controlled Experiments.",
                    "Towards the Extraction of Domain Concepts from the Identifiers.",
                    "Reverse Engineering Co-maintenance Relationships Using Conceptual Analysis of Source Code.",
                    "Concern Localization using Information Retrieval: An Empirical Study on Linux Kernel.",
                    "Locating the Meaning of Terms in Source Code Research on \"Term Introduction\".",
                    "Approximate Code Search in Program Histories.",
                    "Code Search via Topic-Enriched Dependence Graph Matching.",
                    "Measuring the Accuracy of Information Retrieval Based Bug Localization Techniques.",
                    "Exploring the Intent behind API Evolution: A Case Study.",
                    "A Framework Profile of .NET.",
                    "Useful, But Usable? Factors Affecting the Usability of APIs.",
                    "Automatic Extraction of Secrets from Malware.",
                    "Reverse Engineering of Protocols from Network Traces.",
                    "An Android Security Case Study with Bauhaus.",
                    "An Exploratory Study of Software Reverse Engineering in a Security Context.",
                    "How Long Does a Bug Survive? An Empirical Study.",
                    "A Preliminary Evaluation of Text-based and Dependency-based Techniques for Determining the Origins of Bugs.",
                    "Got Issues? Do New Features and Code Improvements Affect Defects?",
                    "Impact of Installation Counts on Perceived Quality: A Case Study on Debian.",
                    "Monitoring Software Quality Evolution by Analyzing Deviation Trends of Modularity Views.",
                    "An Empirical Validation of the Benefits of Adhering to the Law of Demeter.",
                    "Assessing Software Quality by Program Clustering and Defect Prediction.",
                    "Object-Based Dynamic Protocol Recovery for Multi-Threading Programs.",
                    "An Entropy Evaluation Approach for Triaging Field Crashes: A Case Study of Mozilla Firefox.",
                    "Meta-Level Runtime Feature Awareness for Java.",
                    "Using Dynamic Analysis and Clustering for Implementing Services by Reusing Legacy Code.",
                    "Reverse Engineering of Mobile Application Lifecycles.",
                    "Reverse Engineering of Event Handlers of RAD-Based Applications.",
                    "Analyzing the Source Code of Multiple Software Variants for Reuse Potential.",
                    "Reverse Engineering Feature Models from Programs' Feature Sets.",
                    "Make it or Break it: Mining Anomalies from Linux Kbuild.",
                    "An Exploratory Study of Macro Co-changes.",
                    "An Exploratory Study of the Evolution of Communicated Information about the Execution of Large Software Systems.",
                    "SmartDec: Approaching C++ Decompilation.",
                    "Precise Static Analysis of Binaries by Extracting Relational Information.",
                    "Refactoring Traditional Forms into Ajax-enabled Forms.",
                    "An Empirical Study of Refactoring in the Context of FanIn and FanOut Coupling.",
                    "Recommending People in Developers' Collaboration Network.",
                    "Reasoning over the Evolution of Source Code Using Quantified Regular Path Expressions.",
                    "Modularization Metrics: Assessing Package Organization in Legacy Large Object-Oriented Software.",
                    "Application Architecture Discovery - Towards Domain-driven, Easily-Extensible Code Structure.",
                    "Renovation by Machine-Assisted Program Transformation in Production Reporting and Integration.",
                    "Reconstructing Traceability between Bugs and Test Cases: An Experimental Study.",
                    "Recovering Test-to-Code Traceability Via Slicing and Conceptual Coupling.",
                    "In-Memory Database Support for Source Code Search and Analytics.",
                    "Extending Bug Localization Using Information Retrieval and Code Clone Location Techniques.",
                    "Stealthy Profiling and Debugging of Malware Trampolining from User to Kernel Space.",
                    "Function Insight: Highlighting Suspicious Sections in Binary Run Traces.",
                    "Understanding Legacy Features with Featureous.",
                    "iProblems - An Integrated Instrument for Reporting Design Flaws, Vulnerabilities and Defects.",
                    "Focusing on Execution Traces Using Diver.",
                    "jPET: An Automatic Test-Case Generator for Java.",
                    "SCOTCH: Slicing and Coupling Based Test to Code Trace Hunter."
                ]
            }
        ]
    },
    {
        "year": "2010",
        "name": "17th WCRE 2010",
        "info": "Beverly, MA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2010",
                "sub_name": "17th Working Conference on Reverse Engineering, WCRE 2010, 13-16 October 2010, Beverly, MA, USA.",
                "count": 39,
                "papers": [
                    "Normalizing Source Code Vocabulary.",
                    "Studying the Impact of Clones on Software Defects.",
                    "Mining Source Code for Structural Regularities.",
                    "On the Use of Automated Text Summarization Techniques for Summarizing Source Code.",
                    "Static Analysis for Understanding Shared Objects in Open Concurrent Java Programs.",
                    "Visually Supporting Source Code Changes Integration: The Torch Dashboard.",
                    "Understanding Plug-in Test Suites from an Extensibility Perspective.",
                    "Immediacy through Interactivity: Online Analysis of Run-time Behavior.",
                    "Extracting Sequence Diagrams from Execution Traces Using Interactive Visualization.",
                    "Evaluating the Impact of Software Evolution on Software Clustering.",
                    "Understanding Feature Evolution in a Family of Product Variants.",
                    "Blending Conceptual and Evolutionary Couplings to Support Change Impact Analysis in Source Code.",
                    "Reverse Engineering Self-Modifying Code: Unpacker Extraction.",
                    "Reverse Engineering Utility Functions Using Genetic Programming to Detect Anomalous Behavior in Software.",
                    "A Refined Decompiler to Generate C Code with High Readability.",
                    "Heroes in FLOSS Projects: An Explorative Study.",
                    "Improving Automated Mapping in Reflexion Models Using Information Retrieval Techniques.",
                    "Architectural Analysis of Systems Based on the Publisher-Subscriber Style.",
                    "Computer-Aided Extraction of Software Components.",
                    "Software Re-Modularization Based on Structural and Semantic Metrics.",
                    "An Abstraction-Oriented, Path-Based Approach for Analyzing Object Equality in Java.",
                    "Identification of REST-like Resources from Legacy Service Descriptions.",
                    "Umplification: Refactoring to Incrementally Add Abstraction to a Program.",
                    "Enhancing Source-Based Clone Detection Using Intermediate Representation.",
                    "Highly Configurable and Extensible Code Clone Detection.",
                    "From Whence It Came: Detecting Source Code Clones by Analyzing Assembler.",
                    "Predicting Re-opened Bugs: A Case Study on the Eclipse Project.",
                    "A Case Study of Bias in Bug-Fix Datasets.",
                    "Mining Collaboration Patterns from a Large Developer Network.",
                    "Workshop on Mining Unstructured Data (MUD) because \"Mining Unstructured Data is Like Fishing in Muddy Waters\"!",
                    "Workshop on Program Comprehension through Dynamic Analysis (PCODA10).",
                    "International Workshop on Processes for Software Evolution and Maintenance (WoSEMP 2010).",
                    "Improving Source Code Quality through the Definition of Linguistic Antipatterns.",
                    "Conformance Checking during Software Evolution.",
                    "Multi-Language and Heterogeneously-licensed Software Analysis.",
                    "Linguistic Driven Refactoring of Source Code Identifiers.",
                    "Automatic Derivation of Concepts Based on the Analysis of Source Code Identifiers.",
                    "Software Process Recovery: Recovering Process from Artifacts.",
                    "Improving System Testability and Testing with Microarchitectures."
                ]
            }
        ]
    },
    {
        "year": "2009",
        "name": "16th WCRE 2009",
        "info": "Lille, France",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2009",
                "sub_name": "16th Working Conference on Reverse Engineering, WCRE 2009, 13-16 October 2009, Lille, France.",
                "count": 47,
                "papers": [
                    "Beyond the Lone Reverse Engineer: Insourcing, Outsourcing and Crowdsourcing.",
                    "Legacy and Future of Data Reverse Engineering.",
                    "Ten Years Later, Experiments with Clustering as a Software Remodularization Method.",
                    "Who are Source Code Contributors and How do they Change?",
                    "A Study of the Time Dependence of Code Changes.",
                    "Relating Identifier Naming Flaws and Code Quality: An Empirical Study.",
                    "Techniques for Identifying the Country Origin of Mailing List Participants.",
                    "NTrace: Function Boundary Tracing for Windows on IA-32.",
                    "Recovering Views of Inter-System Interaction Behaviors.",
                    "Mining Quantified Temporal Rules: Formalism, Algorithms, and Evaluation.",
                    "An Exploratory Study of the Impact of Code Smells on Software Change-proneness.",
                    "An Empirical Study on Inconsistent Changes to Code Clones at Release Level.",
                    "Lexicon Bad Smells in Software.",
                    "Automatic Package Coupling and Cycle Minimization.",
                    "Identifying Cycle Causes with Enriched Dependency Structural Matrix.",
                    "The Logical Modularity of Programs.",
                    "On the Use of ADM to Contextualize Data on Legacy Source Code for Software Modernization.",
                    "On the Relationship Between Change Coupling and Software Defects.",
                    "Tracking Design Smells: Lessons from a Study of God Classes.",
                    "Bug-Inducing Language Constructs.",
                    "Design Patterns and Change Proneness: A Replication Using Proprietary C# Software.",
                    "Automatic Static Unpacking of Malware Binaries.",
                    "Computing the Structural Difference between State-Based Models.",
                    "Extraction of Inter-procedural Simple Role Privilege Models from PHP Code.",
                    "Traceability Recovery Using Numerical Analysis.",
                    "Benchmarking Lightweight Techniques to Link E-Mails and Source Code.",
                    "Domain Feature Model Recovery from Multiple Applications Using Data Access Semantics and Formal Concept Analysis.",
                    "Characterizing Evolutionary Clusters.",
                    "Autumn Leaves: Curing the Window Plague in IDEs.",
                    "Constructing a Resource Usage View of a Large and Complex Software-Intensive System.",
                    "Static Detection of Disassembly Errors.",
                    "Reverse Engineering Sequence Diagrams for Enterprise JavaBeans with Business Method Interceptors.",
                    "Computing Structural Types of Clone Syntactic Blocks.",
                    "Reverse Engineering Existing Web Service Applications.",
                    "Supporting Feature-Level Software Maintenance.",
                    "Enabling the Evolution of J2EE Applications through Reverse Engineering and Quality Assurance.",
                    "Approximate Graph Matching in Software Engineering.",
                    "Evolving Software Systems Towards Adaptability.",
                    "SQUAD: Software Quality Understanding through the Analysis of Design.",
                    "PRECISO: A Reverse Engineering Tool to Discover Web Services from Relational Databases.",
                    "Recovering Class Models Stereotyped with Crosscutting Concerns.",
                    "SHINOBI: A Tool for Automatic Code Clone Detection in the IDE.",
                    "Enhancing Quality of Code Clone Detection with Program Dependency Graph.",
                    "JavaCompExt: Extracting Architectural Elements from Java Source Code.",
                    "ConAn: A Tool for the Identification of Crosscutting Concerns in Object Oriented Systems Based on Type Hierarchy Analysis.",
                    "REM 2009 - International Workshop on Reverse Engineering Models from Software Artifacts.",
                    "FAMOOSr 2009 - Workshop on FAMIX and Moose in Software Reengineering."
                ]
            },
            {
                "sub_name_abbr": "conf/famoosr/2009",
                "sub_name": "3rd Workshop on FAMIX and Moose in Reengineering, FAMOOSr@WCRE 2009, Lille, France, 2009.",
                "count": 6,
                "papers": [
                    "Identifying Cycle Causes With CycleTable.",
                    "Lumi\u00e8re: An Infrastructure for Producing 3D Applications in Smalltalk.",
                    "Miler - A Tool Infrastructure to Analyze Mailing Lists.",
                    "Challenges for Domain Knowledge Driven Program Analysis.",
                    "Driving the refactoring of Java Enterprise Applications by evaluating the distance between application elements.",
                    "Why and How to Substantiate the Good of our Reverse Engineering Tools?"
                ]
            }
        ]
    },
    {
        "year": "2008",
        "name": "15th WCRE 2008",
        "info": "Antwerp, Belgium",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2008",
                "sub_name": "WCRE 2008, Proceedings of the 15th Working Conference on Reverse Engineering, Antwerp, Belgium, October 15-18, 2008.",
                "count": 50,
                "papers": [
                    "Of Changes and their History: Some Ideas for Future IDEs.",
                    "Reverse Engineering the Bazaar: Collaboration and Communication in Open Source Development.",
                    "WCRE 1998 Most Influential Paper: Grokking Software Architecture.",
                    "Retrieving Task-Related Clusters from Change History.",
                    "A Bayesian Network Based Approach for Change Coupling Prediction.",
                    "Discovering New Change Patterns in Object-Oriented Systems.",
                    "Logical Coupling Based on Fine-Grained Change Information.",
                    "Analyzing the Actual Execution of a Large Software-Intensive System for Determining Dependencies.",
                    "Reverse Engineering CAPTCHAs.",
                    "Reverse Engineering Finite State Machines from Rich Internet Applications.",
                    "Representing and Integrating Dynamic Collaborations in IDEs.",
                    "An Empirical Study of Function Clones in Open Source Software.",
                    "Detecting Clones in Business Applications.",
                    "Exploring Regularity in Source Code: Software Science and Zipf's Law.",
                    "Pitfalls in Aspect Mining.",
                    "Mining Coding Patterns to Detect Crosscutting Concerns in Java Programs.",
                    "A Hybrid Query Engine for the Structural Analysis of Java and AspectJ Programs.",
                    "Automated Concept Location Using Independent Component Analysis.",
                    "Integrative Levels of Program Comprehension.",
                    "Source Code Retrieval for Bug Localization Using Latent Dirichlet Allocation.",
                    "PREREQIR: Recovering Pre-Requirements via Cluster Analysis.",
                    "Data Model Reverse Engineering in Migrating a Legacy System to Java.",
                    "SQL2XMI: Reverse Engineering of UML-ER Diagrams from Relational Database Schemas.",
                    "Dynamic Analysis of SQL Statements for Data-Intensive Applications Reverse Engineering.",
                    "Generating Version Convertors for Domain-Specific Languages.",
                    "Automatic Type Reconstruction in Disassembled C Programs.",
                    "Consistent Layout for Thematic Software Maps.",
                    "Visual Exploration of Large-Scale System Evolution.",
                    "Variant Comparison - A Technique for Visualizing Software Variants.",
                    "Towards a Process for Developing Maintenance Tools in Academia.",
                    "Analysis of Procedure Splitability.",
                    "Reconsidering Classes in Procedural Object-Oriented Code.",
                    "Estimation of Test Code Changes Using Historical Release Data.",
                    "Diff/TS: A Tool for Fine-Grained Structural Change Analysis.",
                    "Error Correcting Graph Matching Application to Software Evolution.",
                    "Benchmarking Technical Quality of Software Products.",
                    "Hard Facts vs Soft Facts.",
                    "Large-Scale Data Reengineering: Return from Experience.",
                    "Reverse Engineering in the World of Enterprise SOA.",
                    "Extending a Model Transformation Language Using Higher Order Transformations.",
                    "First-Class Change Objects for Feature-Oriented Programming.",
                    "Software Language Evolution.",
                    "Graph-Centric Tools for Understanding the Evolution and Relationships of Software Structures.",
                    "Navigating Through the Design of Object-Oriented Programs.",
                    "A Business Process Explorer: Recovering Business Processes from Business Applications.",
                    "Towards a Benchmark for Evaluating Reverse Engineering Tools.",
                    "A Visual Trace Analysis Tool for Understanding Feature Scattering.",
                    "The Metric Lens: Visualizing Metrics and Structure on Software Diagrams.",
                    "FAMOOSr 2008: Workshop on FAMIX and Moose in Software Reengineering.",
                    "Workshop on Program Comprehension Through Dynamic Analysis (PCODA'08)."
                ]
            }
        ]
    },
    {
        "year": "2007",
        "name": "14th WCRE 2007",
        "info": "Vancouver, BC, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2007",
                "sub_name": "14th Working Conference on Reverse Engineering (WCRE 2007), 28-31 October 2007, Vancouver, BC, Canada.",
                "count": 42,
                "papers": [
                    "The Dark Side of Software Reverse Engineering.",
                    "Reengineering Tools: A Perspective from the Trenches.",
                    "Interprocedural Static Single Assignment Form.",
                    "An Automated Approach to Grammar Recovery for a Dialect of the C++ Language.",
                    "Parametric Process Model Inference.",
                    "Documenting Typical Crosscutting Concerns.",
                    "Temporal Exploration of Software Models: A Tool Feature to Enhance Software Understanding.",
                    "Detecting Implied Scenarios from Execution Traces.",
                    "Examining the Effects of Global Data Usage on Software Maintainability.",
                    "Do Code and Comments Co-Evolve? On the Relation between Source Code and Comment Changes.",
                    "Quality Assessment Based on Attribute Series of Software Evolution.",
                    "An ADM Approach to Reengineer Relational Databases towards Web Services.",
                    "Discovering the Objectual Meaning of Foreign Key Constraints in Enterprise Applications.",
                    "Recovering Data Models via Guarded Dependences.",
                    "Reverse Engineering Super-Repositories.",
                    "Visualizing Software Architecture Evolution Using Change-Sets.",
                    "A Model to Understand the Building and Running Inter-Dependencies of Software.",
                    "Clone Detection via Structural Abstraction.",
                    "Extending the Reflexion Method for Consolidating Software Variants into Product Lines.",
                    "A Study of Consistent and Inconsistent Changes to Code Clones.",
                    "Swing2Script: Migration of Java-Swing Applications to Ajax Web Applications.",
                    "Reverse Engineering of Graphical User Interfaces Using Static Analyses.",
                    "Turning Web Applications into Web Services by Wrapping Techniques.",
                    "Reverse Engineering State Machines by Interactive Grammar Inference.",
                    "Dynamic Protocol Recovery.",
                    "A Reverse Engineering Tool for Extracting Protocols of Networked Applications.",
                    "Clustering for Generating Framework Top-Level Views.",
                    "Lossless Comparison of Nested Software Decompositions.",
                    "An Amalgamated Dynamic and Static Architecture Reconstruction Framework to Control Component Interactions 259.",
                    "EvoSpaces Visualization Tool: Exploring Software Architecture in 3D.",
                    "Emulated Breakpoint Debugger and Data Mining Using Detours.",
                    "CocoViz: Supported Cognitive Software Visualization.",
                    "Deobfuscator: An Automated Approach to the Identification and Removal of Code Obfuscation.",
                    "Reforming Software Design Documentation.",
                    "Dynamic Analysis Techniques for the Reconstruction of Architectural Views.",
                    "PRESSWEB: A Process to Reengineer Legacy Systems towards Web Services.",
                    "Building Reverse Engineering Tools with Software Components: Ten Lessons Learned.",
                    "An Experimental Platform for Root Cause Diagnosis Research.",
                    "Intellectual Property for Software (Re-)Engineers and Researchers: A Tutorial.",
                    "Workshop on Program Comprehension through Dynamic Analysis (PCODA07).",
                    "International Workshop on Code Based Software Security Assessments - CoBaSSA 2007.",
                    "Reverse Engineering for Software Performance Engineering."
                ]
            }
        ]
    },
    {
        "year": "2006",
        "name": "13th WCRE 2006",
        "info": "Benevento, Italy",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2006",
                "sub_name": "13th Working Conference on Reverse Engineering (WCRE 2006), 23-27 October 2006, Benevento, Italy.",
                "count": 45,
                "papers": [
                    "The Experimental Paradigm in Reverse Engineering: Role, Challenges, and Limitations.",
                    "Bits of History, Challenges for the Future and Autonomic Computing Technology.",
                    "\"Cloning Considered Harmful\" Considered Harmful.",
                    "A common framework for aspect mining based on crosscutting concern sorts.",
                    "Understanding Software Architectures by Visualization--An Experiment with Graphical Elements.",
                    "QUARK: Empirical Assessment of Automaton-based Specification Miners.",
                    "An Orchestrated Multi-view Software Architecture Reconstruction Environment.",
                    "An Industrial Case Study of Program Artifacts Viewed During Maintenance Tasks.",
                    "How Programs Represent Reality (and how they don't).",
                    "On Computing the Canonical Features of Software Systems.",
                    "An Empirical Study of Executable Concept Slice Size.",
                    "A Service-Oriented Componentization Framework for Java Software Systems.",
                    "Reverse Engineering of System Interfaces A Report from the Field.",
                    "A UML-based Approach for Abstracting Application Interfaces to REST-like Services.",
                    "Insider and Ousider Threat-Sensitive SQL Injection Vulnerability Analysis in PHP.",
                    "Data Reverse Engineering using System Dependency Graphs.",
                    "Extracting Output Formats from Executables.",
                    "EvoGraph: A Lightweight Approach to Evolutionary and Structural Analysis of Large Software Systems.",
                    "Reverse Engineering with Logical Coupling.",
                    "Animated Visualization of Software History using Evolution Storyboards.",
                    "Discovering Organizational Aspects from the Source Code History Log during the Product Line Planning Phase--A Case Study.",
                    "Extracting Change-patterns from CVS Repositories.",
                    "Visualization of CVS Repository Information.",
                    "Extracting Facts from Perl Code.",
                    "Clone Detection Using Abstract Syntax Suffix Trees.",
                    "Refactoring Detection based on UMLDiff Change-Facts Queries.",
                    "Monitoring Requirements Coverage using Reconstructed Views: An Industrial Case Study.",
                    "How Outsourcing Affects the Quality of Mission Critical Software.",
                    "Reverse Engineering in Support of Litigation: Experiences in an Adversarial Environment.",
                    "MELIS: an Eclipse Based Environment for the Migration of Legacy Systems to the Web.",
                    "PODoJA: Packaging Optimizer for Downloadable Java Applications.",
                    "CPP2XMI: Reverse Engineering of UML Class, Sequence, and Activity Diagrams from C++ Source Code.",
                    "FINT: Tool Support for Aspect Mining.",
                    "On the Use of Process Trails to Understand Software Development.",
                    "Pattern-based Reengineering of Software Systems.",
                    "Concept and implementation of the programming language and translator, for embedded systems, based on machine code decompilation and equivalence between source and executable code.",
                    "Quality Assessment of Enterprise Software Systems.",
                    "Code Based Software Security Assessments.",
                    "Empirical Studies in Reverse Engineering.",
                    "Program COmprehension through Dynamic Analysis.",
                    "Design Pattern Detection for Reverse Engineering.",
                    "Case Studies for Reverse Engineers.",
                    "Workshop Introduction Astrenet Aspect Analysis.",
                    "An Analysis of the Correctness and Completeness of Aspect Weaving.",
                    "Mining Control Flow Graphs for Crosscutting Concerns."
                ]
            }
        ]
    },
    {
        "year": "2005",
        "name": "12th WCRE 2005",
        "info": "Pittsburgh, PA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2005",
                "sub_name": "12th Working Conference on Reverse Engineering, WCRE 2005, Pittsburgh, PA, USA, November 7-11, 2005.",
                "count": 31,
                "papers": [
                    "Message from the Program Chairs.",
                    "Message from the General Chair: On the Meeting of Software Architecture and Reverse Engineering.",
                    "Committees.",
                    "Keynote Speakers.",
                    "Search-Based Amorphous Slicing.",
                    "Reengineering C++ Component Models via Automatic Program Transformation.",
                    "Symbolic Interpretation of Legacy Assembly Language.",
                    "Enhancing Security Using Legality Assertions.",
                    "Deobfuscation: Reverse Engineering Obfuscated Code.",
                    "Architecture Recovery and Abstraction from the Perspective of Processes.",
                    "Source versus Object Code Extraction for Recovering Software Architecture.",
                    "Multiple Layer Clustering of Large Software Systems.",
                    "Equipping the Reflexion Method with Automated Clustering.",
                    "Capturing Nontrivial Concerns in Object-Oriented Software.",
                    "Estimating the Costs of a Reengineering Project.",
                    "Asset Recovery and Their Incorporation into Product Lines.",
                    "Enriching Reverse Engineering with Semantic Clustering.",
                    "When Functions Change Their Names: Automatic Detection of Origin Relationships.",
                    "Diagnosing Design Problems in Object Oriented Systems.",
                    "Design Pattern Detection in Eiffel Systems.",
                    "Mappings for Accurately Reverse Engineering UML Class Models from C++.",
                    "Boxology of NBA and TA: A Basis for Understanding Software Architecture.",
                    "Toward an Infrastructure to Support Interoperability in Reverse Engineering.",
                    "Extracting and Representing Cross-Language Dependencies in Diverse Software Systems.",
                    "Semantic Navigation of Large Code Bases in Higher-Order, Dynamically Typed Languages.",
                    "Reengineering towards Product Lines (R2PL 2005).",
                    "Workshop on Program Comprehension through Dynamic Analysis (PCODA '05).",
                    "Workshop on Code Based Software Security Assessments (CoBaSSA 2005).",
                    "RETR: Reverse Engineering to Requirements.",
                    "Architecture-Driven Modernization (ADM).",
                    "Architecting, Analyzing and Testing Service-Oriented Systems."
                ]
            }
        ]
    },
    {
        "year": "2004",
        "name": "11th WCRE 2004",
        "info": "Delft, The Netherlands",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2004",
                "sub_name": "11th Working Conference on Reverse Engineering, WCRE 2004, Delft, The Netherlands, November 8-12, 2004.",
                "count": 38,
                "papers": [
                    "Virus Analysis: Techniques, Tools, and Research Issues.",
                    "Model Engineering for Software Modernization.",
                    "Static and Dynamic Analyses of Programs with Implicit Control Flow.",
                    "Experiences with an Industrial Long-Term Reengineering Project.",
                    "Reengineering Reports.",
                    "Using a Decompiler for Real-World Source Recovery.",
                    "Toward Seamless Migration of Java AWT-Based Applications to Personal Wireless Devices.",
                    "TUAnalyzer -- Analyzing Templates in C++ Code.",
                    "Updating Legacy Databases through Wrappers: Data Consistency Management.",
                    "A Novel Software Visualisation Model to Support Software Comprehension.",
                    "Exploring Software Evolution Using Spectrographs.",
                    "A Reverse Engineering Approach to Support Software Maintenance: Version Control Knowledge Extraction.",
                    "Insights into System-Wide Code Duplication.",
                    "Aspect Mining through the Formal Concept Analysis of Execution Traces.",
                    "Detecting Implicit Collaboration Patterns.",
                    "Identifying Aspects Using Fan-In Analysis.",
                    "Refactoring -- Improving Coupling and Cohesion of Existing Code.",
                    "Loop Squashing Transformations for Amorphous Slicing.",
                    "Imposing Order on Program Statements to Assist Anti-Virus Scanners.",
                    "Fingerprinting Design Patterns.",
                    "XIRC: A Kernel for Cross-Artifact Information Engineering in Software Development Environments.",
                    "Quantifying the Quality of Object-Oriented Design: The Factor-Strategy Model.",
                    "CacOphoNy: Metamodel-Driven Architecture Recovery.",
                    "An Information Retrieval Approach to Concept Location in Source Code.",
                    "Model-Driven Business Process Recovery.",
                    "Combined Software and Hardware Comprehension in Reverse Engineering.",
                    "An Initial Approach to Assessing Program Comprehensibility Using Spatial Complexity, Number of Concepts and Typographical Style.",
                    "Slice-Based Cohesion Metrics and Software Intervention.",
                    "The Efficiency of Specification Fragments.",
                    "The Small World of Software Reverse Engineering.",
                    "A Framework for the Comparison of Nested Software Decompositions.",
                    "Maintenance and Analysis of Visual Programs -- An Industrial Case.",
                    "Using DDL to Understand and Modify SimpleScalar.",
                    "Towards an Effective Approach for Reverse Engineering.",
                    "A Static Reference Flow Analysis to Understand Design Pattern Behavior.",
                    "Generator Code Opaque Recovery of Form-Oriented Web Site Models.",
                    "A Brief Summary of Cognitive Patterns for Program Comprehension.",
                    "An Initial Experiment in Reverse Engineering Aspects."
                ]
            }
        ]
    },
    {
        "year": "2003",
        "name": "10th WCRE 2003",
        "info": "Victoria, BC, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2003",
                "sub_name": "10th Working Conference on Reverse Engineering, WCRE 2003, Victoria, Canada, November 13-16, 2003.",
                "count": 39,
                "papers": [
                    "Learning from the Past.",
                    "Unscheduling, Unpredication, Unspeculation: Reverse Engineering Itanium Executables.",
                    "An Experimentation Framework for Evaluating Disassembly and Decompilation Tools for C++ and Java.",
                    "Extracting an Explicitly Data-Parallel Representation of Image-Processing Programs.",
                    "Hierarchical Reflexion Models.",
                    "Moving Towards Quality Attribute Driven Software Architecture Reconstruction.",
                    "Towards the Reverse Engineering of UML Sequence Diagrams.",
                    "Reconstructing Software Architecture for J2EE Web Applications.",
                    "Comparative Evaluation of Dynamic Visualisation Tools.",
                    "Analyzing and Relating Bug Report Data for Feature Tracking.",
                    "Reverse Engineering the Process of Small Novice Software Teams.",
                    "Fuzzy Extensions for Reverse Engineering Repository Models.",
                    "Studying the Chaos of Code Development.",
                    "Identification of Software Instabilities.",
                    "Detecting Merging and Splitting using Origin Analysis.",
                    "Predicting Maintainability with Object-Oriented Metrics - An Empirical Comparison.",
                    "Migration of non-decomposable software systems to the Web using screen proxies.",
                    "On-the-fly Wrapping of Web Services to Support Dynamic Integration.",
                    "Improving Fact Extraction of Framework-Based Software Systems.",
                    "Completeness of a Fact Extractor.",
                    "RegReg: a Lightweight Generator of Robust Parsers for Irregular Languages.",
                    "Simple and Efficient Relational Querying of Software Structures.",
                    "Supporting Quick and Dirty CORBA Introspection and Manipulation.",
                    "Toward an environment for comprehending distributed systems.",
                    "Orion-RE: A Component-Based Software Reengineering Environment .",
                    "GUI Ripping: Reverse Engineering of Graphical User Interfaces for Testing.",
                    "Leveraging Visio for Adoption-Centric Reverse Engineering Tools.",
                    "An Industrial Experience in Reverse Engineering.",
                    "Problems Creating Task-relevant Clone Detection Reference Data.",
                    "Algorithm Recognition based on Demand-Driven Data-flow Analysis.",
                    "Analyzing Large Spreadsheet Programs.",
                    "An Empirical Study of Computation Equivalence as Determined by Decomposition Slice Equivalence.",
                    "Using Program Transformation to Secure C Programs Against Buffer Overflows.",
                    "Software Clustering based on Information Loss Minimization.",
                    "Ontological Excavation: Unearthing the core concepts of the application.",
                    "Revealing Class Structure with Concept Lattices.",
                    "First International Workshop on Meta-Models and Schemas for Reverse Engineering - ateM 2003.",
                    "Second International Workshop on Detection of Software Clones.",
                    "First International Workshop on Refactoring : Achievements, Challenges, and Effects (REFACE?03)."
                ]
            }
        ]
    },
    {
        "year": "2002",
        "name": "9th WCRE 2002",
        "info": "Richmond, Virginia, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2002",
                "sub_name": "9th Working Conference on Reverse Engineering (WCRE 2002), 28 October - 1 November 2002, Richmond, VA, USA.",
                "count": 33,
                "papers": [
                    "Applying Spectral Methods to Software Clustering.",
                    "Code Extraction Algorithms which Unify Slicing and Concept Assignment.",
                    "A Study on the Current State of the Art in Tool-Supported UML-Based Static Reverse Engineering.",
                    "Register Liveness Analysis for Optimizing Dynamic Binary Translation.",
                    "Disassembly of Executable Code Revisited.",
                    "Estimating Potential Parallelism for Platform Retargeting.",
                    "Analysis of Virtual Method Invocation for Binary Translation.",
                    "A Methodology for Developing Transformations Using the Maintainability Soft-Goal Graph.",
                    "Relating Expectations to Automatically Recovered Design Patterns.",
                    "Java Quality Assurance by Detecting Code Smells .",
                    "ConSUS: A Scalable Approach to Conditioned Slicing.",
                    "Using Conceptual Roles of Data for Enhanced Program Comprehension.",
                    "Static Trace Extraction.",
                    "Reverse Architecting: Seeking the Architectonic.",
                    "Practice Patterns for Architecture Reconstruction.",
                    "Generation of Architectural Documentation Using XML.",
                    "Revealer: A Lexical Pattern Matcher for Architecture Recovery.",
                    "A Denotational Interprocedural Program Slicer.",
                    "Program Annotation in XML: A Parse-Tree Based Approach.",
                    "An Extensible Tool for Source Code Representation Using XML.",
                    "Strategies for Data Reengineering.",
                    "Finding High-Level Structures in Spreadsheet Programs.",
                    "Verifying Provisions for Post-Transaction User Input Error Correction through Static Program Analysis.",
                    "Exposing Data-Level Parallelism in Sequential Image Processing Algorithms.",
                    "Discovering Thread Interactions in a Concurrent System.",
                    "Semantic Grep: Regular Expressions + Relational Abstraction.",
                    "A Disturbing Result on the Knowledge Used during Software Maintenance.",
                    "Dynamic Component Program Visualization.",
                    "On the Use of Metaballs to Visually Map Source Code Structures and Analysis Results onto 3D Space.",
                    "Extraction and Use of Class Dependency Information for Java.",
                    "Knowledge-Based Library Re-Factoring for an Open Source Project.",
                    "Migrating COBOL Systems to the WEB by Using the MVC Design Pattern.",
                    "Retargeting of Web Pages to Other Computing Platforms with VAQUITA."
                ]
            }
        ]
    },
    {
        "year": "2001",
        "name": "8th WCRE 2001",
        "info": "Stuttgart, Germany",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2001",
                "sub_name": "Proceedings of the Eighth Working Conference on Reverse Engineering, WCRE'01, Stuttgart, Germany, October 2-5, 2001.",
                "count": 38,
                "papers": [
                    "Folding: An Approach to Enable Program Understanding of Preprocessed Languages.",
                    "Generating Robust Parsers Using Island Grammars.",
                    "Node Coarsening Calculi for Program Slicing.",
                    "Reverse Program Calculation Supported by Code Slicing.",
                    "Towards a Standard Schema for C/C++.",
                    "Union Schemas as a Basis for a C++ Extractor.",
                    "Requirements-Driven Software Re-engineering Framework.",
                    "Application of UML Associations and Their Adornments in Design Recovery.",
                    "CRAFT: A Framework for Evaluating Software Clustering Results in the Absence of Benchmark Decompositions.",
                    "Component Clustering Based on Maximal Association.",
                    "An Investigation into the Connectivity Properties of Source-Header Dependency Graphs.",
                    "From an Informal Textual Lexicon to a Well-Structured Lexical Database: An Experiment in Data Reverse Engineering.",
                    "A Retrospective on Industrial Database Reverse Engineering Projects. Part 1.",
                    "A Retrospective on Industrial Database Reverse Engineering Projects. Part 2.",
                    "Maximizing Functional Cohesion of Comprehension Environments by Integrating User and Task Knowledge.",
                    "Characterizing the Informal Knowledge Contained in Systems.",
                    "Program Comprehension Risks and Opportunities in Extreme Programming.",
                    "Wrapping Legacy COBOL Programs behind an XML-Interface.",
                    "Wrapper Development for Legacy Data Reuse.",
                    "Modeling the System-User Dialog Using Interaction Traces.",
                    "REportal: A Web-Based Portal Site for Reverse Engineering.",
                    "An Approach for Reverse Engineering of Web-Based Application.",
                    "Flexible Reverse Engineering of Web Pages with VAQUISTA.",
                    "Reverse Engineering to Achieve Maintainable WWW Sites.",
                    "Displaying Dependence Graphs: A Hierarchical Approach.",
                    "GUSTT: An Amorphous Slicing System which Combines Slicing and Transformation.",
                    "Preprocessor Conditional Removal by Simple Partial Evaluation.",
                    "Parsing in a Hostile World.",
                    "Identifying Similar Code with Program Dependence Graphs.",
                    "The Octagon Abstract Domain.",
                    "Lessons Learned in Data Reverse Engineering.",
                    "Interactive Migration of Legacy Databases to Net-Centric Technologies.",
                    "Reengineering Relational Databases to Object-Oriented: Constructing the Class Hierarchy and Migrating the Data.",
                    "Assisting the Comprehension of Legacy Transactions.",
                    "A Simple Type System for Program Reengineering.",
                    "Comparing Type-Based and Proof-Directed Decompilation.",
                    "Decompiling Java Using Staged Encapsulation.",
                    "Computer Security Analysis through Decompilation and High-Level Debugging."
                ]
            }
        ]
    },
    {
        "year": "2000",
        "name": "7th WCRE 2000",
        "info": "Brisbane, Queensland, Australia",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/2000",
                "sub_name": "Proceedings of the Seventh Working Conference on Reverse Engineering, WCRE'00, Brisbane, Australia, November 23-25, 2000.",
                "count": 40,
                "papers": [
                    "Dynamic Re-engineering of Binary Code with Run-time Feedbacks.",
                    "Reverse Engineering from Assembler to Formal Specifications via Program Transformations.",
                    "Reverse Engineering Tools as Media for Imperfect Knowledge.",
                    "Exploring Legacy Systems using Types.",
                    "Reverse Architecting: An Industrial Experience Report.",
                    "Migrating Legacy User Interfaces to the Internet: Shifting Dialogue Initiative.",
                    "Constructing XML-Speaking Wrappers for WEB Applications: Towards an Interoperating WEB.",
                    "Data Reverse Engineering: A Historical Survey.",
                    "Teaching Database Reverse Engineering.",
                    "Method and Process for Iterative Reengineering of Data in a Legacy System.",
                    "Advanced Clone-Analysis to Support Object-Oriented System Refactoring.",
                    "Recovering Use Case Models from Object-Oriented Code: A Thread-based Approach.",
                    "Reengineering Using Design Patterns.",
                    "An Architectural-based Approach for Synthesizing and Integrating Adapters for Legacy Software.",
                    "Revisiting the Delta IC Approach to Component Recovery.",
                    "A Reference Architecture for Web Servers.",
                    "GXL: Toward a Standard Exchange Format.",
                    "Towards Portable Source Code Representations using XML.",
                    "A Structured Demonstration of Program Comprehension Tools.",
                    "Analyzing XFIG with GUPRO.",
                    "Analyzing xfig Using the Bauhaus Tools.",
                    "PBS Tool Demonstration Report on Xfig.",
                    "Applying Traditional Unix Tools during Maintenance: An Experience Report.",
                    "Analyzing xfig Using the Rigi Tool Suite.",
                    "A Structured Demonstration of Five Program Comprehension Tools: Lessons Learnt.",
                    "Understanding the Behavior of Java Programs.",
                    "An Experimental Validation of Control Structure Diagrams.",
                    "Studying the Process of Software Change: An Analysis of Software Evolution.",
                    "Traceability Recovery by Modeling Programmer Behavior.",
                    "A Maintainability Model for Industrial Software Systems using Design Level Metrics.",
                    "ACDC: An Algorithm for Comprehension-Driven Clustering.",
                    "Evaluating the Suitability of Data Clustering for Software Remodularization.",
                    "Next Generation Data Interchange: Tool-to-Tool Application Program Interfaces.",
                    "The Case for a Single Data Exchange Format.",
                    "E/R Schema for the Datrix C/C++/Java Exchange Format.",
                    "Designing an XML-based Exchange Format for Harmonia.",
                    "Defining, Transforming, and Exchanging High-Level Schemas.",
                    "Data Exchange in Bauhaus.",
                    "FAMIX and XMI.",
                    "A Short Introduction to the GXL Software Exchange Format."
                ]
            }
        ]
    },
    {
        "year": "1999",
        "name": "6th WCRE 1999",
        "info": "Atlanta, Georgia, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/1999",
                "sub_name": "Sixth Working Conference on Reverse Engineering, WCRE '99, Atlanta, Georgia, USA, October 6-8, 1999.",
                "count": 30,
                "papers": [
                    "Architectural Synthesis: Integrating Multiple Architectural Perspectives.",
                    "Software Architectural Transformation.",
                    "Reusing Domains for the Construction of Reverse Engineering Tools.",
                    "Restructuring Functions with Low Cohesion.",
                    "A Tool for Securely Integrating Legacy Systems into a Distributed Environment.",
                    "Model Based User-Interface Reengineering.",
                    "The Impact of Copyright on the Development of Cutting Edge Binary Reverse Engineering Technology.",
                    "A Framework for Classifying and Comparing Software Reverse Engineering and Design Recovery Techniques.",
                    "GraX - An Interchange Format for Reengineering Tools.",
                    "A Formal Approach for Reverse Engineering: A Case Study.",
                    "Nomen Est Omen: Analyzing the Language of Function Identifiers.",
                    "Educating JACKAL: Clich\u00e9 Library Development and Use.",
                    "Recovering Code to Documentation Links in OO Systems.",
                    "Task Orientation and Tailoring of Interactive Software Explanations.",
                    "Type-Check Elimination: Two Object-Oriented Reengineering Patterns.",
                    "An Initial Approach towards Measuring and Characterizing Software Evolution.",
                    "A Hybrid Reverse Engineering Approach Combining Metrics and Program Visualization.",
                    "MoJo: A Distance Metric for Software Clusterings.",
                    "An Industrial Example of Database Reverse Engineering.",
                    "Risks Involved in Reengineering Projects.",
                    "A Software Model for Impact Analysis: A Validation Experiment.",
                    "Computing Program Modularizations Using the k-Cut Method.",
                    "Experiments with Clustering as a Software Remodularization Method.",
                    "An Incremental Semi-Automatic Method for Component Recovery.",
                    "QBO: A Query Tool Specially Developed to Explore Programs.",
                    "The Design of a Resourceable and Retargetable Binary Translator.",
                    "Reverse Engineering Legacy Interfaces: An Interaction-Driven Approach.",
                    "On the Relationships between Static and Dynamic Models in Reverse Engineering Java Software.",
                    "Chava: Reverse Engineering and Tracking of Java Applets.",
                    "Partial Redesign of Java Software Systems Based on Clone Analysis."
                ]
            }
        ]
    },
    {
        "year": "1998",
        "name": "5th WCRE 1998",
        "info": "Honolulu, Hawai, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/1998",
                "sub_name": "5th Working Conference on Reverse Engineering, WCRE '98, Honolulu, Hawai, USA, October 12-14, 1998.",
                "count": 25,
                "papers": [
                    "Assisting Human Understanding to Aid the Targeting of Necessary Reengineering Work.",
                    "Change And Adaptive Maintenance in Java Software Systems.",
                    "REP - chaRacterising and Exploiting Process component: Results of Experimentation.",
                    "Evaluating Architectural Extraction Tools.",
                    "FEPSS: A Flexible and Extensible Program Comprehension Support System.",
                    "A Graph-Based Object Identification Process for Procedural Programs.",
                    "Incremental Migration Strategies: Data Flow Analysis For Wrapping.",
                    "On the Knowledge Required to Understand a Program.",
                    "Managing Recovered Function and Structure of Legacy Software Components.",
                    "Native Patterns.",
                    "Object-Oriented Reengineering of Information Systems in a Heterogeneous Distributed Environment.",
                    "Outlining C Loops: Preliminary Results and Trends.",
                    "PACKRAT: A Software Reengineering Case Study.",
                    "Program Comprehension in Multi-Language Systems.",
                    "Reengineering of Legacy Systems Based on Transformation Using the Object-Oriented Paradigm.",
                    "Requirements for Integrating Software Architecture and Reengineering Models: CORUM II.",
                    "Requirements for Repository Software.",
                    "Reverse Engineering by Mining Dynamic Repositories.",
                    "On Reverse Engineering of Vendor Databases.",
                    "ROMEO: Reverse Engineering from OO Source Code to OMT Design.",
                    "Scalable Visualizations to Support Reverse Engineering: A Framework for Evaluation.",
                    "Structural Manipulations of Software Architecture using Tarski Relational Algebra.",
                    "Type Inference for COBOL Systems.",
                    "A Visual Representation Model for Software Subsystem Decomposition.",
                    "An Intermediate Representation for Reverse Engineering Analyses."
                ]
            }
        ]
    },
    {
        "year": "1997",
        "name": "4th WCRE 1997",
        "info": "Amsterdam, The Netherlands",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/1997",
                "sub_name": "4th Working Conference on Reverse Engineering, WCRE '97, Amsterdam, The Netherlands, October 6-8, 1997.",
                "count": 24,
                "papers": [
                    "A Comparison of Four Reverse Engineering Tools.",
                    "How Do Program Understanding Tools Affect How Programmers Understand Programs?",
                    "Scenarios for the Identification of Objects in Legacy Systems.",
                    "Using Clustering Algorithms in Legacy Systems Remodularization.",
                    "Evaluation Experiments on the Detection of Programming Patterns Using Software Metrics.",
                    "Using Visualization for Architectural Localization and Extraction.",
                    "Comparison of Abstract Data Type and Abstract State Encapsulation Detection Techniques for Architectural Understanding.",
                    "The Orphan Adoption Problem in Architecture Maintenance.",
                    "JACKAL: A Hierarchical Approach to Program Understanding.",
                    "Clich\u00e9 Recognition in Legacy Software: A Scalable, Knowledge-Based Approach.",
                    "Reverse Engineering is Reverse Forward Engineering.",
                    "New Experiments with a Constraint-Based Approach to Program Plan Matching.",
                    "Program Plan Recognition for Year 2000 Tools.",
                    "Tool Support for Reverse Engineering Multi-Lingual Software.",
                    "Generation of Components for Software Renovation Factories from Context-Free Grammars.",
                    "Domain Analysis for Transformational Reuse.",
                    "DARE: Domain-Augmented ReEngineering.",
                    "Dimensions of Database Reverse Engineering.",
                    "Extracting Entity-Relationship Schemas from Relational Databases: A Form-Driven Approach.",
                    "Knowledge Transfer in Database Reverse Engineering: A Supporting Case Study.",
                    "Program Interface Reengineering for Wrapping.",
                    "The Implications of Non-Functional Requirements for the Reengineering of Legacy Code.",
                    "Toward a Framework for Conceptual and Formal Outlines of Programs.",
                    "A Reverse Engineering Approach to Evaluate Function Point Rules."
                ]
            }
        ]
    },
    {
        "year": "1996",
        "name": "3rd WCRE 1996",
        "info": "Monterey, CA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/1996",
                "sub_name": "3rd Working Conference on Reverse Engineering, WCRE '96, Monterey, CA, USA, November 8-10, 1996.",
                "count": 30,
                "papers": [
                    "Finding Reusable Software Components in Large Systems.",
                    "Reengineering Real-Time Embedded Software onto a Parallel Processing Platform.",
                    "Some Experiments Toward Understanding How Program Plan Recognition Algorithms Scale.",
                    "On Designing an Experiment to Evaluate a Reverse Engineering Tool.",
                    "Rule-Based Detection for Reverse Engineering User Interfaces.",
                    "Partial Automation of an Integrated Reverse Engineering Environment of Binary Code.",
                    "Mandrake: A Tool for Reverse-Engineering IBM Assembly Code.",
                    "Reverse Engineering of Assembler Programs: A Model-Based Approach and its Logical Basis.",
                    "A Portable Assembler Reverse Engineering Environment (PARE).",
                    "A Catalog of Object Model Transformations.",
                    "Creating a Research Infrastructure for Reengineering.",
                    "Encapsulating Legacy Software for Use in Client/Server Systems.",
                    "Reverse Engineering a Medical Database.",
                    "Structure Elicitation in Database Reverse Engineering.",
                    "Combining a Flexible Data Model and Phase Schema Translation in Data Model Reverse Engineering.",
                    "Analysis and Presentation of Recovered Software Architectures.",
                    "GASE: visualizing Software Evolution-in-the-Large.",
                    "Object-Oriented Cobol Recycling.",
                    "An Overall Process Based on Fusion to Reverse Engineer Legacy Code.",
                    "Extracting Reusable Modules from Legacy Code: Considering the Issues of Module Granularity.",
                    "Augmenting Pattern-Based Architectural Recovery with Flow Analysis: Mosaic -A Case Study.",
                    "Design Recovery by Automated Search for Structural Design Patterns in Object-Oriented Softwar.",
                    "Lessons from a Domain-Based Reengineering Effort.",
                    "Identifying Enumeration Types Modeled with Symbolic Constants.",
                    "Reverse Engineering Concurrent Programs Using Formal Modelling and Analysis.",
                    "Using Informal and Formal Techniques for the Reverse Engineering of C Programs.",
                    "Evaluation of a Knowledge-Based Approach to Program Understanding.",
                    "Early Field Experience with the Software Recounaissance Technique for Program Comprehension.",
                    "A Cliche-Based Environment to Support Architectural Reverse Engineering.",
                    "Preprocessors from an Abstract Point of View."
                ]
            }
        ]
    },
    {
        "year": "1995",
        "name": "2nd WCRE 1995",
        "info": "Toronto, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/1995",
                "sub_name": "2nd Working Conference on Reverse Engineering, WCRE '95, Toronto, Canada, July 14-16, 1995.",
                "count": 27,
                "papers": [
                    "Automating Testing by Reverse Engineering of Software Documentation.",
                    "Recovering Business Rules from Structured Analysis Specifications.",
                    "Retrieving Information from Data Flow Diagrams.",
                    "Reengineering Procedural into Data Flow Programs.",
                    "RESCUE: Legacy Systems Translator.",
                    "Legacy System Cataloging Facility.",
                    "Design of a Generic Reverse Engineering Assistant Tool.",
                    "Customized Tools for Software Quality Assurance and Reengineering.",
                    "Integrating Reengineering, Reuse and Specification Tool Environments to Enable Reverse Engineering.",
                    "On Finding Duplication and Near-Duplication in Large Software Systems.",
                    "Pattern Matching for Design Concept Localization.",
                    "Analyzing Empirical Data from a Reverse Engineering Project.",
                    "Observed Idiosyncracies of Relational Database Designs.",
                    "Deriving a Logical Data Model for a System Using the RECAST Method.",
                    "Requirements for Information System Reverse Engineering Support.",
                    "August-II: A Tool for Step-by-Step Data Model Reverse Engineering.",
                    "DECODE: A Cooperative Environment for Reverse-Engineering Legacy Software.",
                    "The Interleaving Problem in Program Understanding.",
                    "Qualifying Reusable Functions Using Symbolic Execution.",
                    "Strongest Postcondition Semantics as the Formal Basis for Reverse Engineering.",
                    "Formal Representation of Reusable Software Modules.",
                    "Finding Objects in Procedural Programs: An Alternative Approach.",
                    "Extracting Object-Oriented Specification from Procedurally Oriented Programs.",
                    "Recovering Abstract Data Types and Object Instances from a Conventional Procedural Language.",
                    "Reengineering Procedural into Object-Oriented Systems.",
                    "Recognizers for Extracting Architectural Features from Source Code.",
                    "Toward Experimental Evaluation of Subsystem Classification Recovery Techniques."
                ]
            }
        ]
    },
    {
        "year": "1993",
        "name": "1st WCRE 1993",
        "info": "Baltimore, Maryland, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/wcre/1993",
                "sub_name": "Proceedings of Working Conference on Reverse Engineering, WCRE 1993, Baltimore, Maryland, USA, May 21-23, 1993.",
                "count": 20,
                "papers": [
                    "A Cognitive Approach to Program Understanding.",
                    "Integrating Formal and Structured Methods in Reverse Engineering.",
                    "RECAST: Reverse Engineering from COBOL to SSADM Specifications.",
                    "Recovering Reusable Components from Legacy Systems.",
                    "A Reverse Engineering Method for Identifying Reusable Abstract Data Types.",
                    "Identification and Extraction of \"Domain Independent\" Components in Large Programs.",
                    "A Prototype System for static and Dynamic Program Understanding.",
                    "GRASP/Ada: Reverse Engineering of Control Structure Diagrams.",
                    "Separating Parsing and Analysis in Reverse Engineering Tools.",
                    "A Hybrid Approach to Recognizing Programming Plans.",
                    "Flexible Control for Program Recognition.",
                    "Challenges for the Field of Reverse Engineering.",
                    "An Approach for Reverse Engineering of Relational Databases.",
                    "Contribution to a Theory of Database Reverse Engineering.",
                    "Reverse Engineering of User Interfaces.",
                    "A Framework for Reverse Engineering DoD Legacy Information Systems.",
                    "Reverse Engineering Programs via Dynamic Analysis.",
                    "Design Recovery for Software Testing of Object-Oriented Programs.",
                    "A Practical Program Transformation System for Reverse Engineering.",
                    "Automating the Modularization of Large COBOL Programs: Application of an Enabling Technology for Reengineering."
                ]
            }
        ]
    }
]