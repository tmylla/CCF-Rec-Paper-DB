[
    {
        "year": "2021",
        "name": "18th MSR 2021",
        "info": "Madrid, Spain",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2021",
                "sub_name": "18th IEEE/ACM International Conference on Mining Software Repositories, MSR 2021, Madrid, Spain, May 17-19, 2021.",
                "count": 76,
                "papers": [
                    "Mining Workflows for Anomalous Data Transfers.",
                    "PSIMiner: A Tool for Mining Rich Abstract Syntax Trees from Code.",
                    "Comparative Study of Feature Reduction Techniques in Software Change Prediction.",
                    "Automatic Part-of-Speech Tagging for Security Vulnerability Descriptions.",
                    "Identifying Critical Projects via PageRank and Truck Factor.",
                    "An Empirical Study of Developer Discussions on Low-Code Software Development Challenges.",
                    "Learning Off-By-One Mistakes: An Empirical Study.",
                    "The Secret Life of Hackathon Code Where does it come from and where does it go?",
                    "gambit - An Open Source Name Disambiguation Tool for Version Control Systems.",
                    "Escaping the Time Pit: Pitfalls and Guidelines for Using Time-Based Git Data.",
                    "Attention-based model for predicting question relatedness on Stack Overflow.",
                    "An Empirical Study on the Usage of BERT Models for Code Completion.",
                    "On Improving Deep Learning Trace Analysis with System Call Arguments.",
                    "An Empirical Study of OSS-Fuzz Bugs.",
                    "An Exploratory Study of Log Placement Recommendation in an Enterprise System.",
                    "On the Naturalness and Localness of Software Logs.",
                    "Automatically Selecting Follow-up Questions for Deficient Bug Reports.",
                    "Architecture Smells and Pareto Principle: A Preliminary Empirical Exploration.",
                    "Technical Debt in the Peer-Review Documentation of R Packages: a rOpenSci Case Study.",
                    "How Java Programmers Test Exceptional Behavior.",
                    "A Replication Study on the Usability of Code Vocabulary in Predicting Flaky Tests.",
                    "Leveraging Models to Reduce Test Cases in Software Repositories.",
                    "Which contributions count? Analysis of attribution in open source.",
                    "On the Use of Dependabot Security Pull Requests.",
                    "S3M: Siamese Stack (Trace) Similarity Measure.",
                    "Challenges in Developing Desktop Web Apps: a Study of Stack Overflow and GitHub.",
                    "Studying the Change Histories of Stack Overflow and GitHub Snippets.",
                    "TNM: A Tool for Mining of Socio-Technical Data from Git Repositories.",
                    "Mining the ROS ecosystem for Green Architectural Tactics in Robotics and an Empirical Evaluation.",
                    "Mining API Interactions to Analyze Software Revisions for the Evolution of Energy Consumption.",
                    "Googling for Software Development: What Developers Search For and What They Find.",
                    "Fast and Memory-Efficient Neural Code Completion.",
                    "Identifying Versions of Libraries used in Stack Overflow Code Snippets.",
                    "Can I Solve It? Identifying APIs Required to Complete OSS Tasks.",
                    "Data Balancing Improves Self-Admitted Technical Debt Detection.",
                    "JITLine: A Simpler, Better, Faster, Finer-grained Just-In-Time Defect Prediction.",
                    "Rollback Edit Inconsistencies in Developer Forum.",
                    "What Code Is Deliberately Excluded from Test Coverage and Why?",
                    "Waiting around or job half-done? Sentiment in self-admitted technical debt.",
                    "Mining DEV for social and technical insights about software development.",
                    "How Do Software Developers Use GitHub Actions to Automate Their Workflows?",
                    "Practitioners' Perceptions of the Goals and Visual Explanations of Defect Prediction Models.",
                    "Does Code Review Promote Conformance? A Study of OpenStack Patches.",
                    "Revisiting Dockerfiles in Open Source Software Over Time.",
                    "Characterising the Knowledge about Primitive Variables in Java Code Comments.",
                    "Predicting Design Impactful Changes in Modern Code Review: A Large-Scale Empirical Study.",
                    "Mining Energy-Related Practices in Robotics Software.",
                    "On the Rise and Fall of Simple Stupid Bugs: a Life-Cycle Analysis of SStuBs.",
                    "How Effective is Continuous Integration in Indicating Single-Statement Bugs?",
                    "Applying CodeBERT for Automated Program Repair of Java Simple Bugs.",
                    "A large-scale study on human-cloned changes for automated program repair.",
                    "Mea culpa: How developers fix their own simple bugs differently from other developers.",
                    "PySStuBs: Characterizing Single-Statement Bugs in Popular Open-Source Python Projects.",
                    "On the Distribution of \"Simple Stupid Bugs\" in Unit Test Files: An Exploratory Study.",
                    "On the Effectiveness of Deep Vulnerability Detectors to Simple Stupid Bug Detection.",
                    "AndroidCompass: A Dataset of Android Compatibility Checks in Code Repositories.",
                    "Denchmark: A Bug Benchmark of Deep Learning-related Software.",
                    "Duets: A Dataset of Reproducible Pairs of Java Library-Clients.",
                    "KGTorrent: A Dataset of Python Jupyter Notebooks from Kaggle.",
                    "A Traceability Dataset for Open Source Systems.",
                    "Sampling Projects in GitHub for MSR Studies.",
                    "The Wonderless Dataset for Serverless Computing.",
                    "AndroCT: Ten Years of App Call Traces in Android.",
                    "Search4Code: Code Search Intent Classification Using Weak Supervision.",
                    "Andromeda: A Dataset of Ansible Galaxy Roles and Their Evolution.",
                    "ManyTypes4Py: A Benchmark Python Dataset for Machine Learning-based Type Inference.",
                    "QScored: A Large Dataset of Code Smells and Quality Metrics.",
                    "Apache Software Foundation Incubator Project Sustainability Dataset.",
                    "Andror2: A Dataset of Manually-Reproduced Bug Reports for Android apps.",
                    "GE526: A Dataset of Open-Source Game Engines.",
                    "EqBench: A Dataset of Equivalent and Non-equivalent Program Pairs.",
                    "Tracking Hackathon Code Creation and Reuse.",
                    "Building the Collaboration Graph of Open-Source Software Ecosystem.",
                    "Tracing Vulnerable Code Lineage.",
                    "An Exploratory Study of Project Activity Changepoints in Open Source Software Evolution.",
                    "The Diversity-Innovation Paradox in Open-Source Software."
                ]
            }
        ]
    },
    {
        "year": "2020",
        "name": "17th MSR 2020",
        "info": "Seoul, Korea",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2020",
                "sub_name": "MSR '20: 17th International Conference on Mining Software Repositories, Seoul, Republic of Korea, 29-30 June, 2020.",
                "count": 74,
                "papers": [
                    "The Software Heritage Graph Dataset: Large-scale Analysis of Public Software Development History.",
                    "Cheating Death: A Statistical Survival Analysis of Publicly Available Python Projects.",
                    "An Exploratory Study to Find Motives Behind Cross-platform Forks from Software Heritage Dataset.",
                    "Exploring the Security Awareness of the Python and JavaScript Open Source Communities.",
                    "A Large-Scale Comparative Evaluation of IR-Based Tools for Bug Localization.",
                    "A Machine Learning Approach for Vulnerability Curation.",
                    "A Soft Alignment Model for Bug Deduplication.",
                    "A Study of Potential Code Borrowing and License Violations in Java Projects on GitHub.",
                    "A Study on the Accuracy of OCR Engines for Source Code Transcription from Programming Screencasts.",
                    "An Empirical Study of Build Failures in the Docker Context.",
                    "AIMMX: Artificial Intelligence Model Metadata Extractor.",
                    "An Empirical Study of Method Chaining in Java.",
                    "An Empirical Study on Regular Expression Bugs.",
                    "Automatically Granted Permissions in Android apps: An Empirical Study on their Prevalence and on the Potential Threats for Privacy.",
                    "Behind the Intents: An In-depth Empirical Study on Software Refactoring in Modern Code Review.",
                    "Beyond the Code: Mining Self-Admitted Technical Debt in Issue Tracker Systems.",
                    "Boa Views: Easy Modularization and Sharing of MSR Analyses.",
                    "Can We Use SE-specific Sentiment Analysis Tools in a Cross-Platform Setting?",
                    "Capture the Feature Flag: Detecting Feature Flags in Open-Source.",
                    "Challenges in Chatbot Development: A Study of Stack Overflow Posts.",
                    "Characterizing and Identifying Composite Refactorings: Concepts, Heuristics and Patterns.",
                    "Detecting Video Game-Specific Bad Smells in Unity Projects.",
                    "Detecting and Characterizing Bots that Commit Code.",
                    "Developer-Driven Code Smell Prioritization.",
                    "Did You Remember To Test Your Tokens?",
                    "Embedding Java Classes with code2vec: Improvements from Variable Obfuscation.",
                    "Empirical Study of Restarted and Flaky Builds on Travis CI.",
                    "Ethical Mining: A Case Study on MSR Mining Challenges.",
                    "Forking Without Clicking: on How to Identify Software Repository Forks.",
                    "From Innovations to Prospects: What Is Hidden Behind Cryptocurrencies?",
                    "Improved Automatic Summarization of Subroutines via Attention to File Context.",
                    "Investigating Severity Thresholds for Test Smells.",
                    "Need for Tweet: How Open Source Developers Talk About Their GitHub Work on Twitter.",
                    "On the Prevalence, Impact, and Evolution of SQL Code Smells in Data-Intensive Systems.",
                    "On the Relationship between User Churn and Software Issues.",
                    "PUMiner: Mining Security Posts from Developer Question and Answer Websites with PU Learning.",
                    "Painting Flowers: Reasons for Using Single-State State Machines in Model-Driven Engineering.",
                    "Polyglot and Distributed Software Repository Mining with Crossflow.",
                    "RTPTorrent: An Open-source Dataset for Evaluating Regression Test Prioritization.",
                    "SoftMon: A Tool to Compare Similar Open-source Software from a Performance Perspective.",
                    "The Impact of a Major Security Event on an Open Source Project: The Case of OpenSSL.",
                    "The Scent of Deep Learning Code: An Empirical Study.",
                    "The State of the ML-universe: 10 Years of Artificial Intelligence & Machine Learning Software Development on GitHub.",
                    "Traceability Support for Multi-Lingual Software Projects.",
                    "Using Large-Scale Anomaly Detection on Code to Improve Kotlin Compiler.",
                    "Using Others' Tests to Identify Breaking Updates.",
                    "Visualization of Methods Changeability Based on VCS Data.",
                    "What constitutes Software?: An Empirical, Descriptive Study of Artifacts.",
                    "What is the Vocabulary of Flaky Tests?",
                    "20-MAD: 20 Years of Issues and Commits of Mozilla and Apache Development.",
                    "A C/C++ Code Vulnerability Dataset with Code Changes and CVE Summaries.",
                    "A Complete Set of Related Git Repositories Identified via Community Detection Approaches Based on Shared Commits.",
                    "A Dataset and an Approach for Identity Resolution of 38 Million Author IDs extracted from 2B Git Commits.",
                    "A Dataset for GitHub Repository Deduplication.",
                    "A Dataset of Dockerfiles.",
                    "A Dataset of Enterprise-Driven Open Source Software.",
                    "A Mixed Graph-Relational Dataset of Socio-technical Interactions in Open Source Systems.",
                    "On the Shoulders of Giants: A New Dataset for Pull-based Development Research.",
                    "AndroZooOpen: Collecting Large-scale Open Source Android Apps for the Research Community.",
                    "Dataset of Video Game Development Problems.",
                    "Employing Contribution and Quality Metrics for Quantifying the Software Development Process.",
                    "GitterCom: A Dataset of Open Source Developer Communications in Gitter.",
                    "Hall-of-Apps: The Top Android Apps Metadata Archive.",
                    "How Often Do Single-Statement Bugs Occur?: The ManySStuBs4J Dataset.",
                    "JTeC: A Large Collection of Java Test Classes for Test Code Analysis and Processing.",
                    "LogChunks: A Data Set for Build Log Analysis.",
                    "Software-related Slack Chats with Disentangled Conversations.",
                    "TestRoutes: A Manually Curated Method Level Dataset for Test-to-Code Traceability.",
                    "An Empirical Study on the Impact of Deimplicitization on Comprehension in Programs Using Application Frameworks.",
                    "Determining the Intrinsic Structure of Public Software Development History.",
                    "Do Explicit Review Strategies Improve Code Review Performance?",
                    "Large-Scale Manual Validation of Bugfixing Changes.",
                    "Multi-language Design Smells: A Backstage Perspective.",
                    "The Impact of Dynamics of Collaborative Software Engineering on Introverts: A Study Protocol."
                ]
            }
        ]
    },
    {
        "year": "2019",
        "name": "16th MSR 2019",
        "info": "Montreal, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2019",
                "sub_name": "Proceedings of the 16th International Conference on Mining Software Repositories, MSR 2019, 26-27 May 2019, Montreal, Canada.",
                "count": 79,
                "papers": [
                    "SCOR: source code retrieval with semantics and order.",
                    "PathMiner: a library for mining of path-based representations of code.",
                    "Import2vec learning embeddings for software libraries.",
                    "Semantic source code models using identifier embeddings.",
                    "DeepJIT: an end-to-end deep learning framework for just-in-time defect prediction.",
                    "Lessons learned from using a deep tree-based model for software defect prediction in practice.",
                    "Empirical study in using version histories for change risk classification.",
                    "Snoring: a noise in defect prediction datasets.",
                    "Exploring word embedding techniques to improve sentiment analysis of software engineering texts.",
                    "Cleaning StackOverflow for machine translation.",
                    "Predicting good configurations for GitHub and stack overflow topic models.",
                    "A dataset of parametric cryptographic misuses.",
                    "Does UML modeling associate with lower defect proneness?: a preliminary empirical investigation.",
                    "STRAIT: a tool for automated software reliability growth analysis.",
                    "A data set of program invariants and error paths.",
                    "Test coverage in python programs.",
                    "On the effectiveness of manual and automatic unit test generation: ten years later.",
                    "Time present and time past: analyzing the evolution of JavaScript code in the wild.",
                    "The software heritage graph dataset: public software development under one roof.",
                    "World of code: an infrastructure for mining the universe of open source VCS data.",
                    "Crossflow: a framework for distributed mining of software repositories.",
                    "Recommending energy-efficient Java collections.",
                    "GreenHub farmer: real-world data for Android energy mining.",
                    "GreenSource: a large-scale collection of Android code, tests and energy metrics.",
                    "Striking gold in software repositories?: an econometric study of cryptocurrencies on GitHub.",
                    "A panel data set of cryptocurrency development activity on GitHub.",
                    "SOTorrent: studying the origin, evolution, and usage of stack overflow code snippets.",
                    "Mining rule violations in JavaScript code snippets.",
                    "Snakes in paradise?: insecure python-related coding practices in stack overflow.",
                    "Man vs machine: a study into language identification of stack overflow code snippets.",
                    "Python coding style compliance on stack overflow.",
                    "Towards mining answer edits to extract evolution patterns in stack overflow.",
                    "Analyzing comment-induced updates on stack overflow.",
                    "What edits are done on the highly answered questions in stack overflow?: an empirical study.",
                    "Can duplicate questions on stack overflow benefit the software development community?",
                    "How often and what StackOverflow posts do developers reference in their GitHub projects?",
                    "Characterizing duplicate code snippets between stack overflow and tutorials.",
                    "Challenges with responding to static analysis tool alerts.",
                    "Impact of stack overflow code snippets on software cohesion: a preliminary study.",
                    "We need to talk about microservices: an analysis from the discussions on StackOverflow.",
                    "What do developers know about machine learning: a study of ML discussions on StackOverflow.",
                    "Investigating next steps in static API-misuse detection.",
                    "Identifying experts in software libraries and frameworks among GitHub users.",
                    "Data-driven solutions to detect API compatibility issues in Android: an empirical study.",
                    "Generating commit messages from diffs using pointer-generator network.",
                    "Automatically generating documentation for lambda expressions in Java.",
                    "Extracting API tips from developer question and answer websites.",
                    "The emergence of software diversity in maven central.",
                    "The maven dependency graph: a temporal graph-based representation of maven central.",
                    "Dependency versioning in the wild.",
                    "Splitting APIs: an exploratory study of software unbundling.",
                    "Automated software vulnerability assessment with concept drift.",
                    "A manually-curated dataset of fixes to vulnerabilities of open-source software.",
                    "Negative results on mining crypto-API usage rules in Android apps.",
                    "A dataset of non-functional bugs.",
                    "RmvDroid: towards a reliable Android malware dataset with app metadata.",
                    "An empirical study of multiple names and email addresses in OSS version control repositories.",
                    "Characterizing the roles of contributors in open-source scientific software projects.",
                    "git2net: mining time-stamped co-editing networks from large git repositories.",
                    "The rise of Android code smells: who is to blame?",
                    "Assessing diffusion and perception of test smells in scala projects.",
                    "STYLE-ANALYZER: fixing code style inconsistencies with interpretable unsupervised algorithms.",
                    "Can issues reported at stack overflow questions be reproduced?: an exploratory study.",
                    "Exploratory study of slack Q&A chats as a mining source for software engineering tools.",
                    "Impacts of daylight saving time on software development.",
                    "A large-scale study about quality and reproducibility of jupyter notebooks.",
                    "Cross-language clone detection by learning over abstract syntax trees.",
                    "SeSaMe: a data set of semantically similar Java methods.",
                    "Predicting co-changes between functionality specifications and source code in behavior driven development.",
                    "Tracing back log data to its log statement: from research to practice.",
                    "Beyond GumTree: a hybrid approach to generate edit scripts.",
                    "The impact of systematic edits in history slicing.",
                    "Scalable software merging studies with MergAnser.",
                    "Standing on shoulders or feet?: the usage of the MSR data papers.",
                    "Boa meets python: a boa dataset of data science software in python language.",
                    "A benchmark of data loss bugs for Android apps.",
                    "RapidRelease: a dataset of projects and issues on github with rapid releases.",
                    "ConPan: a tool to analyze packages in software containers.",
                    "An empirical history of permission requests and mistakes in open source Android apps."
                ]
            }
        ]
    },
    {
        "year": "2018",
        "name": "15th MSR 2018",
        "info": "Gothenburg, Sweden",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2018",
                "sub_name": "Proceedings of the 15th International Conference on Mining Software Repositories, MSR 2018, Gothenburg, Sweden, May 28-29, 2018.",
                "count": 78,
                "papers": [
                    "50K-C: a dataset of compilable, and compiled, Java projects.",
                    "Jbench: a dataset of data races for concurrency testing.",
                    "Bugs.jar: a large-scale, diverse dataset of real-world Java bugs.",
                    "A gold standard for emotion annotation in stack overflow.",
                    "VulinOSS: a dataset of security vulnerabilities in open-source systems.",
                    "A dataset of duplicate pull-requests in github.",
                    "Structured information on state and evolution of dockerfiles on github.",
                    "A graph-based dataset of commit history of real-world Android apps.",
                    "Public git archive: a big code dataset for all.",
                    "Word embeddings for the software engineering domain.",
                    "npm-miner: an infrastructure for measuring the quality of the npm registry.",
                    "CROP: linking code reviews to source code changes.",
                    "Developer interaction traces backed by IDE screen recordings from think aloud sessions.",
                    "A multi-level dataset of linux kernel patchwork.",
                    "Documented unix facilities over 48 years.",
                    "Enriched event streams: a general dataset for empirical studies on in-IDE activities of software developers.",
                    "Comprehension effort and programming activities: related? or not related?",
                    "The hidden cost of code completion: understanding the impact of the recommendation-list length on its efficiency.",
                    "Empirical study on the relationship between developer's working habits and efficiency.",
                    "Mining and extraction of personal software process measures through IDE interaction logs.",
                    "Predicting developers' IDE commands with machine learning.",
                    "Do software engineers use autocompletion features differently than other developers?",
                    "Who's this?: developer identification using IDE event data.",
                    "Detecting and characterizing developer behavior following opportunistic reuse of code snippets from the web.",
                    "Revisiting \"programmers' build errors\" in the visual studio context: a replication study using IDE interaction traces.",
                    "Common statement kind changes to inform automatic program repair.",
                    "Studying developer build issues and debugger usage via timeline analysis in visual studio IDE.",
                    "Detection and analysis of behavioral T-patterns in debugging activities.",
                    "A study on the use of IDE features for debugging.",
                    "Mining the mind, minding the mine: grand challenges in comprehension and mining.",
                    "An evaluation of open-source software microbenchmark suites for continuous performance assessment.",
                    "Studying the impact of adopting continuous integration on the delivery time of pull requests.",
                    "What did really change with the new release of the app?",
                    "CLEVER: combining code metrics with clone detection for just-in-time fault prevention and resolution in large industrial projects.",
                    "I'm leaving you, Travis: a continuous integration breakup story.",
                    "An empirical evaluation of OSGi dependencies best practices in the eclipse IDE.",
                    "On the impact of security vulnerabilities in the npm package dependency network.",
                    "Feature location using crowd-based screencasts.",
                    "Profiling call changes via motif mining.",
                    "Toward predicting architectural significance of implementation issues.",
                    "The Android update problem: an empirical study.",
                    "Why are Android apps removed from Google Play?: a large-scale empirical study.",
                    "Anatomy of functionality deletion: an exploratory study on mobile apps.",
                    "Characterising deprecated Android APIs.",
                    "Leveraging historical versions of Android apps for efficient and precise taint analysis.",
                    "Understanding the usage, impact, and adoption of non-OSI approved licenses.",
                    "Prevalence of confusing code in software projects: atoms of confusion in the wild.",
                    "How swift developers handle errors.",
                    "What are your programming language's energy-delay implications?",
                    "\"Automatically assessing code understandability\" reanalyzed: combined metrics matter.",
                    "SOTorrent: reconstructing and analyzing the evolution of stack overflow posts.",
                    "A design structure matrix approach for measuring co-change-modularity of software products.",
                    "A study on inappropriately partitioned commits: how much and what kinds of IP commits in Java projects?",
                    "Data-driven search-based software engineering.",
                    "The open-closed principle of modern machine learning frameworks.",
                    "A benchmark study on sentiment analysis for software engineering research.",
                    "A deep learning approach to identifying source code in images and video.",
                    "Natural language or not (NLON): a package for software engineering text analysis pipeline.",
                    "How is video game development different from software development in open source?",
                    "Which contributions predict whether developers are accepted into github teams.",
                    "Automatic classification of software artifacts in open-source applications.",
                    "Large-scale analysis of the co-commit patterns of the active developers in github's top repositories.",
                    "Towards automatically identifying paid open source developers.",
                    "Analyzing requirements and traceability information to improve bug localization.",
                    "Towards extracting web API specifications from documentation.",
                    "Evaluating how developers use general-purpose web-search for code retrieval.",
                    "Learning to mine aligned code and natural language pairs from stack overflow.",
                    "A search system for mathematical expressions on software binaries.",
                    "Imprecisions diagnostic in source code deltas.",
                    "Exploring the use of automated API migrating techniques in practice: an experience report on Android.",
                    "The patch-flow method for measuring inner source collaboration.",
                    "Was self-admitted technical debt removal a real removal?: an in-depth perspective.",
                    "Restmule: enabling resilient clients for remote APIs.",
                    "Deep learning similarities from different representations of source code.",
                    "500+ times faster than deep learning: a case study exploring faster methods for text mining stackoverflow.",
                    "Studying the relationship between exception handling practices and post-release defects.",
                    "Analyzing conflict predictors in open-source Java projects.",
                    "Bayesian hierarchical modelling for tailoring metric thresholds."
                ]
            }
        ]
    },
    {
        "year": "2017",
        "name": "14th MSR 2017",
        "info": "Buenos Aires, Argentina",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2017",
                "sub_name": "Proceedings of the 14th International Conference on Mining Software Repositories, MSR 2017, Buenos Aires, Argentina, May 20-28, 2017.",
                "count": 66,
                "papers": [
                    "Half-century of unix: history, preservation, and lessons learned.",
                    "An empirical study on Android-related vulnerabilities.",
                    "Understanding the origins of mobile app vulnerabilities: a large-scale measurement study of free and paid apps.",
                    "Developer mistakes in writing Android manifests: an empirical study of configuration errors.",
                    "How do apps evolve in their permission requests?: a preliminary study.",
                    "A study on the energy consumption of Android app development approaches.",
                    "Candoia: a platform for building and sharing mining software repositories tools as apps.",
                    "Analyzing program dependencies in Java EE applications.",
                    "Mining social web service repositories for social relationships to aid service discovery.",
                    "Who you gonna call?: analyzing web requests in Android applications.",
                    "Extracting code segments and their descriptions from research articles.",
                    "Structure and evolution of package dependency networks.",
                    "Spencer: interactive heap analysis for the masses.",
                    "Predicting likelihood of requirement implementation within the planned iteration: an empirical study at IBM.",
                    "The impact of using regression models to build defect classifiers.",
                    "A large-scale study of the impact of feature selection techniques on defect classification models.",
                    "SpreadCluster: recovering versioned spreadsheets through similarity-based clustering.",
                    "Who will leave the company?: a large-scale industry study of developer turnover by mining monthly work report.",
                    "Concept-based classification of software defect reports.",
                    "Choosing an NLP library for analyzing software documentation: a systematic literature review and a series of experiments.",
                    "Bootstrapping a lexicon for emotional arousal in software engineering.",
                    "Leveraging automated sentiment analysis in software engineering.",
                    "Predicting usefulness of code review comments using textual features and developer experience.",
                    "Classifying code comments in Java open-source software systems.",
                    "Using Q&A websites as a method for assessing systematic reviews.",
                    "Abnormal working hours: effect of rapid releases and implications to work content.",
                    "Mining change histories for unknown systematic edits.",
                    "Source file set search for clone-and-own reuse analysis.",
                    "RefDiff: detecting refactorings in version histories.",
                    "Stack overflow in github: any snippets there?",
                    "Some from here, some from there: cross-project code reuse in GitHub.",
                    "Exception evolution in long-lived Java systems.",
                    "Do not trust build results at face value: an empirical study of 30 million CPAN builds.",
                    "An empirical analysis of the docker container ecosystem on GitHub.",
                    "How open source projects use static code analysis tools in continuous integration pipelines.",
                    "An empirical analysis of build failures in the continuous integration workflows of Java-based open-source software.",
                    "Oops, my tests broke the build: an explorative analysis of Travis CI with GitHub.",
                    "Extracting build changes with BuildDiff.",
                    "An exploratory study on assessing the impact of environment variations on the results of load tests.",
                    "A large-scale study on the usage of testing patterns that address maintainability attributes: patterns for ease of modification, diagnoses, and comprehension.",
                    "To mock or not to mock?: an empirical study on mocking practices.",
                    "Bug characteristics in blockchain systems: a large-scale empirical study.",
                    "Euphony: harmonious unification of cacophonous anti-virus vendor labels for Android malware.",
                    "Rationale in development chat messages: an exploratory study.",
                    "TravisTorrent: synthesizing Travis CI and GitHub for full-stack research on continuous integration.",
                    "On the differences between unit and integration testing in the travistorrent dataset.",
                    "Cost-effective build outcome prediction using cascaded classifiers.",
                    "Sentiment analysis of Travis CI builds.",
                    "A time series analysis of TravisTorrent builds: to everything there is a season.",
                    "Insights into continuous integration build failures.",
                    "An empirical study of the personnel overhead of continuous integration.",
                    "How does contributors' involvement influence the build status of an open-source software project?",
                    "On the interplay between non-functional requirements and builds on continuous integration.",
                    "Analyzing the impact of social attributes on commit integration success.",
                    "Built to last or built too fast?: evaluating prediction models for build times.",
                    "The impact of the adoption of continuous integration on developer attraction and retention.",
                    "An empirical study of activity, popularity, size, testing, and stability in continuous integration.",
                    "Impact of continuous integration on code reviews.",
                    "Prevalence of botched code integrations.",
                    "Software evolution and quality data from controlled, multiple, industrial case studies.",
                    "A dataset of scratch programs: scraped, shaped and scored.",
                    "Continuous defect prediction: the idea and a related dataset.",
                    "An extensive dataset of UML models in GitHub.",
                    "A dataset for dynamic discovery of semantic changes in version controlled software histories.",
                    "Rediscovery datasets: connecting duplicate reports.",
                    "A data set of OCL expressions on GitHub."
                ]
            }
        ]
    },
    {
        "year": "2016",
        "name": "13th MSR 2016",
        "info": "Austin, TX, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2016",
                "sub_name": "Proceedings of the 13th International Conference on Mining Software Repositories, MSR 2016, Austin, TX, USA, May 14-22, 2016.",
                "count": 59,
                "papers": [
                    "Studying the effectiveness of application performance management (APM) tools for detecting performance regressions for web applications: an experience report.",
                    "Mining test repositories for automatic detection of UI performance regressions in Android apps.",
                    "Mining performance regression inducing code changes in evolving software.",
                    "How android app developers manage power consumption?: an empirical study by mining power management commits.",
                    "GreenOracle: estimating software energy consumption with energy measurement corpora.",
                    "Automatic clustering of code changes.",
                    "Improving change recommendation using aggregated association rules.",
                    "FEVER: extracting feature-oriented changes from commits.",
                    "Adressing problems with external validity of repository mining studies through a smart data platform.",
                    "Comparing repositories visually with repograms.",
                    "Raising MSR researchers: an experience report on teaching a graduate seminar course in mining software repositories (MSR).",
                    "Interactive exploration of developer interaction traces using a hidden markov model.",
                    "Findings from GitHub: methods, datasets and limitations.",
                    "Cold-start software analytics.",
                    "Logging library migrations: a case study for the apache software foundation projects.",
                    "An empirical study on the practice of maintaining object-relational mapping code in Java systems.",
                    "Inter-app communication in Android: developer challenges.",
                    "Does your configuration code smell?",
                    "Feature toggles: practitioner practices and a case study.",
                    "Understanding the exception handling strategies of Java libraries: an empirical study.",
                    "Externalization of software behavior by the mining of norms.",
                    "Sentiment analysis in tickets for IT support.",
                    "Mining valence, arousal, and dominance: possibilities for detecting burnout and productivity?",
                    "On mining crowd-based speech documentation.",
                    "The unreasonable effectiveness of traditional information retrieval in crash report deduplication.",
                    "How software developers use work breakdown relationships in issue repositories.",
                    "Locating bugs without looking back.",
                    "Using dynamic and contextual features to predict issue lifetime in GitHub projects.",
                    "Topic modeling of NASA space system problem reports: research in practice.",
                    "A large-scale empirical study on self-admitted technical debt.",
                    "Got technical debt?: surfacing elusive technical debt in issue trackers.",
                    "Software ingredients: detection of third-party component reuse in Java software release.",
                    "A look at the dynamics of the JavaScript package ecosystem.",
                    "A large-scale study on repetitiveness, containment, and composability of routines in open-source projects.",
                    "The impact of switching to a rapid release cycle on the integration delay of addressed issues: an empirical study of the mozilla firefox project.",
                    "Characterization of the Xen project code review process: an experience report.",
                    "From query to usable code: an analysis of stack overflow code snippets.",
                    "Mining duplicate questions in stack overflow.",
                    "Domain-specific cross-language relevant question retrieval.",
                    "Recognizing gender of stack overflow users.",
                    "Grouping android tag synonyms on stack overflow.",
                    "How the R community creates and curates knowledge: a comparative study of stack overflow and mailing lists.",
                    "Data sets: the circle of life in ruby hosting, 2003-2015.",
                    "Mining the modern code review repositories: a dataset of people, process and product.",
                    "MUBench: a benchmark for API-misuse detectors.",
                    "AndroZoo: collecting millions of Android apps for the research community.",
                    "Multi-extract and multi-level dataset of mozilla issue tracking history.",
                    "A dataset of simplified syntax trees for C#.",
                    "The emotional side of software developers in JIRA.",
                    "Examining programmer practices for locally handling exceptions.",
                    "QualBoa: reusability-aware recommendations of source code components.",
                    "The dispersion of build maintenance activity across maven lifecycle phases.",
                    "The relationship between commit message detail and defect proneness in Java projects on GitHub.",
                    "Analysis of exception handling patterns in Java projects: an empirical study.",
                    "Judging a commit by its cover: correlating commit message entropy with build status on travis-CI.",
                    "Characterizing energy-aware software projects: are they different?",
                    "A deeper look into bug fixes: patterns, replacements, deletions, and additions.",
                    "How developers use exception handling in Java?",
                    "Analyzing developer sentiment in commit logs."
                ]
            }
        ]
    },
    {
        "year": "2015",
        "name": "12th MSR 2015",
        "info": "Florence, Italy",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2015",
                "sub_name": "12th IEEE/ACM Working Conference on Mining Software Repositories, MSR 2015, Florence, Italy, May 16-17, 2015.",
                "count": 73,
                "papers": [
                    "Confessions of a Worldly Software Miner.",
                    "Code Ownership and Software Quality: A Replication Study.",
                    "Extracting Facts from Performance Tuning History of Scientific Applications for Predicting Effective Optimization Patterns.",
                    "Mining Component Repositories for Installability Issues.",
                    "The Uniqueness of Changes: Characteristics and Applications.",
                    "Co-evolution of Infrastructure and Source Code - An Empirical Study.",
                    "Mining Energy-Aware Commits.",
                    "Why Power Laws? An Explanation from Fine-Grained Code Changes.",
                    "Sameness: An Experiment in Code Search.",
                    "Using Developer-Interaction Trails to Triage Change Requests.",
                    "An Empirical Study of the Copy and Paste Behavior during Development.",
                    "Mining Android App Usages for Generating Actionable GUI-Based Execution Scenarios.",
                    "The App Sampling Problem for App Store Mining.",
                    "Unveiling Exception Handling Bug Hazards in Android Based on GitHub and Google Code Issues.",
                    "Characteristics of Useful Code Reviews: An Empirical Study at Microsoft.",
                    "Will They Like This? Evaluating Code Contributions with Language Models.",
                    "Investigating Code Review Practices in Defective Files: An Empirical Study of the Qt System.",
                    "Partitioning Composite Code Changes to Facilitate Code Review.",
                    "Lessons Learned from Building and Deploying a Code Review Analytics Platform.",
                    "Ecosystems in GitHub and a Method for Ecosystem Identification Using Reference Coupling.",
                    "A Historical Analysis of Debian Package Incompatibilities.",
                    "Recommending Posts concerning API Issues in Developer Q&A Sites.",
                    "An Empirical Study of Architectural Change in Open-Source Software Systems.",
                    "A Study on the Role of Software Architecture in the Evolution and Quality of Software.",
                    "Are These Bugs Really \"Normal\"?",
                    "Do Bugs Foreshadow Vulnerabilities? A Study of the Chromium Project.",
                    "Characterization and Prediction of Issue-Related Risks in Software Projects.",
                    "An Empirical Study of End-User Programmers in the Computer Music Community.",
                    "Are Bullies More Productive? Empirical Study of Affectiveness vs. Issue Fixing Time.",
                    "What Is the Gist? Understanding the Use of Public Gists on GitHub.",
                    "A Method to Detect License Inconsistencies in Large-Scale Open Source Projects.",
                    "Toward Deep Learning Software Repositories.",
                    "Identifying Software Process Management Challenges: Survey of Practitioners in a Large Global IT Company.",
                    "Automatically Prioritizing Pull Requests.",
                    "Matching GitHub Developer Profiles to Job Advertisements.",
                    "Wait for It: Determinants of Pull Request Evaluation Latency on GitHub.",
                    "Toward Reusing Code Changes.",
                    "Modifications, Tweaks, and Bug Fixes in Architectural Tactics.",
                    "Do Onboarding Programs Work?",
                    "An Enhanced Graph-Based Infrastructure for Software Search Engines.",
                    "Organizational Volatility and Post-release Defects: A Replication Case Study Using Data from Google Chrome.",
                    "Detecting and Mitigating Secret-Key Leaks in Source Code Repositories.",
                    "Summarizing Complex Development Artifacts by Mining Heterogeneous Data.",
                    "The Synergy between Voting and Acceptance of Answers on StackOverflow - Or the Lack Thereof.",
                    "Quality Questions Need Quality Code: Classifying Code Fragments on Stack Overflow.",
                    "ETA: Estimated Time of Answer Predicting Response Time in Stack Overflow.",
                    "Going Green: An Exploratory Analysis of Energy-Related Questions.",
                    "Mining StackOverflow to Filter Out Off-Topic IRC Discussion.",
                    "An Insight into the Unresolved Questions at Stack Overflow.",
                    "Mining Successful Answers in Stack Overflow.",
                    "Quick Trigger on Stack Overflow: A Study of Gamification-Influenced Member Tendencies.",
                    "Intuition vs. Truth: Evaluation of Common Myths about StackOverflow Posts.",
                    "Automatic Assessments of Code Explanations: Predicting Answering Times on Stack Overflow.",
                    "Which Non-functional Requirements Do Developers Focus On? An Empirical Study on Stack Overflow Using Topic Analysis.",
                    "Stack Overflow Badges and User Behavior: An Econometric Approach.",
                    "Employing Source Code Information to Improve Question-Answering in Stack Overflow.",
                    "One-Day Flies on StackOverflow - Why the Vast Majority of StackOverflow Users Only Posts Once.",
                    "A Repository with 44 Years of Unix Evolution.",
                    "The Debsources Dataset: Two Decades of Debian Source Code Metadata.",
                    "A Dataset of the Activity of the Git Super-repository of Linux in 2012.",
                    "StORMeD: Stack Overflow Ready Made Data.",
                    "The MetricsGrimoire Database Collection.",
                    "Landfill: An Open Dataset of Code Smells with Public Evaluation.",
                    "Fuse: A Reproducible, Extendable, Internet-Scale Corpus of Spreadsheets.",
                    "Dataset of Developer-Labeled Commit Messages.",
                    "A Novel Industry Grade Dataset for Fault Prediction Based on Model-Driven Developed Automotive Embedded Software.",
                    "The Firefox Temporal Defect Dataset.",
                    "An Architectural Evolution Dataset.",
                    "A Dataset for API Usage.",
                    "Generating the Blueprints of the Java Ecosystem.",
                    "A Data Set for Social Diversity Studies of GitHub Teams.",
                    "A Dataset of High Impact Bugs: Manually-Classified Issue Reports.",
                    "A Dataset of Open-Source Android Applications."
                ]
            }
        ]
    },
    {
        "year": "2014",
        "name": "11th MSR 2014",
        "info": "Hyderabad, India",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2014",
                "sub_name": "11th Working Conference on Mining Software Repositories, MSR 2014, Proceedings, May 31 - June 1, 2014, Hyderabad, India.",
                "count": 64,
                "papers": [
                    "Is mining software repositories data science? (keynote).",
                    "Mining energy-greedy API usage patterns in Android apps: an empirical study.",
                    "GreenMiner: a hardware based mining software repositories software energy consumption framework.",
                    "Mining questions about software energy consumption.",
                    "Prediction and ranking of co-change candidates for clones.",
                    "Incremental origin analysis of source code files.",
                    "Oops! where did that code snippet come from?",
                    "Works for me! characterizing non-reproducible bug reports.",
                    "Characterizing and predicting blocking bugs in open source projects.",
                    "An empirical study of dormant bugs.",
                    "The promises and perils of mining GitHub.",
                    "Mining StackOverflow to turn the IDE into a self-confident programming prompter.",
                    "Mining questions asked by web developers.",
                    "Process mining multiple repositories for software defect resolution from control and organizational perspective.",
                    "MUX: algorithm selection for software model checkers.",
                    "Improving the effectiveness of test suite through mining historical data.",
                    "Finding patterns in static analysis alerts: improving actionable alert ranking.",
                    "Impact analysis of change requests on source code based on interaction and commit histories.",
                    "An empirical study of just-in-time defect prediction using cross-project models.",
                    "Towards building a universal defect prediction model.",
                    "The impact of code review coverage and code review participation on software quality: a case study of the qt, VTK, and ITK projects.",
                    "Modern code reviews in open-source projects: which problems do they fix?",
                    "Thesaurus-based automatic query expansion for interface-driven code search.",
                    "Estimating development effort in Free/Open source software projects by mining software repositories: a case study of OpenStack.",
                    "An industrial case study of automatically identifying performance regression-causes.",
                    "Revisiting Android reuse studies in the context of code obfuscation and library usages.",
                    "Syntax errors just aren't natural: improving error reporting with language models.",
                    "Do developers feel emotions? an exploratory analysis of emotions in software artifacts.",
                    "How does a typical tutorial for mobile development look like?",
                    "Unsupervised discovery of intentional process models from event logs.",
                    "Tracing dynamic features in python programs.",
                    "It's not a bug, it's a feature: does misclassification affect bug localization?",
                    "Classifying unstructured data into natural language text and technical information.",
                    "Collaboration in open-source projects: myth or reality?",
                    "Improving the accuracy of duplicate bug report detection using textual similarity measures.",
                    "Undocumented and unchecked: exceptions that spell trouble.",
                    "Innovation diffusion in open source software: preliminary analysis of dependency changes in the gentoo portage package database.",
                    "A dictionary to translate change tasks to source code.",
                    "New features for duplicate bug detection.",
                    "Mining modern repositories with elasticsearch.",
                    "A study of external community contribution to open-source projects on GitHub.",
                    "Understanding \"watchers\" on GitHub.",
                    "Do developers discuss design?",
                    "Magnet or sticky? an OSS project-by-project typology.",
                    "Security and emotion: sentiment analysis of security discussions on GitHub.",
                    "Sentiment analysis of commit comments in GitHub: an empirical study.",
                    "Analysing the 'biodiversity' of open source ecosystems: the GitHub case.",
                    "Co-evolution of project documentation and popularity within github.",
                    "An insight into the pull requests of GitHub.",
                    "A dataset for pull-based development research.",
                    "The bug catalog of the maven ecosystem.",
                    "A dataset of feature additions and feature removals from the Linux kernel.",
                    "Kataribe: a hosting service of historage repositories.",
                    "Lean GHTorrent: GitHub data on demand.",
                    "A code clone oracle.",
                    "Generating duplicate bug datasets.",
                    "FLOSS 2013: a survey dataset about free software contributors: challenges for curating, sharing, and combining.",
                    "A green miner's dataset: mining the impact of software change on energy consumption.",
                    "Gentoo package dependencies over time.",
                    "Models of OSS project meta-information: a dataset of three forges.",
                    "A dataset of clone references with gaps.",
                    "A dataset for maven artifacts and bug patterns found in them.",
                    "OpenHub: a scalable architecture for the analysis of software quality attributes.",
                    "Understanding software evolution: the maisqual ant data set."
                ]
            }
        ]
    },
    {
        "year": "2013",
        "name": "10th MSR 2013",
        "info": "San Francisco, CA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2013",
                "sub_name": "Proceedings of the 10th Working Conference on Mining Software Repositories, MSR '13, San Francisco, CA, USA, May 18-19, 2013.",
                "count": 64,
                "papers": [
                    "What is software development productivity, anyway? (keynote).",
                    "Why so complicated? simple term filtering and weighting for location-based bug report assignment recommendation.",
                    "Which work-item updates need your response?",
                    "Bug report assignee recommendation using activity profiles.",
                    "Asking for (and about) permissions used by Android apps.",
                    "Retrieving and analyzing mobile apps feature requests from online reviews.",
                    "Gerrit software code review data from Android.",
                    "Who does what during a code review? datasets of OSS peer review repositories.",
                    "Why, when, and what: analyzing stack overflow questions by topic, type, and code.",
                    "Deficient documentation detection: a methodology to locate deficient project documentation using topic analysis.",
                    "Detecting API usage obstacles: a study of iOS and Android developer questions.",
                    "Encouraging user behaviour with achievements: an empirical study.",
                    "Is programming knowledge related to age? an exploration of stack overflow.",
                    "A discriminative model approach for suggesting tags automatically for stack overflow questions.",
                    "Exploring activeness of users in QA forums.",
                    "A study of innovation diffusion through link sharing on stack overflow.",
                    "Making sense of online code snippets.",
                    "Building reputation in StackOverflow: an empirical investigation.",
                    "An exploratory analysis of mobile development issues using stack overflow.",
                    "Answering questions about unanswered questions of stack overflow.",
                    "Will my patch make it? and how fast?: case study on the Linux kernel.",
                    "Linux variability anomalies: what causes them and how do they get fixed?",
                    "The impact of tangled code changes.",
                    "A dataset from change history to support evaluation of software maintenance tasks.",
                    "Apache commits: social network dataset.",
                    "Understanding the evolution of type-3 clones: an exploratory study.",
                    "An empirical study of the fault-proneness of clone mutation and clone migration.",
                    "Intensive metrics for the study of the evolution of open source projects: case studies from apache software foundation projects.",
                    "A preliminary investigation of using age and distance measures in the detection of evolutionary couplings.",
                    "Search-based duplicate defect detection: an industrial experience.",
                    "A contextual approach towards more accurate duplicate bug report detection.",
                    "Bug resolution catalysts: identifying essential non-committers from bug repositories.",
                    "The eclipse and mozilla defect tracking dataset: a genuine dataset for mining bug information.",
                    "Mining source code repositories at massive scale using language modeling.",
                    "Do software categories impact coupling metrics?",
                    "The maven repository dataset of metrics, changes, and dependencies.",
                    "A historical dataset for the gnome ecosystem.",
                    "A network of rails: a graph dataset of ruby on rails and associated projects.",
                    "The GHTorent dataset and tool suite.",
                    "Discovering, reporting, and fixing performance bugs.",
                    "Improving bug localization using correlations in crash reports.",
                    "Testing principles, current practices, and effects of change localization.",
                    "Fixing the 'out of sight out of mind' problem: one year of mood-based microblogging in a distributed software team.",
                    "Communication in open source software development mailing lists.",
                    "Tag recommendation in software information sites.",
                    "Using developer interaction data to compare expertise metrics.",
                    "Project roles in the apache software foundation: a dataset.",
                    "Apache-affiliated twitter screen names: a dataset.",
                    "Assisting code search with automatic query reformulation for bug localization.",
                    "Mining succinct and high-coverage API usage patterns from source code.",
                    "Rendezvous: a search engine for binary code.",
                    "An unabridged source code dataset for research in software reuse.",
                    "The MSR cookbook: mining a decade of research.",
                    "Happy birthday! a trend analysis on past MSR papers.",
                    "Replicating mining studies with SOFAS.",
                    "A historical dataset of software engineering conferences.",
                    "Automatically mining software-based, semantically-similar words from comment-code mappings.",
                    "Strategies for avoiding text fixture smells during software evolution.",
                    "Contextual analysis of program logs for understanding system behaviors.",
                    "A dataset for evaluating identifier splitters.",
                    "INVocD: identifier name vocabulary dataset.",
                    "Better cross company defect prediction.",
                    "Using citation influence to predict software defects.",
                    "Revisiting software development effort estimation based on early phase development activities."
                ]
            }
        ]
    },
    {
        "year": "2012",
        "name": "9th MSR 2012",
        "info": "Zurich, Switzerland",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2012",
                "sub_name": "9th IEEE Working Conference of Mining Software Repositories, MSR 2012, June 2-3, 2012, Zurich, Switzerland.",
                "count": 38,
                "papers": [
                    "MSR 2012 keynote: Software analytics in practice - Approaches and experiences.",
                    "Towards improving bug tracking systems with game mechanisms.",
                    "GHTorrent: Github's data from a firehose.",
                    "MIC check: A correlation tactic for ESE data.",
                    "A Linked Data platform for mining software repositories.",
                    "How Distributed Version Control Systems impact open source software projects.",
                    "An empirical study of supplementary bug fixes.",
                    "Incorporating version histories in Information Retrieval based bug localization.",
                    "Think locally, act globally: Improving defect and effort prediction models.",
                    "Characterizing verification of bug fixes in two open source IDEs.",
                    "Are faults localizable?",
                    "Green mining: A methodology of relating software change to power consumption.",
                    "Analysis of customer satisfaction survey data.",
                    "Mining usage data and development artifacts.",
                    "App store mining and analysis: MSR for app stores.",
                    "Mining challenge 2012: The Android platform.",
                    "Bug introducing changes: A case study with Android.",
                    "Trendy bugs: Topic trends in the Android bug reports.",
                    "Do the stars align? Multidimensional analysis of Android's layered architecture.",
                    "The build dependency perspective of Android's concrete architecture.",
                    "MINCE: Mining change history of Android project.",
                    "Mining for localization in Android.",
                    "MSR 2012 keynote: The evolution of the social programmer.",
                    "Why do software packages conflict?",
                    "Discovering complete API rules with mutation testing.",
                    "Inferring semantically related words from software context.",
                    "The evolution of data races.",
                    "Error mining: Bug detection through comparison with large code databases.",
                    "Do faster releases improve software quality? An empirical case study of Mozilla Firefox.",
                    "Explaining software defects using topic models.",
                    "A qualitative study on performance bugs.",
                    "Issue handling performance in proprietary software projects.",
                    "Co-evolution of logical couplings and commits for defect estimation.",
                    "Can we predict types of code changes? An empirical analysis.",
                    "An empirical investigation of changes in some software properties over time.",
                    "Who? Where? What? Examining distributed development in two large open source projects.",
                    "What does software engineering community microblog about?",
                    "Developing an h-index for OSS developers."
                ]
            }
        ]
    },
    {
        "year": "2011",
        "name": "8th MSR 2011",
        "info": "Waikiki, Honolulu, HI, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2011",
                "sub_name": "Proceedings of the 8th International Working Conference on Mining Software Repositories, MSR 2011 (Co-located with ICSE), Waikiki, Honolulu, HI, USA, May 21-28, 2011, Proceedings.",
                "count": 34,
                "papers": [
                    "Fantasy, farms, and freemium: what game data mining teaches us about retention, conversion, and virality (keynote abstract).",
                    "Connecting technology with real-world problems - from copy-paste detection to detecting known bugs: (keynote abstract).",
                    "Java generics adoption: how new features are introduced, championed, or ignored.",
                    "A study of language usage evolution in open source software.",
                    "How developers use the dynamic features of programming languages: the case of smalltalk.",
                    "An exploratory study of identifier renamings.",
                    "Retrieval from software libraries for bug localization: a comparative study of generic and composite text models.",
                    "Comparison of similarity metrics for refactoring detection.",
                    "Finding software license violations through binary code clone detection.",
                    "A simpler model of software readability.",
                    "Comparing fine-grained source code changes and code churn for bug prediction.",
                    "Security versus performance bugs: a case study on Firefox.",
                    "Empirical evaluation of reliability improvement in an evolving software product line.",
                    "Implementing quality metrics and goals at the corporate level.",
                    "How do developers blog?: an exploratory study.",
                    "Entering the circle of trust: developer initiation as committers in open-source projects.",
                    "Social interactions around cross-system bug fixings: the case of FreeBSD and OpenBSD.",
                    "Do time of day and developer experience affect commit bugginess.",
                    "Automated topic naming to support cross-project analysis of software maintenance activities.",
                    "Modeling the evolution of topics in source code histories.",
                    "Software bertillonage: finding the provenance of an entity.",
                    "Supporting software history exploration.",
                    "Improving identifier informativeness using part of speech information.",
                    "Bug-fix time prediction models: can we do better?",
                    "Integrating software engineering data using semantic web technologies.",
                    "Improving efficiency in software maintenance.",
                    "An empirical analysis of the FixCache algorithm.",
                    "Visualizing collaboration and influence in the open-source software community.",
                    "MSR Challenge 2011: Eclipse, Netbeans, Firefox, and Chrome.",
                    "System compatibility analysis of Eclipse and Netbeans based on bug data.",
                    "What topics do Firefox and Chrome contributors discuss?",
                    "A Tale of Two Browsers.",
                    "Do comments explain codes adequately?: investigation by text filtering.",
                    "Apples vs. oranges?: an exploration of the challenges of comparing the source code of two software systems."
                ]
            }
        ]
    },
    {
        "year": "2010",
        "name": "7th MSR 2010",
        "info": "Cape Town, South Africa",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2010",
                "sub_name": "Proceedings of the 7th International Working Conference on Mining Software Repositories, MSR 2010 (Co-located with ICSE), Cape Town, South Africa, May 2-3, 2010, Proceedings.",
                "count": 31,
                "papers": [
                    "MSR: Mining for scientific results?",
                    "The visual terminator.",
                    "Using differences among replications of software engineering experiments to gain knowledge.",
                    "Predicting the severity of a reported bug.",
                    "Identifying security bug reports via text mining: An industrial case study.",
                    "Assessing UML design metrics for predicting fault-prone classes in a Java system.",
                    "An extensive comparison of bug prediction approaches.",
                    "The evolution of ANT build systems.",
                    "The Ultimate Debian Database: Consolidating bazaar metadata for Quality Assurance and data mining.",
                    "When process data quality affects the number of bugs: Correlations in software engineering datasets.",
                    "Clones: What is that smell?",
                    "Mining Challenge 2010: FreeBSD, GNOME Desktop and Debian/Ubuntu.",
                    "Perspectives on bugs in the Debian bug tracking system.",
                    "Mining security changes in FreeBSD.",
                    "Assessment of issue handling efficiency.",
                    "Cloning and copying between GNOME projects.",
                    "Finding file clones in FreeBSD Ports Collection.",
                    "A comparative exploration of FreeBSD bug lifetimes.",
                    "Assessing the precision of FindBugs by mining Java projects developed at a university.",
                    "Abstracting log lines to log event types for mining software system logs.",
                    "Do stack traces help developers fix bugs?",
                    "THEX: Mining metapatterns from java.",
                    "OSS developers context-specific Preferred Representational systems: A initial Neurolinguistic text analysis of the Apache mailing list.",
                    "Automated dependency resolution for open source software.",
                    "Mining subclassing directives to improve framework reuse.",
                    "Identifying licensing of jar archives using a code-search approach.",
                    "Replaying IDE interactions to evaluate and improve change prediction approaches.",
                    "Replicating MSR: A study of the potential replicability of papers published in the Mining Software Repositories proceedings.",
                    "Should I contribute to this discussion?",
                    "Can development work describe itself?",
                    "Validity of network analyses in Open Source Projects."
                ]
            }
        ]
    },
    {
        "year": "2009",
        "name": "6th MSR 2009",
        "info": "Vancouver, BC, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2009",
                "sub_name": "Proceedings of the 6th International Working Conference on Mining Software Repositories, MSR 2009 (Co-located with ICSE), Vancouver, BC, Canada, May 16-17, 2009, Proceedings.",
                "count": 30,
                "papers": [
                    "Success factors of Business Intelligence.",
                    "A brief history of software - from Bell Labs to Microsoft Research.",
                    "The promises and perils of mining git.",
                    "Amassing and indexing a large sample of version control systems: Towards the census of public source code history.",
                    "MapReduce as a general framework to support research in Mining Software Repositories (MSR).",
                    "A platform for software engineering research.",
                    "Evaluating the relation between coding standard violations and faultswithin and across software versions.",
                    "Tracking concept drift of software projects using defect prediction quality.",
                    "Does calling structure information improve the accuracy of fault prediction?",
                    "Mining source code to automatically split identifiers for software analysis.",
                    "Code siblings: Technical and legal implications of copying code between applications.",
                    "Author entropy vs. file size in the gnome suite of applications.",
                    "Evaluating process quality in GNOME based on change request data.",
                    "Mining the coherence of GNOME bug reports with statistical topic models.",
                    "Visualizing Gnome with the Small Project Observatory.",
                    "On the use of Internet Relay Chat (IRC) meetings by developers of the GNOME GTK+ project.",
                    "Mining search topics from a code search engine usage log.",
                    "From work to word: How do software developers describe their work?",
                    "Assigning bug reports using a vocabulary-based expertise model of developers.",
                    "Mining the history of synchronous changes to refine code ownership.",
                    "Using association rules to study the co-evolution of production & test code.",
                    "On what basis to recommend: Changesets or interactions?",
                    "Mining the Jazz repository: Challenges and opportunities.",
                    "Using Latent Dirichlet Allocation for automatic categorization of software.",
                    "Evolution of the core team of developers in libre software projects.",
                    "On mining data across software repositories.",
                    "Automatic labeling of software components and their evolution using log-likelihood ratio of word frequencies in source code.",
                    "Learning from defect removals.",
                    "SourcererDB: An aggregated repository of statically analyzed and cross-linked open source Java projects.",
                    "On the transfer of evolutionary couplings to industry."
                ]
            }
        ]
    },
    {
        "year": "2008",
        "name": "5th MSR 2008",
        "info": "Leipzig, Germany",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2008",
                "sub_name": "Proceedings of the 2008 International Working Conference on Mining Software Repositories, MSR 2008 (Co-located with ICSE), Leipzig, Germany, May 10-11, 2008, Proceedings.",
                "count": 28,
                "papers": [
                    "Determinism and evolution.",
                    "FAVE: factor analysis based approach for detecting product line variability from change history.",
                    "Branching and merging in the repository.",
                    "Deep intellisense: a tool for rehydrating evaporated information.",
                    "Extracting structural information from bug reports.",
                    "A change-aware development environment by recording editing operations of source code.",
                    "On the relation of refactorings and software defect prediction.",
                    "Understanding bug fix patterns in verilog.",
                    "Mining software effort data: preliminary analysis of visual studio team system data.",
                    "The FOSSology project.",
                    "Improving change descriptions with change contexts.",
                    "Evaluation of source code copy detection methods on freebsd.",
                    "Small patches get in!",
                    "How to learn enough data mining to be dangerous in 60 minutes.",
                    "AMAP: automatically mining abbreviation expansions in programs to enhance software maintenance tools.",
                    "An extension of fault-prone filtering using precise training and a dynamic threshold.",
                    "What do large commits tell us?: a taxonomical study of large commits.",
                    "SpotWeb: detecting framework hotspots via mining open source repositories on the web.",
                    "Talk and work: a preliminary report.",
                    "Correctness of data mined from CVS.",
                    "Mining usage expertise from version archives.",
                    "Expertise identification and visualization from CVS.",
                    "Measuring developer contribution from software repository data.",
                    "Analyzing the evolution of eclipse plugins.",
                    "Summarizing developer work history using time series segmentation: challenge report.",
                    "An initial study of the growth of eclipse defects.",
                    "Towards a simplification of the bug report form in eclipse.",
                    "A newbie's guide to eclipse APIs."
                ]
            }
        ]
    },
    {
        "year": "2007",
        "name": "4th MSR 2007",
        "info": "Minneapolis, MN, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2007",
                "sub_name": "Fourth International Workshop on Mining Software Repositories, MSR 2007 (ICSE Workshop), Minneapolis, MN, USA, May 19-20, 2007, Proceedings.",
                "count": 33,
                "papers": [
                    "How Long Will It Take to Fix This Bug?",
                    "Determining Implementation Expertise from Bug Reports.",
                    "Defect Data Analysis Based on Extended Association Rule Mining.",
                    "Spam Filter Based Approach for Finding Fault-Prone Software Modules.",
                    "Recommending Emergent Teams.",
                    "Open Borders? Immigration in Open Source Projects.",
                    "Correlating Social Interactions to Release History during Software Evolution.",
                    "Mining CVS Repositories to Understand Open-Source Project Developer Roles.",
                    "Visual Data Mining in Software Archives to Detect How Developers Work Together.",
                    "Mining Software Repositories with iSPAROL and a Software Evolution Ontology.",
                    "Mining Workspace Updates in CVS.",
                    "Finding Relevant Applications for Prototyping.",
                    "Lightweight Risk Mitigation for Software Development Projects Using Repository Mining.",
                    "Identifying Changed Source Code Lines from Version Repositories.",
                    "Mining a Change-Based Software Repository.",
                    "Studying Versioning Information to Understand Inheritance Hierarchy Changes.",
                    "Combining Single-Version and Evolutionary Dependencies for Software-Change Prediction.",
                    "Evaluating the Harmfulness of Cloning: A Change Based Experiment.",
                    "Release Pattern Discovery via Partitioning: Methodology and Case Study.",
                    "Comparing Approaches to Mining Source Code for Call-Usage Patterns.",
                    "Towards a Theoretical Model for Software Growth.",
                    "Analysis of the Linux Kernel Evolution Using Code Clone Coverage.",
                    "What Can OSS Mailing Lists Tell Us? A Preliminary Psychometric Text Analysis of the Apache Developer Mailing List.",
                    "Using Software Distributions to Understand the Relationship among Free and Open Source Software Projects.",
                    "Using Software Repositories to Investigate Socio-technical Congruence in Development Projects.",
                    "Detecting Patch Submission and Acceptance in OSS Projects.",
                    "Prioritizing Warning Categories by Analyzing Software History.",
                    "Impact of the Creation of the Mozilla Foundation in the Activity of Developers.",
                    "Predicting Eclipse Bug Lifetimes.",
                    "Mining Eclipse Developer Contributions via Author-Topic Models.",
                    "Predicting Defects and Changes with Import Relations.",
                    "Forecasting the Number of Changes in Eclipse Using Time Series Analysis.",
                    "Local and Global Recency Weighting Approach to Bug Prediction."
                ]
            }
        ]
    },
    {
        "year": "2006",
        "name": "3rd MSR 2006",
        "info": "Shanghai, China",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2006",
                "sub_name": "Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR 2006, Shanghai, China, May 22-23, 2006.",
                "count": 41,
                "papers": [
                    "Introduction to MSR 2006.",
                    "Mining large software compilations over time: another perspective of software evolution.",
                    "Scenarios for mining the software architecture evolution.",
                    "Productivity analysis of Japanese enterprise software development projects.",
                    "Coupling and cohesion measures for evaluation of component reusability.",
                    "TA-RE: an exchange language for mining software repositories.",
                    "The evolution radar: visualizing integrated logical coupling information.",
                    "An open framework for CVS repository querying, analysis and visualization.",
                    "Micro pattern evolution.",
                    "Mining sequences of changed-files from version histories.",
                    "MAPO: mining API usages from open source repositories.",
                    "Program element matching for multi-version program analyses.",
                    "Detecting similar Java classes using tree algorithms.",
                    "Mining version archives for co-changed lines.",
                    "Constructing universal version history.",
                    "Concern based mining of heterogeneous software repositories.",
                    "Software engineering applications of logic file system: application to automated multi-criteria indexation of software components.",
                    "Mining eclipse for cross-cutting concerns.",
                    "A lightweight approach to technical risk estimation via probabilistic impact analysis.",
                    "Fine grained indexing of software repositories to support impact analysis.",
                    "Are refactorings less error-prone than other changes?",
                    "Predicting defect densities in source code files with decision tree learners.",
                    "Information theoretic evaluation of change prediction models for large-scale software.",
                    "Tracking defect warnings across versions.",
                    "Mining email social networks.",
                    "Geographic location of developers at SourceForge.",
                    "Textual alusions to artifacts in software-related repositories.",
                    "Enriching revision history with interactions.",
                    "Using evolutionary annotations from change logs to enhance program comprehension.",
                    "A study of the contributors of PostgreSQL.",
                    "Co-change visualization applied to PostgreSQL and ArgoUML: (MSR challenge report).",
                    "Mining software repositories with CVSgrab.",
                    "Mining additions of method calls in ArgoUML.",
                    "Using software birthmarks to identify similar classes and major functionalities.",
                    "How long did it take to fix bugs?",
                    "Mining refactorings in ARGOUML.",
                    "Applying the evolution radar to PostgreSQL.",
                    "Examining the evolution of code comments in PostgreSQL.",
                    "Analyzing OSS developers' working time using mailing lists archives.",
                    "Where is bug resolution knowledge stored?",
                    "Mining email social networks in Postgres."
                ]
            }
        ]
    },
    {
        "year": "2005",
        "name": "2nd MSR 2005",
        "info": "Saint Louis, Missouri, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2005",
                "sub_name": "Proceedings of the 2005 International Workshop on Mining Software Repositories, MSR 2005, Saint Louis, Missouri, USA, May 17, 2005.",
                "count": 22,
                "papers": [
                    "Understanding source code evolution using abstract syntax tree matching.",
                    "Recovering system specific rules from software repositories.",
                    "Mining evolution data of a product family.",
                    "Using a clone genealogy extractor for understanding and supporting evolution of code clones.",
                    "When do changes induce fixes?",
                    "Error detection by refactoring reconstruction.",
                    "Software repository mining with Marmoset: an automated programming project snapshot and testing system.",
                    "Mining student CVS repositories for performance indicators.",
                    "Toward mining \"concept keywords\" from identifiers in large software projects.",
                    "Source code that talks: an exploration of Eclipse task comments and their implication to repository mining.",
                    "Text mining for software engineering: how analyst feedback impacts final results.",
                    "Analysis of signature change patterns.",
                    "Improving evolvability through refactoring.",
                    "Linear predictive coding and cepstrum coefficients for mining time variant information from software repositories.",
                    "Repository mining and Six Sigma for process improvement.",
                    "Mining version histories to verify the learning process of Legitimate Peripheral Participants.",
                    "Towards a taxonomy of approaches for mining of source code repositories.",
                    "A framework for describing and understanding mining tools in software development.",
                    "SCQL: a formal model and a query language for source control repositories.",
                    "Developer identification methods for integrated data from various sources.",
                    "Accelerating cross-project knowledge collaboration using collaborative filtering and social networks.",
                    "Collaboration using OSSmole: a repository of FLOSS data and analyses."
                ]
            }
        ]
    },
    {
        "year": "2004",
        "name": "1st MSR 2004",
        "info": "Edinburgh, Scotland, UK",
        "venues": [
            {
                "sub_name_abbr": "conf/msr/2004",
                "sub_name": "Proceedings of the 1st International Workshop on Mining Software Repositories, MSR@ICSE 2004, Edinburgh, Scotland, UK, 25th May 2004.",
                "count": 25,
                "papers": [
                    "Preprocessing CVS Data for Fine-Grained Analysis.",
                    "The Perils and Pitfalls of Mining SourceForge.",
                    "Research Infrastructure for Empirical Science of F/OSS.",
                    "Mining CVS repositories, the softChange experience.",
                    "Text is Software Too.",
                    "GluTheos: Automating the Retrieval and Analysis of Data from Publicly Available Software Repositories.",
                    "Using CVS Historical Information to Understand How Students Develop Software.",
                    "Database Techniques for the Analysis and Exploration of Software Repositories.",
                    "Empirical Project Monitor: A Tool for Mining Multiple Project Data.",
                    "Mining Version Control Systems for FACs (Frequently Applied Changes).",
                    "Mining the Software Change Repository of a Legacy Telephony System.",
                    "Four Interesting Ways in Which History Can Teach Us About Software.",
                    "Mining Software Usage Data.",
                    "Bug Driven Bug Finders.",
                    "Mining Repositories to Assist in Project Planning and Resource Allocation.",
                    "Bug Report Networks: Varieties, Strategies, and Impacts in a F/OSS Development Community.",
                    "A Tool for Mining Defect-Tracking Systems to Predict Fault-Prone Files.",
                    "Towards Understanding the Rhetoric of Small Changes.",
                    "Data Mining for Software Process Discovery in Open Source Software Development Communities.",
                    "Applying Social Network Analysis to the Information in CVS Repositories.",
                    "Mining a Software Developer's Local Interaction History.",
                    "LASER: A Lexical Approach to Analogy in Software Reuse.",
                    "A Case Study on Recommending Reusable Software Components Using Collaborative Filtering.",
                    "Template Mining in Source-Code Digital Libraries.",
                    "Multi-Project Software Engineering: An Example."
                ]
            }
        ]
    }
]