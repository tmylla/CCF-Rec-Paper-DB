[
    {
        "year": "2021",
        "name": "42nd PLDI 2021",
        "info": "Virtual Event, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2021",
                "sub_name": "PLDI '21: 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation, Virtual Event, Canada, June 20-25, 2021.",
                "count": 87,
                "papers": [
                    "Incremental whole-program analysis in Datalog with lattices.",
                    "Revamping hardware persistency models: view-based and axiomatic persistency models for Intel-x86 and Armv8.",
                    "Repairing serializability bugs in distributed database programs via automated schema refactoring.",
                    "Gleipnir: toward practical error analysis for Quantum programs.",
                    "Alive2: bounded translation validation for LLVM.",
                    "Transfinite Iris: resolving an existential dilemma of step-indexed separation logic.",
                    "Perceus: garbage free reference counting with reuse.",
                    "Proof repair across type equivalences.",
                    "Compiler-assisted object inlining with value fields.",
                    "Unleashing the hidden power of compiler optimization on binary code difference: an empirical study.",
                    "RefinedC: automating the foundational verification of C code with refined ownership types.",
                    "Wire sorts: a language abstraction for safe hardware composition.",
                    "DeepCuts: a deep learning optimization framework for versatile GPU workloads.",
                    "Retrofitting effect handlers onto OCaml.",
                    "Unqomp: synthesizing uncomputation in Quantum circuits.",
                    "Zooid: a DSL for certified multiparty computation: from mechanised metatheory to certified multiparty processes.",
                    "Fluid: a framework for approximate concurrency via controlled dependency relaxation.",
                    "Developer and user-transparent compiler optimization for interactive applications.",
                    "Demanded abstract interpretation.",
                    "Learning to find naming issues with big code and small supervision.",
                    "DIY assistant: a multi-modal end-user programmable virtual assistant.",
                    "Web question answering with neurosymbolic program synthesis.",
                    "RbSyn: type- and effect-guided program synthesis.",
                    "High performance correctly rounded math libraries for 32-bit floating point representations.",
                    "Porcupine: a synthesizing compiler for vectorized homomorphic encryption.",
                    "Concolic program repair.",
                    "Concise, type-safe, and efficient structural diffing.",
                    "CoStar: a verified ALL(*) parser.",
                    "Automated conformance testing for JavaScript engines via deep compiler fuzzing.",
                    "Beyond the elementary representations of program invariants over algebraic data types.",
                    "Fast and precise certification of transformers.",
                    "Trace-based control-flow analysis.",
                    "Compiling Stan to generative probabilistic languages and extension to deep probabilistic programming.",
                    "Filling typed holes with live GUIs.",
                    "Concurrent deferred reference counting with constant-time overhead.",
                    "Quantum abstract interpretation.",
                    "Central moment analysis for cost accumulators in probabilistic programs.",
                    "Synthesizing data structure refinements from integrity constraints.",
                    "Provable repair of deep neural networks.",
                    "Integration verification across software and hardware for a simple embedded system.",
                    "Symbolic Boolean derivatives for efficiently solving extended regular expression constraints.",
                    "Abstraction for conflict-free replicated data types.",
                    "Boosting SMT solver performance on mixed-bitwise-arithmetic expressions.",
                    "Distance-in-time versus distance-in-space.",
                    "An efficient interpreter for Datalog by de-specializing relations.",
                    "Adaptive restarts for stochastic synthesis.",
                    "Scooter & Sidecar: a domain-specific approach to writing secure database migrations.",
                    "When threads meet events: efficient and precise static race detection with origins.",
                    "Viaduct: an extensible, optimizing compiler for secure distributed programs.",
                    "Reticle: a virtual machine for programming modern FPGAs.",
                    "Polynomial reachability witnesses via Stellens\u00e4tze.",
                    "Sound probabilistic inference via guide types.",
                    "SPPL: probabilistic programming with fast exact symbolic inference.",
                    "Reverse engineering for reduction parallelization via semiring polynomials.",
                    "DreamCoder: bootstrapping inductive program synthesis with wake-sleep library learning.",
                    "Automatically enforcing fresh and consistent inputs in intermittent systems.",
                    "Modular data-race-freedom guarantees in the promising semantics.",
                    "DNNFusion: accelerating deep neural networks execution with advanced operator fusion.",
                    "SyRust: automatic testing of Rust libraries with semantic-aware program synthesis.",
                    "Chianina: an evolving graph system for flow- and context-sensitive analyses of million lines of C code.",
                    "Path-sensitive sparse analysis without path conditions.",
                    "Cyclic program synthesis.",
                    "Hashing modulo alpha-equivalence.",
                    "Phased synthesis of divide and conquer programs.",
                    "Snapshot-free, transparent, and robust memory reclamation for lock-free data structures.",
                    "Logical bytecode reduction.",
                    "Test-case reduction and deduplication almost for free with transformation-based compiler testing.",
                    "Proving non-termination by program reversal.",
                    "Vectorized secure evaluation of decision forests.",
                    "Task parallel assembly language for uncompromising parallelism.",
                    "JPortal: precise and efficient control-flow tracing for JVM programs with Intel processor trace.",
                    "CompCertO: compiling certified open C components.",
                    "Example-guided synthesis of relational queries.",
                    "Canary: practical static detection of inter-thread value-flow bugs.",
                    "Robustness certification with generative models.",
                    "Execution reconstruction: harnessing failure reoccurrences for failure reproduction.",
                    "Quantitative analysis of assertion violations in probabilistic programs.",
                    "IOOpt: automatic derivation of I/O complexity bounds for affine programs.",
                    "Specification synthesis with constrained Horn clauses.",
                    "Mirror: making lock-free data structures persistent.",
                    "AKG: automatic kernel generation for neural processing units using polyhedral transformations.",
                    "Frequent background polling on a shared thread, using light-weight compiler interrupts.",
                    "Satisfiability modulo ordering consistency theory for multi-threaded program verification.",
                    "Bliss: auto-tuning complex applications using a pool of diverse lightweight learning models.",
                    "Termination analysis without the tears.",
                    "On probabilistic termination of functional programs with continuous distributions.",
                    "Practical smart contract sharding with ownership and commutativity analysis."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2021array",
                "sub_name": "ARRAY 2021: Proceedings of the 7th ACM SIGPLAN International Workshop on Libraries, Languages and Compilers for Array Programming, Virtual Event, Canada, 21 June, 2021.",
                "count": 4,
                "papers": [
                    "Towards size-dependent types for array programming.",
                    "Padding in the mathematics of arrays.",
                    "Acceleration of lattice models for pricing portfolios of fixed-income derivatives.",
                    "Array languages make neural networks fast."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2021maps",
                "sub_name": "MAPS@PLDI 2021: Proceedings of the 5th ACM SIGPLAN International Symposium on Machine Programming, Virtual Event, Canada, 21 June, 2021.",
                "count": 5,
                "papers": [
                    "Generating bug-fixes using pretrained transformers.",
                    "Learning to make compiler optimizations more effective.",
                    "Pure tensor program rewriting via access patterns (representation pearl).",
                    "ControlFlag: a self-supervised idiosyncratic pattern detection system for software control structures.",
                    "Predictive data locality optimization for higher-order tensor computations."
                ]
            }
        ]
    },
    {
        "year": "2020",
        "name": "41st PLDI 2020",
        "info": "London, UK",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2020",
                "sub_name": "Proceedings of the 41st ACM SIGPLAN International Conference on Programming Language Design and Implementation, PLDI 2020, London, UK, June 15-20, 2020.",
                "count": 77,
                "papers": [
                    "Data-driven inference of representation invariants.",
                    "Type error feedback via analytic program repair.",
                    "Synthesizing structured CAD models with equality saturation and inverse transformations.",
                    "Compiler and runtime support for continuation marks.",
                    "Crafty: efficient, HTM-compatible persistent transactions.",
                    "From folklore to fact: comparing implementations of stacks and continuations.",
                    "Typilus: neural type hints.",
                    "Learning nonlinear loop invariants with gated continuous logic networks.",
                    "Blended, precise semantic program embeddings.",
                    "Towards a verified range analysis for JavaScript JITs.",
                    "Binary rewriting without control flow recovery.",
                    "BlankIt library debloating: getting what you want instead of cutting what you don't.",
                    "Verifying concurrent search structure templates.",
                    "Armada: low-effort verification of high-performance concurrent programs.",
                    "Decidable verification under a causally consistent shared memory.",
                    "Inductive sequentialization of asynchronous programs.",
                    "The essence of Bluespec: a core language for rule-based hardware design.",
                    "LLHD: a multi-level intermediate representation for hardware description languages.",
                    "On the principles of differentiable quantum programming languages.",
                    "Silq: a high-level quantum language with safe uncomputation and intuitive semantics.",
                    "Improving program locality in the GC using hotness.",
                    "A marriage of pointer- and epoch-based reclamation.",
                    "CARAT: a case for virtual memory through compiler- and runtime-based address translation.",
                    "Repairing and mechanising the JavaScript relaxed memory model.",
                    "Promising 2.0: global optimizations in relaxed memory concurrency.",
                    "NVTraverse: in NVRAM data structures, the destination is more important than the journey.",
                    "Predictable accelerator design with time-sensitive affine types.",
                    "Type-directed scheduling of streaming accelerators.",
                    "FreezeML: complete and easy type inference for first-class polymorphism.",
                    "Securing smart contract with runtime validation.",
                    "Ethainter: a smart contract security analyzer for composite vulnerabilities.",
                    "Behavioral simulation for smart contracts.",
                    "Multi-modal synthesis of regular expressions.",
                    "Optimizing homomorphic evaluation circuits by program synthesis and term rewriting.",
                    "CacheQuery: learning replacement policies from hardware caches.",
                    "HipHop.js: (A)Synchronous reactive web programming.",
                    "EVA: an encrypted vector arithmetic language and compiler for efficient homomorphic computation.",
                    "Towards an API for the real numbers.",
                    "Responsive parallelism with futures and state.",
                    "SympleGraph: distributed graph processing with precise loop-carried dependency guarantee.",
                    "PMEvo: portable inference of port mappings for out-of-order processors by evolutionary optimization.",
                    "PMThreads: persistent memory threads harnessing versioned shadow copies.",
                    "SCAF: a speculation-aware collaborative dependence analysis framework.",
                    "Scalable validation of binary lifters.",
                    "Polynomial invariant generation for non-deterministic recursive programs.",
                    "Templates and recurrences: better together.",
                    "First-order quantified separators.",
                    "Validating SMT solvers via semantic fusion.",
                    "Debugging and detecting numerical errors in computation with posits.",
                    "SmartTrack: efficient predictive race detection.",
                    "Understanding memory and thread safety practices and issues in real-world Rust programs.",
                    "Fast graph simplification for interleaved Dyck-reachability.",
                    "Static analysis of Java enterprise applications: frameworks and caches, the elephants in the room.",
                    "Automated derivation of parametric data movement lower bounds for affine programs.",
                    "Automatic generation of efficient sparse tensor format conversion routines.",
                    "OOElala: order-of-evaluation based alias analysis for compiler optimization.",
                    "Effective function merging in the SSA form.",
                    "Proving almost-sure termination by omega-regular decomposition.",
                    "\u03bbPSI: exact inference for higher-order probabilistic programs.",
                    "Reactive probabilistic programming.",
                    "Constant-time foundations for the new spectre era.",
                    "Gillian, part i: a multi-language platform for symbolic execution.",
                    "Efficient handling of string-number conversion.",
                    "NV: an intermediate language for verification of network control planes.",
                    "Detecting network load violations for distributed control planes.",
                    "Compiler-directed soft error resilience for lightweight GPU register file protection.",
                    "Adaptive low-overhead scheduling for periodic and reactive intermittent execution.",
                    "Faster general parsing through context-free memoization.",
                    "Zippy LL(1) parsing with derivatives.",
                    "Debug information validation for optimized code.",
                    "Semantic code search via equational reasoning.",
                    "Proving data-poisoning robustness in decision trees.",
                    "A study of the learnability of relational properties: model counting meets machine learning (MCML).",
                    "Learning fast and precise numerical analysis.",
                    "Exact and approximate methods for proving unrealizability of syntax-guided synthesis problems.",
                    "Question selection for interactive program synthesis.",
                    "Reconciling enumerative and deductive program synthesis."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2020soap",
                "sub_name": "Proceedings of the 9th ACM SIGPLAN International Workshop on the State Of the Art in Program Analysis, SOAP@PLDI 2020, London, UK, June 15, 2020.",
                "count": 4,
                "papers": [
                    "Formal reasoning and the hacker way (keynote).",
                    "TACAI: an intermediate representation based on abstract interpretation.",
                    "Value and allocation sensitivity in static Python analyses.",
                    "Explaining bug provenance with trace witnesses."
                ]
            }
        ]
    },
    {
        "year": "2019",
        "name": "40th PLDI 2019",
        "info": "Phoenix, AZ, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2019",
                "sub_name": "Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2019, Phoenix, AZ, USA, June 22-26, 2019.",
                "count": 76,
                "papers": [
                    "Promising-ARM/RISC-V: a simpler and faster operational concurrency model.",
                    "Accelerating sequential consistency for Java with speculative compilation.",
                    "Renaissance: benchmarking suite for parallel applications on the JVM.",
                    "LoCal: a language for programs operating on serialized data.",
                    "Scenic: a language for scenario specification and scene generation.",
                    "Compiling KB-sized machine learning models to tiny IoT devices.",
                    "Model checking for weakly consistent libraries.",
                    "Towards certified separate compilation for concurrent programs.",
                    "Robustness against release/acquire semantics.",
                    "CHET: an optimizing compiler for fully-homomorphic neural-network inferencing.",
                    "Usuba: high-throughput and constant-time ciphers, by construction.",
                    "FaCT: a DSL for timing-sensitive computation.",
                    "Scalable verification of probabilistic networks.",
                    "Cost analysis of nondeterministic probabilistic programs.",
                    "Gen: a general-purpose probabilistic programming system with programmable inference.",
                    "Incremental precision-preserving symbolic inference for probabilistic programs.",
                    "Resource-guided program synthesis.",
                    "Using active learning to synthesize models of applications that access databases.",
                    "Synthesizing database programs for schema refactoring.",
                    "Synthesis and machine learning for heterogeneous extraction.",
                    "AutoPersist: an easy-to-use Java NVM framework based on reachability.",
                    "Mesh: compacting memory management for C/C++ applications.",
                    "Panthera: holistic memory management for big data processing over hybrid memories.",
                    "Lightweight multi-language syntax transformation with parser parser combinators.",
                    "A typed, algebraic approach to parsing.",
                    "Genie: a generator of natural language semantic parsers for virtual assistant commands.",
                    "Lazy counterfactual symbolic execution.",
                    "Sound regular expression semantics for dynamic symbolic execution of JavaScript.",
                    "Effective floating-point analysis via weak-distance minimization.",
                    "Huron: hybrid false sharing detection and repair.",
                    "Model-driven transformations for multi- and many-core CPUs.",
                    "Parallelism-centric what-if and differential analyses.",
                    "Verifying message-passing programs with dependent behavioural types.",
                    "Toward efficient gradual typing for structural types via coercions.",
                    "Bidirectional type checking for relational properties.",
                    "Parser-directed fuzzing.",
                    "Continuously reasoning about programs using differential Bayesian inference.",
                    "Sparse record and replay with controlled scheduling.",
                    "Sparse computation data dependence simplification for efficient compiler-generated inspectors.",
                    "Modular divide-and-conquer parallelization of nested loops.",
                    "Generating piecewise-regular code from irregular structures.",
                    "ILC: a calculus for composable, computational cryptography.",
                    "Proving differential privacy with shadow execution.",
                    "Data-trace types for distributed stream processing systems.",
                    "An inductive synthesis framework for verifiable reinforcement learning.",
                    "Programming support for autonomizing software.",
                    "Wootz: a compiler-based framework for fast CNN pruning via composability.",
                    "Optimization and abstraction: a synergistic approach for analyzing neural network robustness.",
                    "Unsupervised learning of API aliasing specifications.",
                    "Scalable taint specification inference with big code.",
                    "Learning stateful preconditions modulo a test generator.",
                    "SLING: using dynamic analysis to infer program invariants in separation logic.",
                    "Abstract interpretation under speculative execution.",
                    "A fast analytical model of fully associative caches.",
                    "Sound, fine-grained traversal fusion for heterogeneous trees.",
                    "Size-change termination as a contract: dynamically and statically enforcing termination for higher-order programs.",
                    "SemCluster: clustering of imperative programming assignments based on quantitative semantic features.",
                    "Computing summaries of string loops in C for better testing and refactoring.",
                    "Reusable inline caching for JavaScript performance.",
                    "Composable, sound transformations of nested recursion and loops.",
                    "Low-latency graph streaming using compressed purely-functional trees.",
                    "Co-optimizing memory-level parallelism and cache-level parallelism.",
                    "Characterising renaming within OCaml's module system: theory and implementation.",
                    "Type-level computations for Ruby libraries.",
                    "Replication-aware linearizability.",
                    "DFix: automatically fixing timing bugs in distributed systems.",
                    "Ignis: scaling distribution-oblivious systems with light-touch distribution.",
                    "Semantic program alignment for equivalence checking.",
                    "Verified compilation on a verified processor.",
                    "Argosy: verifying layered storage systems with recovery refinement.",
                    "Simple and precise static analysis of untrusted Linux kernel extensions.",
                    "Transactional concurrency control for intermittent, energy-harvesting computing systems.",
                    "Supporting peripherals in intermittent systems with just-in-time checkpoints.",
                    "Verification of programs under the release-acquire semantics.",
                    "A complete formal semantics of x86-64 user-level instruction set architecture.",
                    "An applied quantum Hoare logic."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2019mapl",
                "sub_name": "Proceedings of the 3rd ACM SIGPLAN International Workshop on Machine Learning and Programming Languages, MAPL@PLDI 2019, Phoenix, AZ, USA, June 22, 2019.",
                "count": 5,
                "papers": [
                    "Machine learning in Python with no strings attached.",
                    "Triton: an intermediate language and compiler for tiled neural network computations.",
                    "HackPPL: a universal probabilistic programming language.",
                    "Neural query expansion for code search.",
                    "A case study on machine learning for synthesizing benchmarks."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2019array",
                "sub_name": "Proceedings of the 6th ACM SIGPLAN International Workshop on Libraries, Languages and Compilers for Array Programming, ARRAY@PLDI 2019, Phoenix, AZ, USA, June 22, 2019.",
                "count": 10,
                "papers": [
                    "Array processing on steroids for the SKA radio-telescope (keynote).",
                    "Finite difference methods fengshui: alignment through a mathematics of arrays.",
                    "Data-parallel flattening by expansion.",
                    "ALPyNA: acceleration of loops in Python for novel architectures.",
                    "High-level synthesis of functional patterns with Lift.",
                    "Toward generalized tensor algebra for ab initio quantum chemistry methods.",
                    "TeIL: a type-safe imperative tensor intermediate language.",
                    "Convolutional neural networks in APL.",
                    "Records with rank polymorphism.",
                    "Linear algebraic depth-first search."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2019soap",
                "sub_name": "Proceedings of the 8th ACM SIGPLAN International Workshop on State Of the Art in Program Analysis, SOAP@PLDI 2019, Phoenix, AZ, USA, June 22, 2019.",
                "count": 8,
                "papers": [
                    "Adventures in commercial-grade static analysis (keynote).",
                    "Fixpoint reuse for incremental JavaScript analysis.",
                    "Know your analysis: how instrumentation aids understanding static analysis.",
                    "SootDiff: bytecode comparison across different Java compilers.",
                    "Modernizing parsing tools: parsing and analysis with object-oriented programming.",
                    "Commit-time incremental analysis.",
                    "Program analysis for process migration.",
                    "MetaDL: analysing Datalog in Datalog."
                ]
            }
        ]
    },
    {
        "year": "2018",
        "name": "39th PLDI 2018",
        "info": "Philadelphia, PA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2018",
                "sub_name": "Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2018, Philadelphia, PA, USA, June 18-22, 2018.",
                "count": 55,
                "papers": [
                    "Verifying that web pages have accessible layout.",
                    "BLeak: automatically debugging memory leaks in web applications.",
                    "Putting in all the stops: execution control for JavaScript.",
                    "Persistency for synchronization-free regions.",
                    "Write-rationing garbage collection for hybrid memories.",
                    "Mapping spiking neural networks onto a manycore neuromorphic architecture.",
                    "Static serializability analysis for causal consistency.",
                    "CUBA: interprocedural Context-UnBounded Analysis of concurrent programs.",
                    "Symbolic reasoning for automatic signal placement.",
                    "Advanced automata-based algorithms for program termination checking.",
                    "HHVM JIT: a profile-guided, region-based compiler for PHP and Hack.",
                    "On-stack replacement, distilled.",
                    "EffectiveSan: type and memory error detection using dynamically typed C/C++.",
                    "Calling-to-reference context translation via constraint-guided CFL-reachability.",
                    "The semantics of transactions and weak memory in x86, Power, ARM, and C++.",
                    "MixT: a language for mixing consistency in geodistributed transactions.",
                    "Bounding data races in space and time.",
                    "Finding root causes of floating point error.",
                    "Ry\u016b: fast float-to-string conversion.",
                    "To-many or to-one? all-in-one! efficient purely functional multi-maps with type-heterogeneous hash-tries.",
                    "Spatial: a language and compiler for application accelerators.",
                    "Enhancing computation-to-core assignment with physical location information.",
                    "SWOOP: software-hardware co-design for non-speculative, execute-ahead, in-order cores.",
                    "iReplayer: in-situ and identical record-and-replay for multithreaded applications.",
                    "D4: fast concurrency debugging with parallel differential analysis.",
                    "High-coverage, unbounded sound predictive race detection.",
                    "CURD: a dynamic CUDA race detector.",
                    "A general path-based representation for predicting program properties.",
                    "Program synthesis using conflict-driven learning.",
                    "Accelerating search-based program synthesis using learned probabilistic models.",
                    "Inferring crypto API rules from code changes.",
                    "Automated clustering and program repair for introductory programming assignments.",
                    "Search, align, and repair: data-driven feedback generation for introductory programming exercises.",
                    "Bounded expectations: resource analysis for probabilistic programs.",
                    "PMAF: an algebraic framework for static analysis of probabilistic programs.",
                    "Polyhedral auto-transformation with no integer linear programming.",
                    "Partial control-flow linearization.",
                    "Locality analysis through static parallel sampling.",
                    "Incremental inference for probabilistic programs.",
                    "Bayonet: probabilistic inference for networks.",
                    "Probabilistic programming with programmable inference.",
                    "VeriPhy: verified controller executables from verified cyber-physical system models.",
                    "Crellvm: verified credible compilation for LLVM.",
                    "Certified concurrent abstraction layers.",
                    "Modularity for decidability of deductive verification with applications to distributed systems.",
                    "Active learning of points-to specifications.",
                    "Pinpoint: fast and precise sparse value flow analysis for million lines of code.",
                    "A data-driven CHC solver.",
                    "User-guided program reasoning using Bayesian inference.",
                    "GPU code optimization using abstract kernel emulation and sensitivity analysis.",
                    "Gluon: a communication-optimizing substrate for distributed heterogeneous graph analytics.",
                    "Heartbeat scheduling: provable efficiency for nested parallelism.",
                    "Guarded impredicative polymorphism.",
                    "Typed closure conversion for the calculus of constructions.",
                    "Inferring type rules for syntactic sugar."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2018mapl",
                "sub_name": "Proceedings of the 2nd ACM SIGPLAN International Workshop on Machine Learning and Programming Languages, MAPL@PLDI 2018, Philadelphia, PA, USA, June 18-22, 2018.",
                "count": 8,
                "papers": [
                    "Ariadne: analysis for machine learning programs.",
                    "Clone-hunter: accelerated bound checks elimination via binary code clone detection.",
                    "Obfuscation resilient search through executable classification.",
                    "Retrieval on source code: a neural code search.",
                    "Diesel: DSL for linear algebra and neural net computations on GPUs.",
                    "A design proposal for Gen: probabilistic programming with fast custom inference via code generation.",
                    "Relay: a new IR for machine learning frameworks.",
                    "The three pillars of machine programming."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2018array",
                "sub_name": "Proceedings of the 5th ACM SIGPLAN International Workshop on Libraries, Languages, and Compilers for Array Programming, ARRAY@PLDI 2018, Philadelphia, PA, USA, June 19, 2018.",
                "count": 8,
                "papers": [
                    "A Rosetta Stone for array languages.",
                    "Petalisp: run time code generation for operations on strided arrays.",
                    "Profile-based vectorization for MATLAB.",
                    "Parallel programming with arrays in Kappa.",
                    "Rank polymorphism viewed as a constraint problem.",
                    "Proving a core code for FDM correct by 2 + dw tests.",
                    "Inner array inlining for structure of arrays layout.",
                    "An array API for finite difference methods."
                ]
            }
        ]
    },
    {
        "year": "2017",
        "name": "38th PLDI 2017",
        "info": "Barcelona, Spain",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2017",
                "sub_name": "Proceedings of the 38th ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2017, Barcelona, Spain, June 18-23, 2017.",
                "count": 47,
                "papers": [
                    "Cache locality optimization for recursive programs.",
                    "Fusing effectful comprehensions.",
                    "Generalizations of the theory and deployment of triangular inequality for compiler-based strength reduction.",
                    "Alive-Infer: data-driven precondition inference for peephole optimizations in LLVM.",
                    "DemoMatch: API discovery from demonstrations.",
                    "Similarity of binaries through re-optimization.",
                    "Synthesizing program input grammars.",
                    "Compiling Markov chain Monte Carlo algorithms for probabilistic modeling.",
                    "BARRACUDA: binary-level analysis of runtime RAces in CUDA programs.",
                    "BigFoot: static check placement for dynamic race detection.",
                    "Dynamic race prediction in linear time.",
                    "Systematic black-box analysis of collaborative web applications.",
                    "Bringing the web up to speed with WebAssembly.",
                    "Miniphases: compilation using modular and efficient tree transformations.",
                    "Proactive and adaptive energy-aware programming with mixed typechecking.",
                    "Simple, fast, and safe manual memory management.",
                    "Compositional recurrence analysis revisited.",
                    "Context transformations for pointer analysis.",
                    "Efficient and precise points-to analysis: modeling the heap by merging equivalent automata.",
                    "Static deadlock detection for asynchronous C# programs.",
                    "Achieving high coverage for floating-point code via unconstrained programming.",
                    "Instruction punning: lightweight instrumentation for x86-64.",
                    "Low overhead dynamic binary translation on ARM.",
                    "Skeletal program enumeration for rigorous compiler testing.",
                    "Decomposition instead of self-composition for proving the absence of timing channels.",
                    "Automatic program inversion using symbolic transducers.",
                    "Control-flow recovery from partial failure reports.",
                    "Rigorous analysis of software countermeasures against cache attacks.",
                    "Component-based synthesis of table consolidation and transformation tasks from examples.",
                    "Network configuration synthesis with abstract topologies.",
                    "Synthesizing highly expressive SQL queries from input-output examples.",
                    "Synthesizing memory models from framework sketches and Litmus tests.",
                    "Compiling without continuations.",
                    "FunTAL: reasonably mixing a functional language with assembly.",
                    "HoTTSQL: proving query rewrites with univalent SQL semantics.",
                    "Levity polymorphism.",
                    "Synthesis of divide and conquer parallelism for loops.",
                    "Futhark: purely functional GPU-programming with nested parallelism and in-place array updates.",
                    "Gradual synthesis for static parallelization of single-pass array-processing programs.",
                    "A formally verified compiler for Lustre.",
                    "Flatten and conquer: a framework for efficient analysis of string constraints.",
                    "Repairing sequential consistency in C/C++11.",
                    "Taming undefined behavior in LLVM.",
                    "Low-synchronization, mostly lock-free, elastic scheduling for streaming runtimes.",
                    "Practical partial evaluation for high-performance dynamic language runtimes.",
                    "Responsive parallel computation: bridging competitive and cooperative threading.",
                    "StreamQRE: modular specification and efficient evaluation of quantitative queries over streaming data."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2017soap",
                "sub_name": "Proceedings of the 6th ACM SIGPLAN International Workshop on State Of the Art in Program Analysis, SOAP@PLDI 2017, Barcelona, Spain, June 18, 2017.",
                "count": 8,
                "papers": [
                    "Revisiting recency abstraction for JavaScript: towards an intuitive, compositional, and efficient heap abstraction.",
                    "A Datalog model of must-alias analysis.",
                    "An efficient tunable selective points-to analysis for large codebases.",
                    "SootKeeper: runtime reusability for modular static analysis.",
                    "Porting doop to Souffl\u00e9: a tale of inter-engine portability for Datalog-based analyses.",
                    "Systematic approaches for increasing soundness and precision of static analyzers.",
                    "On the construction of soundness oracles.",
                    "Hermes: assessment and creation of effective test corpora."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2017mapl",
                "sub_name": "Proceedings of the 1st ACM SIGPLAN International Workshop on Machine Learning and Programming Languages, MAPL@PLDI 2017, Barcelona, Spain, June 18, 2017.",
                "count": 6,
                "papers": [
                    "A computational model for TensorFlow: an introduction.",
                    "Dyna: toward a self-optimizing declarative language for machine learning applications.",
                    "Debugging probabilistic programs.",
                    "Combining the logical and the probabilistic in program analysis.",
                    "Learning a classifier for false positive error reports emitted by static code analysis tools.",
                    "Verified perceptron convergence theorem."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2017array",
                "sub_name": "Proceedings of the 4th ACM SIGPLAN International Workshop on Libraries, Languages, and Compilers for Array Programming, ARRAY@PLDI 2017, Barcelona, Spain, June 18, 2017.",
                "count": 8,
                "papers": [
                    "Quad Ropes: immutable, declarative arrays with parallelizable operations.",
                    "An ELI-to-C compiler: design, implementation, and performance.",
                    "Array programming in Whiley.",
                    "Flexible data views: design and implementation.",
                    "Portable vectorization and parallelization of C++ multi-dimensional array computations.",
                    "Efficient array slicing on the Intel Xeon Phi coprocessor.",
                    "Modular array-based GPU computing in a dynamically-typed language.",
                    "HPTT: a high-performance tensor transposition C++ library."
                ]
            }
        ]
    },
    {
        "year": "2016",
        "name": "37th PLDI 2016",
        "info": "Santa Barbara, CA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2016",
                "sub_name": "Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2016, Santa Barbara, CA, USA, June 13-17, 2016.",
                "count": 48,
                "papers": [
                    "Into the depths of C: elaborating the de facto standards.",
                    "Living on the edge: rapid-toggling probes with cross-modification on x86.",
                    "Polymorphic type inference for machine code.",
                    "Data-driven precondition inference with learned features.",
                    "Cartesian hoare logic for verifying k-safety properties.",
                    "Verifying bit-manipulations of floating-point.",
                    "Coverage-directed differential testing of JVM implementations.",
                    "Exposing errors related to weak memory in GPU applications.",
                    "Lightweight computation tree tracing for lazy functional languages.",
                    "Effective padding of multidimensional arrays to avoid cache conflict misses.",
                    "GreenWeb: language extensions for energy-efficient mobile web computing.",
                    "Input responsiveness: using canary inputs to dynamically steer approximation.",
                    "Configuration synthesis for programmable analog devices with Arco.",
                    "From Datalog to flix: a declarative language for fixed points on lattices.",
                    "Latte: a language, compiler, and runtime for elegant and efficient deep neural networks.",
                    "On the complexity and performance of parsing with derivatives.",
                    "Stratified synthesis: automatically learning the x86-64 instruction set.",
                    "Remix: online detection and repair of cache contention for the JVM.",
                    "Statistical similarity of binaries.",
                    "Accepting blame for safe tunneled exceptions.",
                    "Occurrence typing modulo theories.",
                    "Refinement types for TypeScript.",
                    "MapReduce program synthesis.",
                    "Programmatic and direct manipulation, together at last.",
                    "Fast synthesis of fast collections.",
                    "Event-driven network programming.",
                    "Temporal NetKAT.",
                    "SDNRacer: concurrency analysis for software-defined networks.",
                    "Rehearsal: a configuration verification tool for puppet.",
                    "Toward compositional verification of interruptible OS kernels and device drivers.",
                    "Verified peephole optimizations for CompCert.",
                    "Just-in-time static type checking for dynamic languages.",
                    "Types from data: making structured data first-class citizens in F#.",
                    "Automatically learning shape specifications.",
                    "Synthesizing transformations on hierarchically structured data.",
                    "Program synthesis from polymorphic refinement types.",
                    "Higher-order and tuple-based massively-parallel prefix sums.",
                    "A distributed OpenCL framework using redundant computation and data replication.",
                    "Idle time garbage collection scheduling.",
                    "Assessing the limits of program-specific garbage collection performance.",
                    "Cardinalities and universal quantifiers for verifying parameterized systems.",
                    "Ivy: safety verification by interactive generalization.",
                    "Precise, dynamic information flow for database-backed applications.",
                    "End-to-end verification of information-flow security for C and assembly programs.",
                    "A design and verification methodology for secure isolated regions.",
                    "Transactional data structure libraries.",
                    "FlexVec: auto-vectorization for irregular loops.",
                    "Verified lifting of stencil computations."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2016array",
                "sub_name": "Proceedings of the 3rd ACM SIGPLAN International Workshop on Libraries, Languages, and Compilers for Array Programming, ARRAY@PLDI 2016, Santa Barbara, CA, USA, June 14, 2016.",
                "count": 9,
                "papers": [
                    "Data-race detection: the missing piece for an end-to-end semantic equivalence checker for parallelizing transformations of array-intensive programs.",
                    "Array program transformation with Loo.py by example: high-order finite elements.",
                    "Design and GPGPU performance of Futhark's redomap construct.",
                    "Object support in an array-based GPGPU extension for Ruby.",
                    "The key to a data parallel compiler.",
                    "TTC: a tensor transposition compiler for multiple architectures.",
                    "Automatic generation of parallel C code for stencil applications written in MATLAB.",
                    "SSA-based MATLAB-to-C compilation and optimization.",
                    "Extending C++ with co-array semantics."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2016soap",
                "sub_name": "Proceedings of the 5th ACM SIGPLAN International Workshop on State Of the Art in Program Analysis, SOAP@PLDI 2016, Santa Barbara, CA, USA, June 14, 2016.",
                "count": 5,
                "papers": [
                    "Towards cross-platform cross-language analysis with soot.",
                    "Iceberg: a tool for static analysis of Java critical sections.",
                    "Toward an automated benchmark management system.",
                    "On the unsoundness of static analysis for Android GUIs.",
                    "LifeJacket: verifying precise floating-point optimizations in LLVM."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2016x10",
                "sub_name": "Proceedings of the 6th ACM SIGPLAN Workshop on X10, X10@PLDI 2016, Santa Barbara, CA, USA, June 14, 2016.",
                "count": 7,
                "papers": [
                    "Control structure overloading in X10.",
                    "A memory model for X10.",
                    "Cooperation vs. coordination for lifeline-based global load balancing in APGAS.",
                    "Resilient X10 over MPI user level failure mitigation.",
                    "ActorX10: an actor library for X10.",
                    "SWE-X10: an actor-based and locally coordinated solver for the shallow water equations.",
                    "A case for distributed work-stealing in regular applications."
                ]
            }
        ]
    },
    {
        "year": "2015",
        "name": "36th PLDI 2015",
        "info": "Portland, OR, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2015",
                "sub_name": "Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation, Portland, OR, USA, June 15-17, 2015.",
                "count": 59,
                "papers": [
                    "Automatically improving accuracy for floating point expressions.",
                    "Diagnosing type errors with class.",
                    "Provably correct peephole optimizations with alive.",
                    "Algorithmic debugging of real-world haskell programs: deriving dependencies from the cost centre stack.",
                    "Automatic error elimination by horizontal code transfer across multiple applications.",
                    "Light: replay via tightly bounded recording.",
                    "Many-core compiler fuzzing.",
                    "Mechanized verification of fine-grained concurrent programs.",
                    "Verification of producer-consumer synchronization in GPU programs.",
                    "Relaxing safely: verified on-the-fly garbage collection for x86-TSO.",
                    "Verifying read-copy-update in a logic for weak memory.",
                    "LaminarIR: compile-time queues for structured streams.",
                    "Optimizing off-chip accesses in multicores.",
                    "Improving compiler scalability: optimizing large programs at small price.",
                    "Verification of a cryptographic primitive: SHA-256 (abstract).",
                    "Asynchronous programming, analysis and testing with state machines.",
                    "Stateless model checking concurrent programs with maximal causality reduction.",
                    "Synthesizing racy tests.",
                    "The Push/Pull model of transactions.",
                    "Efficient synthesis of network updates.",
                    "Efficient synthesis of probabilistic programs.",
                    "FlashRelate: extracting relational data from semi-structured spreadsheets using examples.",
                    "Synthesizing data structure transformations from input-output examples.",
                    "Composing concurrency control.",
                    "Dynamic partial order reduction for relaxed memory models.",
                    "Monitoring refinement via symbolic reasoning.",
                    "Preventing glitches and short circuits in high-level self-timed chip specifications.",
                    "DAG inlining: a decision procedure for reachability-modulo-theories in hierarchical programs.",
                    "Exploring and enforcing security guarantees via program dependence graphs.",
                    "Making numerical program analysis fast.",
                    "Tree dependence analysis.",
                    "A formal C memory model supporting integer-pointer casts.",
                    "Defining the undefinedness of C.",
                    "KJS: a complete formal semantics of JavaScript.",
                    "Verdi: a framework for implementing and formally verifying distributed systems.",
                    "Static detection of asymptotic performance bugs in collection traversals.",
                    "Autotuning algorithmic choice for input sensitivity.",
                    "Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code.",
                    "Profile-guided meta-programming.",
                    "Declarative programming over eventually consistent data stores.",
                    "Blame and coercion: together again for the first time.",
                    "Lightweight, flexible object-oriented generics.",
                    "Relatively complete counterexamples for higher-order programs.",
                    "Automatic induction proofs of data-structures in imperative programs.",
                    "Compositional certified resource bounds.",
                    "Peer-to-peer affine commitment using bitcoin.",
                    "Termination and non-termination specification inference.",
                    "Celebrating diversity: a mixture of experts approach for runtime mapping in dynamic environments.",
                    "Efficient execution of recursive programs on commodity vector hardware.",
                    "Loop and data transformations for sparse matrix code.",
                    "Synthesizing parallel graph programs via automated planning.",
                    "Zero-overhead metaprogramming: reflection and metaobject protocols fast and without compromises.",
                    "Finding counterexamples from parsing conflicts.",
                    "Interactive parser synthesis by example.",
                    "A simpler, safer programming and execution model for intermittent systems.",
                    "Concurrency debugging with differential schedule projections.",
                    "Synthesis of machine code from semantics.",
                    "Synthesis of ranking functions using extremal counterexamples.",
                    "Type-and-example-directed program synthesis."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2015scala",
                "sub_name": "Proceedings of the 6th ACM SIGPLAN Symposium on Scala, Scala@PLDI 2015, Portland, OR, USA, June 15-17, 2015.",
                "count": 7,
                "papers": [
                    "SnapQueue: lock-free queue with constant time snapshots.",
                    "Distributed programming in Scala with APGAS.",
                    "Counter-example complete verification for higher-order functions.",
                    "Referential integrity with Scala types.",
                    "Sound reasoning about integral data types with a reusable SMT solver interface.",
                    "Fold-based fusion as a library: a generative programming pearl.",
                    "ESPeciaL: an embedded systems programming language."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2015soap",
                "sub_name": "Proceedings of the 4th ACM SIGPLAN International Workshop on State Of the Art in Program Analysis, SOAP@PLDI 2015, Portland, OR, USA, June 15 - 17, 2015.",
                "count": 5,
                "papers": [
                    "Using targeted symbolic execution for reducing false-positives in dataflow analysis.",
                    "Understanding caller-sensitive method vulnerabilities: a class of access control vulnerabilities in the Java platform.",
                    "Combining type-analysis with points-to analysis for analyzing Java library source-code.",
                    "Droidel: a general approach to Android framework modeling.",
                    "Design your analysis: a case study on implementation reusability of data-flow functions."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2015array",
                "sub_name": "Proceedings of the 2nd ACM SIGPLAN International Workshop on Libraries, Languages, and Compilers for Array Programming, ARRAY@PLDI, Portland, OR, USA, June 15 - 17, 2015.",
                "count": 10,
                "papers": [
                    "Loo.py: from fortran to performance via transformation and substitution rules.",
                    "Techniques for efficient MATLAB-to-C compilation.",
                    "Compiling APL to accelerate through a typed array intermediate language.",
                    "Velociraptor: a compiler toolkit for array-based languages targeting CPUs and GPUs.",
                    "Performance search engine driven by prior knowledge of optimization.",
                    "High-level accelerated array programming in the web browser.",
                    "Accelerating information experts through compiler design.",
                    "Fusing convolution kernels through tiling.",
                    "Array programming in pascal.",
                    "Abstract expressionism for parallel performance."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2015x10",
                "sub_name": "Proceedings of the ACM SIGPLAN Workshop on X10, Portland, OR, USA, June 15 - 17, 2015.",
                "count": 7,
                "papers": [
                    "Revisiting loop transformations with x10 clocks.",
                    "Local parallel iteration in x10.",
                    "Cutting out the middleman: OS-level support for x10 activities.",
                    "Optimization of x10 programs with ROSE compiler infrastructure.",
                    "The APGAS library: resilient parallel and distributed programming in Java 8.",
                    "Towards an efficient fault-tolerance scheme for GLB.",
                    "Scalable parallel numerical constraint solver using global load balancing."
                ]
            }
        ]
    },
    {
        "year": "2014",
        "name": "35th PLDI 2014",
        "info": "Edinburgh, UK",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2014",
                "sub_name": "ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI '14, Edinburgh, United Kingdom - June 09 - 11, 2014.",
                "count": 59,
                "papers": [
                    "What exactly is inexact computation good for?",
                    "Taming the parallel effect zoo: extensible deterministic parallelism with LVish.",
                    "Test-driven repair of data races in structured parallel programs.",
                    "\u00c6minium: a permission based concurrent-by-default programming language approach.",
                    "Atomicity refinement for verified compilation.",
                    "DoubleChecker: efficient sound and precise atomicity checking.",
                    "Herding cats: modelling, simulation, testing, and data-mining for weak memory.",
                    "Surgical precision JIT compilers.",
                    "Stochastic optimization of floating-point programs with tunable precision.",
                    "A framework for enhancing data reuse via associative reordering.",
                    "First-class runtime generation of high-performance types using exotypes.",
                    "Getting F-bounded polymorphism into shape.",
                    "Optimal inference of fields in row-polymorphic records.",
                    "Expressing and verifying probabilistic assertions.",
                    "Compositional solution space quantification for probabilistic software analysis.",
                    "Slicing probabilistic programs.",
                    "A theory of changes for higher-order languages: incrementalizing \u03bb-calculi by static differentiation.",
                    "Adapton: composable, demand-driven incremental computation.",
                    "Specialization slicing.",
                    "Laws of concurrent programming.",
                    "Adaptive, efficient, parallel execution of parallel programs.",
                    "Globally precise-restartable execution of parallel programs.",
                    "Accurate application progress analysis for large-scale parallel debugging.",
                    "Compiler-assisted detection of transient memory errors.",
                    "Compiler validation via equivalence modulo inputs.",
                    "Automatic runtime error repair and containment via recovery shepherding.",
                    "On abstraction refinement for program analyses in Datalog.",
                    "Hybrid top-down and bottom-up interprocedural analysis.",
                    "FlowDroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps.",
                    "End-to-end verification of stack-space bounds for C programs.",
                    "VeriCon: towards verifying controller programs in software-defined networks.",
                    "Verification modulo versions: towards usable verification.",
                    "Commutativity race detection.",
                    "Race detection for Android applications.",
                    "Race detection for event-driven mobile applications.",
                    "Maximal sound predictive race detection with control flow abstraction.",
                    "Tracelet-based code search in executables.",
                    "Resugaring: lifting evaluation sequences through syntactic sugar.",
                    "SCCharts: sequentially constructive statecharts for safety-critical applications: HW/SW-synthesis for a conservative extension of synchronous statecharts.",
                    "Fast: a transducer-based language for tree manipulation.",
                    "A personal perspective on concurrency.",
                    "Chlorophyll: synthesis-aided compiler for low-power spatial architectures.",
                    "Test-driven synthesis.",
                    "Code completion with statistical language models.",
                    "Don't sweat the small stuff: formal verification of C code without the pain.",
                    "Natural proofs for data structure manipulation in C using separation logic.",
                    "Automating formal proofs for reactive systems.",
                    "Persistent pointer information.",
                    "Selective context-sensitivity guided by impact pre-analysis.",
                    "Introspective analysis: context-sensitivity, across the board.",
                    "Improving JavaScript performance by deconstructing the type system.",
                    "Doppio: breaking the browser language barrier.",
                    "Dynamic enforcement of determinism in a parallel scripting language.",
                    "A lightweight symbolic virtual machine for solver-aided host languages.",
                    "FlashExtract: a framework for data extraction by examples.",
                    "Consolidation of queries with user-defined functions.",
                    "A model counter for constraints over unbounded strings.",
                    "Modular control-flow integrity.",
                    "Dynamic space limits for Haskell."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2014dyla",
                "sub_name": "Proceedings of the Workshop on Dynamic Languages and Applications, Dyla 2014, Edinburgh, United Kingdom, June 9-11, 2014.",
                "count": 5,
                "papers": [
                    "I Know It When I See It: Observable Races in JavaScript Applications.",
                    "Debugging at Full Speed.",
                    "Typed Lua: An Optional Type System for Lua.",
                    "List-based Monadic Computations for Dynamically Typed Languages.",
                    "Python Interpreter Performance Deconstructed."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2014mspc",
                "sub_name": "Proceedings of the workshop on Memory Systems Performance and Correctness, MSPC '14, Edinburgh, United Kingdom, June 13, 2014.",
                "count": 8,
                "papers": [
                    "A study of connected object locality in NUMA heaps.",
                    "Affinity-based hash tables.",
                    "Feedback directed optimization of TCMalloc.",
                    "Main memory and cache performance of intel sandy bridge and AMD bulldozer.",
                    "Nonvolatile memory is a broken time machine.",
                    "O-structures: semantics for versioned memory.",
                    "Outlawing ghosts: avoiding out-of-thin-air results.",
                    "Trash in cache: detecting eternally silent stores."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2014soap",
                "sub_name": "Proceedings of the 3rd ACM SIGPLAN International Workshop on the State Of the Art in Java Program analysis, SOAP 2014, Edinburgh, UK, Co-located with PLDI 2014, June 12, 2014.",
                "count": 7,
                "papers": [
                    "TS4J: a fluent interface for defining and computing typestate analyses.",
                    "A software product line for static analyses: the OPAL framework.",
                    "Dynamic slicing with soot.",
                    "Explicit and symbolic techniques for fast and scalable points-to analysis.",
                    "Android taint flow analysis for app sets.",
                    "How to build the perfect Swiss army knife, and keep it sharp?: Challenges for the soot program-analysis framework in the light of past, current and future demands.",
                    "Large-scale configurable static analysis."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2014trust",
                "sub_name": "Proceedings of the 1st ACM SIGPLAN Workshop on Reproducible Research Methodologies and New Publication Models in Computer Engineering, TRUST 2014, Edinburgh, United Kingdom, June 9-11, 2014.",
                "count": 5,
                "papers": [
                    "CARE, the comprehensive archiver for reproducible execution.",
                    "Software in reproducible research: advice and best practice collected from experiences at the collaborations workshop.",
                    "Academia 2.0: removing the publisher middle-man while retaining impact.",
                    "Falsifiability of network security research: the good, the bad, and the ugly.",
                    "Community-driven reviewing and validation of publications."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2014array",
                "sub_name": "ARRAY'14: Proceedings of the 2014 ACM SIGPLAN International Workshop on Libraries, Languages, and Compilers for Array Programming, Edinburgh, United Kingdom, June 12-13, 2014.",
                "count": 17,
                "papers": [
                    "Exploiting Implicit Parallelism in Dynamic Array Programming Languages.",
                    "NOVA: A Functional Language for Data Parallelism.",
                    "Abstracting Vector Architectures in Library Generators: Case Study Convolution Filters.",
                    "Just-in-time Length Specialization of Dynamic Vector Code.",
                    "A Local-View Array Library for Partitioned Global Address Space C++ Programs.",
                    "GPGPU Composition with OCaml.",
                    "Supporting Array Programming in X10.",
                    "A Composable Array Function Interface for Heterogeneous Computing in Java.",
                    "Just-in-time shape inference for array-based languages.",
                    "Array Operators Using Multiple Dispatch: A design methodology for array implementations in dynamic languages.",
                    "Co-dfns: Ancient Language, Modern Compiler.",
                    "Extract and Extend Parallelism using C/C++ Extension for Array Notation on Multicore and Many-core Platforms: An Empirical Investigation with Quantitative Finance Examples.",
                    "On Predicting the Impact of Resource Redistributions in Streaming Applications.",
                    "Loo.py: transformation-based code generation for GPUs and CPUs.",
                    "Bounds Checking: An Instance of Hybrid Analysis.",
                    "Multi-Target C Code Generation from MATLAB.",
                    "Compiling a Subset of APL Into a Typed Intermediate Language."
                ]
            }
        ]
    },
    {
        "year": "2013",
        "name": "34th PLDI 2013",
        "info": "Seattle, WA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2013",
                "sub_name": "ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI '13, Seattle, WA, USA, June 16-19, 2013.",
                "count": 48,
                "papers": [
                    "Look up!: your future is in the cloud.",
                    "Optimizing database-backed applications with query synthesis.",
                    "Automated feedback generation for introductory programming assignments.",
                    "Complete completion using types and weights.",
                    "Fast condensation of the program dependence graph.",
                    "Scalable variable and data type detection in a binary rewriter.",
                    "Fast RMWs for TSO: semantics and implementation.",
                    "Rely-guarantee references for refinement types over aliased mutable data.",
                    "Harmonizing classes, functions, tuples, and type parameters in virgil iii.",
                    "It's alive! continuous feedback in UI programming.",
                    "Terra: a multi-stage language for high-performance computing.",
                    "SMAT: an input adaptive auto-tuner for sparse matrix-vector multiplication.",
                    "When polyhedral transformations meet SIMD code generation.",
                    "Programming languages in security: keynote.",
                    "CLAP: recording local executions to reproduce concurrency failures.",
                    "CONCURRIT: a domain specific language for reproducing concurrency bugs.",
                    "Dynamic determinacy analysis.",
                    "Formal verification of SSA-based optimizations for LLVM.",
                    "Compiler testing via a theory of sound optimisations in the C11/C++11 memory model.",
                    "Taming compiler fuzzers.",
                    "Almost-correct specifications: a modular semantic framework for assigning confidence to warnings.",
                    "Reasoning about nondeterminism in programs.",
                    "Natural proofs for structure, data, and separation.",
                    "General data structure expansion for multi-threading.",
                    "AutoSynch: an automatic-signal monitor based on predicate tagging.",
                    "Concurrent libraries with foresight.",
                    "Thresher: precise refutations for heap reachability.",
                    "TRANSIT: specifying protocols with concolic snippets.",
                    "Using managed runtime systems to tolerate holes in wearable memories.",
                    "Limitations of partial compaction: towards practical bounds.",
                    "P: safe asynchronous event-driven programming.",
                    "Quipper: a scalable quantum programming language.",
                    "Reconciling exhaustive pattern matching with objects.",
                    "SPLLIFT: statically analyzing software product lines in minutes instead of years.",
                    "Finding optimum abstractions in parametric dataflow analysis.",
                    "How to combine widening and narrowing for non-monotonic systems of equations.",
                    "Verifying higher-order programs with the dijkstra monad.",
                    "Monadic abstract interpreters.",
                    "Asynchronous functional reactive programming for GUIs.",
                    "Hybrid context-sensitivity for points-to analysis.",
                    "Fast algorithms for Dyck-CFL-reachability with applications to alias analysis.",
                    "Static analysis for probabilistic programs: inferring whole program properties from finitely many paths.",
                    "Modular verification of linearizability with non-fixed linearization points.",
                    "Translation validation for a verified OS kernel.",
                    "Machine-verified network controllers.",
                    "A general constraint-centric scheduling framework for spatial architectures.",
                    "Steal Tree: low-overhead tracing of work stealing schedulers.",
                    "Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2013mspc",
                "sub_name": "Proceedings of the ACM SIGPLAN Workshop on Memory Systems Performance and Correctness, June, 21, 2013, Seattle, Washington, USA, Co-located with PLDI 2013.",
                "count": 12,
                "papers": [
                    "APE: accelerator processor extensions to optimize data-compute co-location.",
                    "A study of data structures with a deep heap shape.",
                    "Introducing kernel-level page reuse for high performance computing.",
                    "A low overhead method for recovering unused memory inside regions.",
                    "Software-controlled transparent management of heterogeneous memory resources in virtualized systems.",
                    "Program-centric cost models for locality.",
                    "A new perspective on processing-in-memory architecture design.",
                    "A coldness metric for cache optimization.",
                    "All-window data liveness.",
                    "Software-level scheduling to exploit non-uniformly shared data cache on GPGPU.",
                    "Cache rationing for multicore.",
                    "Analyzing locality of memory references in GPU architectures."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2013soap",
                "sub_name": "Proceedings of the 2nd ACM SIGPLAN International Workshop on State Of the Art in Java Program analysis, SOAP 2013, Seattle, WA, USA, June 20, 2013.",
                "count": 6,
                "papers": [
                    "Joogie: from Java through Jimple to Boogie.",
                    "OCSEGen: open components and systems environment generator.",
                    "DUA-forensics: a fine-grained dependence analysis and instrumentation framework based on Soot.",
                    "Soot class loading in the rootbeer GPU compiler.",
                    "Numerical static analysis with Soot.",
                    "Interprocedural data flow analysis in Soot using value contexts."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2013x10",
                "sub_name": "Proceedings of the third ACM SIGPLAN X10 Workshop, X10 2013, Seattle, Washington, USA, June 20, 2013.",
                "count": 7,
                "papers": [
                    "A tutorial on X10 and its implementation.",
                    "First steps to compiling Matlab to X10.",
                    "Invasive computing in HPC with X10.",
                    "Achieving load-balancing in power system parallel contingency analysis using X10 programming language.",
                    "X10 at scale.",
                    "Hybrid parallel task placement in X10.",
                    "Java interoperability in managed X10."
                ]
            }
        ]
    },
    {
        "year": "2012",
        "name": "33rd PLDI 2012",
        "info": "Beijing, China",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2012",
                "sub_name": "ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI '12, Beijing, China - June 11 - 16, 2012.",
                "count": 48,
                "papers": [
                    "Compiling a high-level language for GPUs: (via language support for architectures and compilers).",
                    "Adaptive input-aware compilation for graphics engines.",
                    "And then there were none: a stall-free real-time garbage collector for reconfigurable hardware.",
                    "The implicit calculus: a new foundation for generic programming.",
                    "Deterministic parallelism via liquid effects.",
                    "Speculative linearizability.",
                    "Algorithmic profiling.",
                    "Understanding and detecting real-world performance bugs.",
                    "Input-sensitive profiling.",
                    "Language-based control and mitigation of timing channels.",
                    "Diderot: a parallel DSL for image analysis and visualization.",
                    "Synthesising graphics card programs from DSLs.",
                    "Parcae: a system for flexible parallel execution.",
                    "JANUS: exploiting parallelism via hindsight.",
                    "Reagents: expressing and composing fine-grained concurrency.",
                    "Proving acceptability properties of relaxed nondeterministic approximate programs.",
                    "Automated error diagnosis using abductive inference.",
                    "Efficient state merging in symbolic execution.",
                    "Sound and precise analysis of parallel programs through schedule specialization.",
                    "Parallelizing top-down interprocedural analyses.",
                    "Design and implementation of sparse global analyses for C-like languages.",
                    "Fast and precise hybrid type inference for JavaScript.",
                    "Race detection for web applications.",
                    "Engage: a deployment management system.",
                    "Type-directed completion of partial expressions.",
                    "Self-stabilizing Java.",
                    "Type-directed automatic incrementalization.",
                    "Synchronising C/C++ and POWER.",
                    "SuperC: parsing all of C by taming the preprocessor.",
                    "Test-case reduction for C compiler bugs.",
                    "A compiler framework for extracting superword level parallelism.",
                    "Speculative separation for privatization and reductions.",
                    "Dynamic trace-based analysis of vectorization potential of applications.",
                    "Verifying GPU kernels by test amplification.",
                    "RockSalt: better, faster, stronger SFI for the x86.",
                    "Synthesizing software verifiers from proof rules.",
                    "Concurrent data representation synthesis.",
                    "Dynamic synthesis for relaxed memory models.",
                    "Automated synthesis of symbolic instruction encodings from I/O samples.",
                    "A dynamic program analysis to find floating-point accuracy problems.",
                    "Chimera: hybrid program analysis for determinism.",
                    "Static analysis and compiler design for idempotent processing.",
                    "Effective parallelization of loops in the presence of I/O operations.",
                    "Polyhedra scanning revisited.",
                    "Logical inference techniques for loop parallelization.",
                    "Fully automatic and precise detection of thread safety violations.",
                    "Scalable and precise dynamic datarace detection for structured parallelism.",
                    "Multicore acceleration of priority-based schedulers for concurrency bug detection."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2012mspc",
                "sub_name": "Proceedings of the 2012 ACM SIGPLAN workshop on Memory Systems Performance and Correctness: held in conjunction with PLDI '12, Beijing, China, June 16, 2012.",
                "count": 13,
                "papers": [
                    "Can parallel data structures rely on automatic memory managers?",
                    "Identifying optimal multicore cache hierarchies for loop-based parallel programs via reuse distance analysis.",
                    "Can seqlocks get along with programming language memory models?",
                    "Rank idle time prediction driven last-level cache writeback.",
                    "Trace-driven simulation of memory system scheduling in multithread application.",
                    "Parallel memory defragmentation on a GPU.",
                    "Analysis of pure methods using garbage collection.",
                    "Towards region-based memory management for Go.",
                    "A higher order theory of locality.",
                    "Supporting virtual memory in GPGPU without supporting precise exceptions.",
                    "A study towards optimal data layout for GPU computing.",
                    "Design space exploration of memory model for heterogeneous computing.",
                    "Defensive loop tiling for multi-core processor."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2012soap",
                "sub_name": "Proceedings of the ACM SIGPLAN International Workshop on State of the Art in Java Program analysis, SOAP 2012, Beijing, China, June 14, 2012.",
                "count": 8,
                "papers": [
                    "Inter-procedural data-flow analysis with IFDS/IDE and Soot.",
                    "Rethinking Soot for summary-based whole-program analysis.",
                    "Side-effect analysis with fast escape filter.",
                    "Soot-based implementation of a demand-driven reaching definitions analysis.",
                    "Dexpler: converting Android Dalvik bytecode to Jimple for static analysis with Soot.",
                    "Program analysis and transformation for holistic optimization of database applications.",
                    "Collection disjointness analysis.",
                    "InvokeDynamic support in Soot."
                ]
            }
        ]
    },
    {
        "year": "2011",
        "name": "32nd PLDI 2011",
        "info": "San Jose, CA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2011",
                "sub_name": "Proceedings of the 32nd ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2011, San Jose, CA, USA, June 4-8, 2011.",
                "count": 55,
                "papers": [
                    "Commutative set: a language extension for implicit parallel programming.",
                    "The tao of parallelism in algorithms.",
                    "Parallelism orchestration using DoPE: the degree of parallelism executive.",
                    "Data representation synthesis.",
                    "Synthesizing geometry constructions.",
                    "Synthesis of loop-free programs.",
                    "Generalized just-in-time trace compilation using a parallel task farm in a dynamic binary translator.",
                    "Brainy: effective selection of data structures.",
                    "An SSA-based algorithm for optimal speculative code motion under an execution profile.",
                    "Caisson: a hardware description language for secure information flow.",
                    "Steno: automatic optimization of declarative queries.",
                    "Languages as libraries.",
                    "Automatic CPU-GPU communication management and optimization.",
                    "Automatic compilation of MATLAB programs for synergistic execution on heterogeneous processors.",
                    "EnerJ: approximate data types for safe and general low-power computation.",
                    "Understanding POWER multiprocessors.",
                    "Partial-coherence abstractions for relaxed memory models.",
                    "A case for an SC-preserving compiler.",
                    "Probabilistic, modular and scalable inference of typestate specifications.",
                    "Predicate abstraction and CEGAR for higher-order model checking.",
                    "Mostly-automated verification of low-level programs in computational separation logic.",
                    "Toward generating reducible replay logs.",
                    "Higher-order test generation.",
                    "LeakChaser: helping programmers narrow down causes of memory leaks.",
                    "Finding and understanding bugs in C compilers.",
                    "Evaluating value-graph translation validation for LLVM.",
                    "Safe optimisations for shared-memory concurrent programs.",
                    "Spreadsheet table transformations from examples.",
                    "Systematic editing: generating program transformations from an example.",
                    "A security policy oracle: detecting security holes using multiple API implementations.",
                    "Language-independent sandboxing of just-in-time compilation and self-modifying code.",
                    "Cruiser: concurrent heap buffer overflow monitoring using lock-free data structures.",
                    "Isolating and understanding concurrency errors using reconstructed execution fragments.",
                    "Automated atomicity-violation fixing.",
                    "NDSeq: runtime checking for nondeterministic sequential specifications of parallel correctness.",
                    "Garbage collection for monitoring parametric properties.",
                    "LL(*): the foundation of the ANTLR parser generator.",
                    "Cause clue clauses: error localization using maximum satisfiability.",
                    "kb-anonymity: a model for anonymized behaviour-preserving test and debugging data.",
                    "Kremlin: rethinking and rebooting gprof for the multicore age.",
                    "Automatic parallelization via matrix multiplication.",
                    "ALTER: exploiting breakable dependences for parallelization.",
                    "Path-based inductive synthesis for program inversion.",
                    "Directed incremental symbolic execution.",
                    "Mining hot calling contexts in small space.",
                    "Verification of semantic commutativity conditions and inverse operations on linked data structures.",
                    "Exploiting the commutativity lattice.",
                    "Separation logic + superposition calculus = heap theorem prover.",
                    "Precise and compact modular procedure summaries for heap manipulating programs.",
                    "On inter-procedural analysis of programs with lists and data.",
                    "Scaling abstraction refinement via pruning.",
                    "Taming the wildcards: combining definition- and use-site variance.",
                    "Taming wildcards in Java's type system.",
                    "Composable asynchronous events.",
                    "Synchronization via scheduling: techniques for efficiently managing shared state."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2011mspc",
                "sub_name": "Proceedings of the 2011 ACM SIGPLAN workshop on Memory Systems Performance and Correctness: held in conjunction with PLDI '11, San Jose, CA, USA, June 5, 2011.",
                "count": 12,
                "papers": [
                    "There is nothing wrong with out-of-thin-air: compiler optimization and memory models.",
                    "A programming model for deterministic task parallelism.",
                    "Performance implications of fence-based memory models.",
                    "How to fit program footprint curves.",
                    "Extended sequential reasoning for data-race-free programs.",
                    "Data-race exceptions have benefits beyond the memory model.",
                    "The impact of diverse memory architectures on multicore consumer software: an industrial perspective from the video games domain.",
                    "Let there be light!: the future of memory systems is photonics and 3D stacking.",
                    "Minor memory references matter in collaborative caching.",
                    "Garbage collection for multicore NUMA machines.",
                    "Deferred gratification: engineering for high performance garbage collection from the get go.",
                    "Approximating inclusion-based points-to analysis."
                ]
            }
        ]
    },
    {
        "year": "2010",
        "name": "31st PLDI 2010",
        "info": "Toronto, Ontario, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2010",
                "sub_name": "Proceedings of the 2010 ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2010, Toronto, Ontario, Canada, June 5-10, 2010.",
                "count": 42,
                "papers": [
                    "An analysis of the dynamic behavior of JavaScript programs.",
                    "Breadcrumbs: efficient context sensitivity for dynamic bug detection analyses.",
                    "Decoupled lifeguards: enabling path optimizations for dynamic correctness checking tools.",
                    "Jinn: synthesizing dynamic bug detectors for foreign language interfaces.",
                    "Safe programmable speculative parallelism.",
                    "Supporting speculative parallelization in the presence of dynamic data structures.",
                    "Cache topology aware computation mapping for multicores.",
                    "A GPGPU compiler for memory optimization and parallelism management.",
                    "2010 Athena lecture.",
                    "Safe to the last instruction: automated verification of a type-safe operating system.",
                    "Bringing extensibility to verified compilers.",
                    "Ur: statically-typed metaprogramming with type-level record computation.",
                    "Parameterized verification of transactional memories.",
                    "Schism: fragmentation-tolerant real-time garbage collection.",
                    "Detecting inefficiently-used containers to avoid bloat.",
                    "Finding low-utility data structures.",
                    "Evaluating the accuracy of Java profilers.",
                    "Green: a framework for supporting energy-conscious programming using controlled approximation.",
                    "GUESSTIMATE: a programming model for collaborative distributed systems.",
                    "A context-free markup language for semi-structured text.",
                    "Printing floating-point numbers quickly and accurately with integers.",
                    "Adversarial memory for detecting destructive races.",
                    "PACER: proportional detection of data races.",
                    "Lock elision for read-only critical sections in Java.",
                    "Smooth interpretation.",
                    "The reachability-bound problem.",
                    "Resolving and exploiting the k-CFA paradox: illuminating functional vs. object-oriented program analysis.",
                    "Complete functional synthesis.",
                    "Line-up: a complete and automatic linearizability checker.",
                    "MemSAT: checking axiomatic specifications of memory models.",
                    "DRFX: a simple and efficient memory model for concurrent programming languages.",
                    "FlumeJava: easy, efficient data-parallel pipelines.",
                    "Composing parallel software efficiently with lithe.",
                    "Bamboo: a data-centric, object-oriented approach to many-core software.",
                    "Mint: Java multi-stage programming using weak separability.",
                    "Type-preserving compilation of end-to-end verification of security enforcement.",
                    "Inferable object-oriented typed assembly language.",
                    "Mixing type checking and symbolic execution.",
                    "Evaluating iterative optimization across 1000 datasets.",
                    "Software data spreading: leveraging distributed caches to improve single thread performance.",
                    "Z-rays: divide arrays and conquer speed and flexibility.",
                    "Traceable data types for self-adjusting computation."
                ]
            }
        ]
    },
    {
        "year": "2009",
        "name": "30th PLDI 2009",
        "info": "Dublin, Ireland",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2009",
                "sub_name": "Proceedings of the 2009 ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2009, Dublin, Ireland, June 15-21, 2009.",
                "count": 41,
                "papers": [
                    "Dynamic software updates: a VM-centric approach.",
                    "Safe and timely updates to multi-threaded programs.",
                    "CEAL: a C-based language for self-adjusting computation.",
                    "PetaBricks: a language and compiler for algorithmic choice.",
                    "Staged information flow for javascript.",
                    "Laminar: practical fine-grained decentralized information flow control.",
                    "Merlin: specification inference for explicit information flow problems.",
                    "TAJ: effective taint analysis of web applications.",
                    "Lightweight annotations for controlling sharing in concurrent data structures.",
                    "A randomized dynamic program analysis technique for detecting real deadlocks.",
                    "FastTrack: efficient and precise dynamic race detection.",
                    "LiteRace: effective sampling for lightweight data-race detection.",
                    "Progress guarantee for parallel programs via bounded lock-freedom.",
                    "Stretching transactional memory.",
                    "Parallelizing sequential applications on commodity hardware using a low-cost software transactional memory.",
                    "Towards a holistic approach to auto-parallelization: integrating profile-driven parallelism detection and machine-learning based mapping.",
                    "A decision procedure for subset constraints over regular languages.",
                    "Verifiable composition of deterministic grammars.",
                    "Analyzing recursive programs using a fixed-point calculus.",
                    "Program verification using templates over predicate abstraction.",
                    "GC assertions: using the garbage collector to check heap properties.",
                    "SoftBound: highly compatible and complete spatial memory safety for c.",
                    "Implementation of the memory-safe full ANSI-C compiler.",
                    "Error propagation analysis for file systems.",
                    "Sharing classes between families.",
                    "Typed self-representation.",
                    "Type-based data structure verification.",
                    "Verified validation of lazy code motion.",
                    "Proving optimizations correct using parameterized program equivalence.",
                    "An integrated proof language for imperative programs.",
                    "Automatic generation of library bindings using static analysis.",
                    "Snugglebug: a powerful approach to weakest preconditions.",
                    "Control-flow refinement and progress invariants for bound analysis.",
                    "A study of memory management for web-based applications on multicore processors.",
                    "Efficiently and precisely locating memory leaks and bloat.",
                    "Chameleon: adaptive selection of collections.",
                    "Go with the flow: profiling copies to find runtime bloat.",
                    "Programming model for a heterogeneous x86 platform.",
                    "Binary analysis for measurement and attribution of program performance.",
                    "Semantics-aware trace analysis.",
                    "Trace-based just-in-time type specialization for dynamic languages."
                ]
            }
        ]
    },
    {
        "year": "2008",
        "name": "29th PLDI 2008",
        "info": "Tucson, AZ, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2008",
                "sub_name": "Proceedings of the ACM SIGPLAN 2008 Conference on Programming Language Design and Implementation, Tucson, AZ, USA, June 7-13, 2008.",
                "count": 34,
                "papers": [
                    "Checking race freedom via linear programming.",
                    "Race directed random testing of concurrent programs.",
                    "Immix: a mark-region garbage collector with space efficiency, fast collection, and mutator performance.",
                    "A study of concurrent real-time garbage collectors.",
                    "Conditional correlation analysis for safe region-based memory management.",
                    "Automatic volume management for programmable microfluidics.",
                    "Foundations of the C++ concurrency memory model.",
                    "Expressive and safe static reflection with MorphJ.",
                    "Iterative optimization in the polyhedral model: part ii, multidimensional time.",
                    "A practical automatic polyhedral parallelizer and locality optimizer.",
                    "Orchestrating the execution of stream programs on multicore platforms.",
                    "Deriving linearizable fine-grained concurrent objects.",
                    "Sketching concurrent data structures.",
                    "SharC: checking data sharing strategies for multithreaded C.",
                    "Liquid types.",
                    "Certifying low-level programs with hardware interrupts and preemptive threads.",
                    "Type-preserving compilation for large-scale optimizing object-oriented compilers.",
                    "Quantitative information flow as network flow capacity.",
                    "Grammar-based whitebox fuzzing.",
                    "Register allocation by puzzle solving.",
                    "Copy coalescing by graph recoloring.",
                    "Efficient program execution indexing.",
                    "Bootstrapping: a technique for scalable flow and context-sensitive pointer alias analysis.",
                    "Explaining failures of program analyses.",
                    "Sound, complete and scalable path-sensitive analysis.",
                    "Program analysis as constraint solving.",
                    "Velodrome: a sound and complete dynamic atomicity checker for multithreaded programs.",
                    "Inferring locks for atomic sections.",
                    "Dataflow analysis for concurrent programs using datarace detection.",
                    "XMem: type-safe, transparent, shared memory for cross-runtime communication and coordination.",
                    "Discovering properties about arrays in simple programs.",
                    "Full functional verification of linked data structures.",
                    "Fair stateless model checking.",
                    "Model checking transactional memories."
                ]
            }
        ]
    },
    {
        "year": "2007",
        "name": "28th PLDI 2007",
        "info": "San Diego, California, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2007",
                "sub_name": "Proceedings of the ACM SIGPLAN 2007 Conference on Programming Language Design and Implementation, San Diego, California, USA, June 10-13, 2007.",
                "count": 45,
                "papers": [
                    "Exterminator: automatically correcting memory errors with high probability.",
                    "CheckFence: checking consistency of concurrent data types on relaxed memory models.",
                    "Automatically classifying benign and harmful data racesallusing replay analysis.",
                    "Sound and precise analysis of web applications for injection vulnerabilities.",
                    "Fault-tolerant typed assembly language.",
                    "A certified type-preserving compiler from lambda calculus to assembly language.",
                    "Certified self-modifying code.",
                    "Enforcing isolation and ordering in STM.",
                    "Valgrind: a framework for heavyweight dynamic binary instrumentation.",
                    "Improved error reporting for software that uses black-box components.",
                    "Thin slicing.",
                    "Static specification inference using predicate mining.",
                    "Automatic inference of optimizer flow functions from semantic meanings.",
                    "Automatic inversion generates divide-and-conquer parallel programs.",
                    "EXOCHI: architecture and programming environment for a heterogeneous multi-core multithreaded system.",
                    "Sketching stencils.",
                    "Mace: language support for building distributed systems.",
                    "Combining events and threads for scalable network services implementation and evaluation of monadic, application-level concurrency primitives.",
                    "Reliable and efficient programming abstractions for wireless sensor networks.",
                    "Optimistic parallelism requires abstractions.",
                    "Software behavior oriented parallelization.",
                    "Effective automatic parallelization of stencil computations.",
                    "Goldilocks: a race and transaction-aware java runtime.",
                    "Shape analysis with inductive recursion synthesis.",
                    "Thread-modular shape analysis.",
                    "Making context-sensitive points-to analysis with heap cloning practical for the real world.",
                    "The ant and the grasshopper: fast and accurate pointer analysis for millions of lines of code.",
                    "Path invariants.",
                    "DITTO: automatic incrementalization of data structure invariant checks (in Java).",
                    "Proving thread termination.",
                    "Regularly annotated set constraints.",
                    "Efficient static analysis of XML paths and types.",
                    "The ExoVM system for automatic VM and application reduction.",
                    "Offline compression for on-chip ram.",
                    "Online optimizations driven by hardware performance monitoring.",
                    "UCC: update-conscious compilation for energy efficiency in wireless sensor networks.",
                    "Profile-driven energy reduction in network-on-chips.",
                    "Parameterized tiled loops for free.",
                    "Towards locating execution omission errors.",
                    "Searching for type-error messages.",
                    "Static error detection using semantic inconsistency inference.",
                    "Iterative context bounding for systematic testing of multithreaded programs.",
                    "CGCExplorer: a semi-automated search procedure for provably correct concurrent collectors.",
                    "A general framework for certifying garbage collectors and their mutators.",
                    "Practical memory leak detection using guarded value-flow analysis."
                ]
            }
        ]
    },
    {
        "year": "2006",
        "name": "27th PLDI 2006",
        "info": "Ottawa, Ontario, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2006",
                "sub_name": "Proceedings of the ACM SIGPLAN 2006 Conference on Programming Language Design and Implementation, Ottawa, Ontario, Canada, June 11-14, 2006.",
                "count": 36,
                "papers": [
                    "The Atomos transactional programming language.",
                    "Optimizing memory transactions.",
                    "Compiler and runtime support for efficient software transactional memory.",
                    "Better extensibility through modular syntax.",
                    "Fast and flexible instruction selection with on-demand tree-parsing automata.",
                    "A framework for unrestricted whole-program optimization.",
                    "Practical dynamic software updating for C.",
                    "Artemis: practical runtime monitoring of applications for execution anomalies.",
                    "An experimental analysis of self-adjusting computation.",
                    "Shared memory programming for large scale machines.",
                    "Optimizing data permutations for SIMD devices.",
                    "Auto-vectorization of interleaved data for SIMD.",
                    "SAFECode: enforcing alias analysis for weakly typed languages.",
                    "DieHard: probabilistic memory safety for unsafe languages.",
                    "Pruning dynamic slices with confidence.",
                    "Context-sensitive domain-independent algorithm composition and selection.",
                    "Reducing NoC energy consumption through compiler-directed channel voltage scaling.",
                    "A global progressive register allocator.",
                    "Profile-based global live-range splitting.",
                    "Automatic instruction scheduler retargeting by reverse-engineering.",
                    "Online performance auditing: using hot optimizations without getting burned.",
                    "Cache-conscious coallocation of hot data streams.",
                    "Accurate, efficient, and adaptive calling context profiling.",
                    "Algorithm specialization in generic programming: challenges of constrained generics in C++.",
                    "Eventrons: a safe programming construct for high-frequency hard real-time applications.",
                    "Continuations and transducer composition.",
                    "Effective static race detection for Java.",
                    "LOCKSMITH: context-sensitive correlation analysis for race detection.",
                    "Profile-guided proactive garbage collection for locality optimization.",
                    "Correctness-preserving derivation of concurrent garbage collection algorithms.",
                    "The Compressor: concurrent, incremental, and parallel compaction.",
                    "Free-Me: a static analysis for automatic individual object reclamation.",
                    "Combining abstract interpreters.",
                    "Refinement-based context-sensitive points-to analysis for Java.",
                    "Modular verification of assembly code with stack-based control abstractions.",
                    "Termination proofs for systems code."
                ]
            }
        ]
    },
    {
        "year": "2005",
        "name": "26th PLDI 2005",
        "info": "Chicago, IL, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2005",
                "sub_name": "Proceedings of the ACM SIGPLAN 2005 Conference on Programming Language Design and Implementation, Chicago, IL, USA, June 12-15, 2005.",
                "count": 29,
                "papers": [
                    "A serializability violation detector for shared-memory server programs.",
                    "Scalable statistical bug isolation.",
                    "VYRD: verifYing concurrent programs by runtime refinement-violation detection.",
                    "Path slicing.",
                    "Jungloid mining: helping to navigate the API jungle.",
                    "Checking type safety of foreign function calls.",
                    "Essential language support for generic programming.",
                    "Semantic type qualifiers.",
                    "Permission-based ownership: encapsulating state in higher-order typed languages.",
                    "Code placement for improving dynamic branch prediction accuracy.",
                    "Optimising aspectJ.",
                    "Automatic pool allocation: improving performance by controlling data structure layout in the heap.",
                    "Garbage collection without paging.",
                    "Register allocation for software pipelined multi-dimensional loops.",
                    "Differential register allocation.",
                    "Demystifying on-the-fly spill code.",
                    "Pin: building customized program analysis tools with dynamic instrumentation.",
                    "TraceBack: first fault diagnosis by reconstruction of distributed control flow.",
                    "DART: directed automated random testing.",
                    "Shangri-La: achieving high performance from compiled network applications while enabling ease of programming.",
                    "Automatically partitioning packet processing applications for pipelined architectures.",
                    "Programming ad-hoc networks of mobile and resource-constrained devices.",
                    "Threads cannot be implemented as a library.",
                    "Mitosis compiler: an infrastructure for speculative threading based on pre-computation slices.",
                    "The transactional manifesto: software engineering and non-blocking synchronization.",
                    "Programming by sketching for bit-streaming programs.",
                    "PADS: a domain-specific language for processing ad hoc data.",
                    "Composing security policies with polymer.",
                    "Formal loop merging for signal transforms."
                ]
            }
        ]
    },
    {
        "year": "2004",
        "name": "25th PLDI 2004",
        "info": "Washington, DC, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2004",
                "sub_name": "Proceedings of the ACM SIGPLAN 2004 Conference on Programming Language Design and Implementation 2004, Washington, DC, USA, June 9-11, 2004.",
                "count": 26,
                "papers": [
                    "Race checking by context inference.",
                    "KISS: keep it simple and sequential.",
                    "Verifying safety properties using separation and heterogeneous abstractions.",
                    "Scalable lock-free dynamic memory allocation.",
                    "Kill-safe synchronization abstractions.",
                    "Min-cut program decomposition for thread-level speculation.",
                    "A cost-driven compilation framework for speculative parallelization of sequential programs.",
                    "Vectorization for SIMD architectures with alignment constraints.",
                    "Cost effective dynamic program slicing.",
                    "Dynamic path-based software watermarking.",
                    "Parametric analysis for adaptive computation offloading.",
                    "Cloning-based context-sensitive pointer alias analysis using binary decision diagrams.",
                    "Symbolic pointer analysis revisited.",
                    "Jedd: a BDD-based relational extension of Java.",
                    "Social processes and proofs of theorems and programs, revisited.",
                    "Fast searches for effective optimization phase sequences.",
                    "Inducing heuristics to decide whether to schedule.",
                    "The liberty structural specification language: a high-level modeling language for component reuse.",
                    "The set constraint/CFL reachability connection in practice.",
                    "Parametric regular path queries.",
                    "Precise and efficient static array bound checking for large embedded C programs.",
                    "Region inference for an object-oriented language.",
                    "Array regrouping and structure splitting using whole-program reference affinity.",
                    "Prefetch inection based on hardware monitoring and object metadata.",
                    "A generalized algorithm for graph-coloring register allocation.",
                    "Balancing register allocation across threads for a multithreaded network processor."
                ]
            }
        ]
    },
    {
        "year": "2003",
        "name": "24th PLDI 2003",
        "info": "San Diego, California, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2003",
                "sub_name": "Proceedings of the ACM SIGPLAN 2003 Conference on Programming Language Design and Implementation 2003, San Diego, California, USA, June 9-11, 2003.",
                "count": 28,
                "papers": [
                    "The nesC language: A holistic approach to networked embedded systems.",
                    "Linear analysis and optimization of stream programs.",
                    "Taming the IXP network processor.",
                    "The design, implementation, and evaluation of a compiler algorithm for CPU energy reduction.",
                    "Compile-time dynamic voltage scaling settings: opportunities and limits.",
                    "A comparison of empirical and model-driven optimization.",
                    "Meta optimization: improving compiler heuristics with machine learning.",
                    "Compile-time composition of run-time data and iteration reorderings.",
                    "Points-to analysis using BDDs.",
                    "Static conflict analysis for multi-threaded object-oriented programs.",
                    "Checking and inferring local non-aliasing.",
                    "Bug isolation via remote program sampling.",
                    "CSSV: towards a realistic tool for statically detecting all buffer overflows in C.",
                    "A practical flow-sensitive and context-sensitive C and C++ memory leak detector.",
                    "Debugging temporal specifications with concept analysis.",
                    "A static analyzer for large safety-critical software.",
                    "A provably sound TAL for back-end optimization.",
                    "Automatically proving the correctness of compiler optimizations.",
                    "CCured in the real world.",
                    "Predicting whole-program locality through reuse distance analysis.",
                    "Static array storage optimization in MATLAB.",
                    "Stride prefetching by dynamically inspecting objects.",
                    "Optimizing indirect branch prediction accuracy in virtual machine interpreters.",
                    "A compiler framework for speculative analysis and optimizations.",
                    "Region-based hierarchical operation partitioning for multicluster processors.",
                    "A region-based compilation technique for a Java just-in-time compiler.",
                    "Ownership types for safe region-based memory management in real-time Java.",
                    "A type and effect system for atomicity."
                ]
            }
        ]
    },
    {
        "year": "2002",
        "name": "23rd PLDI 2002",
        "info": "Berlin, Germany",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2002",
                "sub_name": "Proceedings of the 2002 ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), Berlin, Germany, June 17-19, 2002.",
                "count": 28,
                "papers": [
                    "Flow-Sensitive Type Qualifiers.",
                    "Adoption and Focus: Practical Linear Types for Imperative Programming.",
                    "Fast Copy Coalescing and Live-Range Identification.",
                    "Preference-Directed Graph Coloring.",
                    "A Sparse Algorithm for Predicated Global Value Numbering.",
                    "ESP: Path-Sensitive Program Verification in Polynomial Time.",
                    "A System and Language for Building System-Specific, Static Analyses.",
                    "Deriving Specialized Program Analyses for Certifying Component-Client Conformance.",
                    "Profile-Guided Code Compression.",
                    "Profile-Directed Optimization of Event-Based Programs.",
                    "Post-Pass Binary Adaptation for Software-Based Speculative Precomputation.",
                    "A Parallel, Incremental and Concurrent GC for Servers.",
                    "Combining Region Inference and Garbage Collection.",
                    "Beltway: Getting Around Garbage Collection Gridlock.",
                    "A Compiler Approach to Fast Hardware Design Space Exploration in FPGA-based Systems.",
                    "Space-Time Trade-Off Optimization for a Class of Electronic Structure Calculations.",
                    "Effective Sign Extension Elimination.",
                    "Dynamic Hot Data Stream Prefetching for General-Purpose Programs.",
                    "Efficient Discovery of Regular Stride Patterns in Irregular Programs.",
                    "Static Load Classification for Improving the Value Predictability of Data-Cache Misses.",
                    "Extended Static Checking for Java.",
                    "Using Data Groups to Specify and Check Side Effects.",
                    "Efficient and Precise Datarace Detection for Multithreaded Object-Oriented Programs.",
                    "Maya: Multiple-Dispatch Syntax Extension in Java.",
                    "Region-Based Memory Management in Cyclone.",
                    "MaJIC: Compiling MATLAB for Speed and Responsiveness.",
                    "Denali: A Goal-directed Superoptimizer.",
                    "The Embedded Machine: Predictable, Portable Real-Time Code."
                ]
            }
        ]
    },
    {
        "year": "2001",
        "name": "22nd PLDI 2001",
        "info": "Snowbird, Utah, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2001",
                "sub_name": "Proceedings of the 2001 ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), Snowbird, Utah, USA, June 20-22, 2001.",
                "count": 30,
                "papers": [
                    "Design and Implementation of Generics for the .NET Common Language Runtime.",
                    "Dynamic Software Updating.",
                    "Demand-Driven Pointer Analysis.",
                    "Incrementalized Pointer and Escape Analysis.",
                    "On the Importance of Points-to Analysis and Other Memory Disambiguation Methods for C Programs.",
                    "Enforcing High-Level Protocols in Low-Level Software.",
                    "Language Support for Regions.",
                    "Principled Scavenging.",
                    "Java without the Coffee Breaks: A Nonintrusive Multiprocessor Garbage Collector.",
                    "Heap Profiling for Space-Efficient Java.",
                    "Composing High-Performance Memory Allocators.",
                    "A Parallel, Real-Time Garbage Collector.",
                    "SafeTSA: A Type Safe and Referentially Secure Mobile-Code Representation Based on Static Single Assignment Form.",
                    "Bytecode Compression via Profiled Grammar Rewriting.",
                    "Using Annotation to Reduce Dynamic Optimization Time.",
                    "A Framework for Reducing the Cost of Instrumented Code.",
                    "Timestamped Whole Program Path Representation and its Applications.",
                    "Efficient Representations and Abstractions for Quantifying and Exploiting Data Reference Locality.",
                    "Automatic Predicate Abstraction of C Programs.",
                    "Related Field Analysis.",
                    "The Pointer Assertion Logic Engine.",
                    "A Unified Framework for Schedule and Storage Optimization.",
                    "Optimal Spilling for CISC Machines with Few Registers.",
                    "Ultra-fast Aliasing Analysis using CLA: A Million Lines of C Code in a Second.",
                    "Dynamic Variables.",
                    "Asynchronous Exceptions in Haskell.",
                    "Exact Analysis of the Cache Behavior of Nested Loops.",
                    "SPL: A Language and Compiler for DSP Algorithms.",
                    "ESP: A Language for Programmable Devices.",
                    "Facile: A Language and Compiler for High-Performance Processor Simulators."
                ]
            },
            {
                "sub_name_abbr": "conf/pldi/2001om",
                "sub_name": "Proceedings of the 2001 ACM SIGPLAN Workshop on Optimization of Middleware and Distributed Systems, OM '01, Snow Bird, Utah, USA.",
                "count": 30,
                "papers": [
                    "An Accurate Instruction-Level Energy Consumption Model for Embedded RISC Processors.",
                    "Hybrid Run-time Power Management Technique for Real-time Embedded System with Voltage Scalable Processor.",
                    "Power-Aware Design Synthesis Techniques for Distributed Real-Time Systems.",
                    "Combining Global Code and Data Compaction.",
                    "Register Allocation for Banked Register File.",
                    "Loop Transformations for Architectures with Partitioned Register Banks.",
                    "ENSEMBLE: A Communication Layer for Embedded Multi-Processor Systems.",
                    "Embedded Control Systems Development with Giotto.",
                    "A tool for simulation and fast prototyping of embedded control systems.",
                    "MILAN: A Model Based Integrated Simulation Framework for Design of Embedded Systems.",
                    "Parametric Timing Analysis.",
                    "Interval-Based Analysis of Software Processes.",
                    "Automatic Accurate Live Memory Analysis for Garbage-Collected Languages.",
                    "Generating Decision Trees for Decoding Binaries.",
                    "Dealing with Hardware in Embedded Software: A General Framework Based on the Devil Language.",
                    "Morphable Cache Architectures: Potential Benefits.",
                    "Software Pipelining Irregular Loops On the TMS320C6000 VLIW DSP Architecture.",
                    "ILP-based Instruction Scheduling for IA-64.",
                    "C Compiler Design for an Industrial Network Processor.",
                    "A Dynamic Programming Approach to Optimal Integrated Code Generation.",
                    "Stuck in the Middle: Challenges and Trends in Optimizing Middleware.",
                    "Optimizing Component Interaction.",
                    "Using Cohort Scheduling to Enhance Server Performance (Extended Abstract).",
                    "Middleware For Building Adaptive Systems Via Configuration.",
                    "Designing and Optimizing a Scalable CORBA Notification Service.",
                    "Issues in the Design of Adaptive Middleware Load Balancing.",
                    "Evaluating and Optimizing Thread Pool Strategies for Real-Time CORBA.",
                    "Designing an Efficient and Scalable Server-side Asynchrony Model for CORBA.",
                    "Integration of QoS-Enabled Distributed Object Computing Middleware for Developing Next-Generation Distributed Application.",
                    "Language and Compiler Support for Adaptive Distributed Applications."
                ]
            }
        ]
    },
    {
        "year": "2000",
        "name": "21st PLDI 2000",
        "info": "Vancouver, British Columbia, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2000",
                "sub_name": "Proceedings of the 2000 ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), Vancouver, Britith Columbia, Canada, June 18-21, 2000.",
                "count": 30,
                "papers": [
                    "Dynamo: a transparent dynamic optimization system.",
                    "Practicing JUDO: Java under dynamic optimizations.",
                    "Split-stream dictionary program compression.",
                    "Unification-based pointer analysis with directional assignments.",
                    "Off-line variable substitution for scaling points-to analysis.",
                    "Modular interprocedural pointer analysis using access paths: design, implementation, and evaluation.",
                    "Safety checking of machine code.",
                    "Translation validation for an optimizing compiler.",
                    "A certifying compiler for Java.",
                    "Bitwidth analysis with application to silicon compilation.",
                    "Optimal instruction scheduling using integer programming.",
                    "Improved spill code generation for software pipelined loops.",
                    "Exploiting superword level parallelism with multimedia instruction sets.",
                    "Compiler analysis of irregular memory accesses.",
                    "Transforming loops to recursion for multi-level memory hierarchies.",
                    "Symbolic bounds analysis of pointers, array indices, and accessed memory regions.",
                    "A framework for interprocedural optimization in the presence of dynamic class loading.",
                    "Effective synchronization removal for Java.",
                    "Type-based race detection for Java.",
                    "On loops, dominators, and dominance frontier.",
                    "Functional reactive programming from first principles.",
                    "Scalable context-sensitive flow analysis using instantiation constraints.",
                    "Contaminated garbage collection.",
                    "A generational on-the-fly garbage collector for Java.",
                    "A single intermediate language that supports multiple implementations of exceptions.",
                    "Efficient algorithms for bidirectional debugging.",
                    "Caching function calls using precise dependencies.",
                    "ABCD: eliminating array bounds checks on demand.",
                    "Field analysis: getting useful and low-cost interprocedural information.",
                    "An automatic object inlining optimization and its evaluation."
                ]
            }
        ]
    },
    {
        "year": "1999",
        "name": "20th PLDI 1999",
        "info": "Atlanta, Georgia, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1999",
                "sub_name": "Proceedings of the 1999 ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), Atlanta, Georgia, USA, May 1-4, 1999.",
                "count": 26,
                "papers": [
                    "Cache-Conscious Structure Layout.",
                    "Cache-Conscious Structure Definition.",
                    "A Semantics for Imprecise Exceptions.",
                    "The Design of a Class Mechanism for Moby.",
                    "What is a Recursive Module?",
                    "Load-Reuse Analysis: Design and Evaluation.",
                    "Pointer Analysis for Multithreaded Programs.",
                    "Pointer Analysis for Programs with Structures and Casting.",
                    "On Bounding Time and Space for Multiprocessor Garbage Collection.",
                    "Support for Garbage Collection at Every Instruction in a Java Compiler.",
                    "Storage Assignment Optimizations to Generate Compact and Efficient Code on Embedded DSPs.",
                    "Enhanced Code Compression for Embedded RISC Processors.",
                    "Using Node Merging to Enhance Graph Coloring.",
                    "Control CPR: A Branch Height Reduction Optimization for EPIC Architectures.",
                    "A Fast Fourier Transform Compiler.",
                    "A New Framework for Debugging Globally Optimized Code.",
                    "A Theory of Type Qualifiers.",
                    "Static Single Assignment Form for machine Code.",
                    "New Tiling Techniques to Improve Cache Temporal Locality.",
                    "Improving Cache Performance in Dynamic Applications through Data and Computation Reorganization at Run Time.",
                    "Automatic Inference of Models for Statistical Code Compression.",
                    "Compressing Java Class Files.",
                    "Whole Program Paths.",
                    "Finite-Static Code Generation.",
                    "Efficient Incremental Run-Time Specialization for Free.",
                    "An Evaluation of Staged Run-Time Optimizations in DyC."
                ]
            }
        ]
    },
    {
        "year": "1998",
        "name": "19th PLDI 1998",
        "info": "Montreal, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1998",
                "sub_name": "Proceedings of the ACM SIGPLAN '98 Conference on Programming Language Design and Implementation (PLDI), Montreal, Canada, June 17-19, 1998.",
                "count": 31,
                "papers": [
                    "Complete Removal of Redundant Computations.",
                    "A New Algorithm for Scalar Register Promotion based on SSA Form.",
                    "Register Promotion by Partial Redundancy Elimination of Loads and Stores.",
                    "Data Transformations for Eliminating Conflict Misses.",
                    "The Implementation and Evaluation of Fusion and Contraction in Array Languages.",
                    "Simplification of Array Access Patterns for Compiler Optimizations.",
                    "Improving Data-flow Analysis with Path Profiles.",
                    "Partial Online Cycle Elimination in Inclusion Constraint Graphs.",
                    "Using Static Single Assignment Form to Improve Flow-Insensitive Pointer Analysis.",
                    "Type-Based Alias Analysis.",
                    "Exploiting Idle Floating-Point Resources for Integer Execution.",
                    "Improving Performance by Branch Reordering.",
                    "Quality and Speed in Linear-scan Register Allocation.",
                    "An Implementation for Complete, Asynchronous, Distributed Garbage Collection.",
                    "Generational Stack Collection and Profile-Driven Pretenuring.",
                    "Proper Tail Recursion and Space Efficiency.",
                    "Using Integer Sets for Data-Parallel Program Analysis and Optimization.",
                    "Communication Optimizations for Parallel C Programs.",
                    "The Implementation of the Cilk-5 Multithreaded Language.",
                    "Run-time Code Generation and Modal-ML.",
                    "Units: Cool Modules for HOT Languages.",
                    "Eliminating Array Bound Checking Through Dependent Types.",
                    "Thin Locks: Featherweight Synchronization for Java.",
                    "Garbage Collection and Local Variable Type-Precision and Liveness in Java Virtual Machines.",
                    "Fast, Effective Code Generation in a Just-In-Time Java Compiler.",
                    "Optimizing Direct-threaded Code by Selective Inlining.",
                    "Scalable Cross-Module Optimization.",
                    "Memory Management with Explicit Regions.",
                    "A Study of Dead Data Members in C++ Applications.",
                    "The Design and Implementation of a Certifying Compiler.",
                    "Automatically Closing Open Reactive Programs."
                ]
            }
        ]
    },
    {
        "year": "1997",
        "name": "18th PLDI 1997",
        "info": "Las Vegas, Nevada, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1997",
                "sub_name": "Proceedings of the ACM SIGPLAN '97 Conference on Programming Language Design and Implementation (PLDI), Las Vegas, Nevada, USA, June 15-18, 1997.",
                "count": 31,
                "papers": [
                    "Simple Translation of Goal-Directed Evaluation.",
                    "Automatic Inline Allocation of Objects.",
                    "A Member Lookup Algorithm for C++.",
                    "Incremental Analysis of real Programming Languages.",
                    "Flick: A Flexible, Optimizing IDL Compiler.",
                    "Reverse Interpretation + Mutation Analysis = Automatic Retargeting.",
                    "Dynamic Feedback: An Effective Technique for Adaptive Computing.",
                    "Exploiting Hardware Performance Counters with Flow and Context Sensitive Profiling.",
                    "Generational Garbage Collection and the Radioactive Decay Model.",
                    "tcc: A System for Fast, Flexible, and High-level Dynamic Code Generation.",
                    "Interprocedural Dataflow Analysis in an Executable Optimizer.",
                    "Aggressive Inlining.",
                    "Interprocedural Conditional Branch Elimination.",
                    "Partial Dead Code Elimination using Slicing Transformations.",
                    "Efficient Procedure Mapping Using Cache Line Coloring.",
                    "Near-optimal Intraprocedural Branch Alignment.",
                    "Efficient Formulation for Optimal Modulo Schedulers.",
                    "Module-Sensitive Program Specialisation.",
                    "Two for the Price of One: Composing Partial Evaluation and Compilation.",
                    "Automatic Verification of Pointer Programs using Monadic Second-Order Logic.",
                    "Componential Set-Based Analysis.",
                    "Program Analysis Using Binary Relations.",
                    "Linear-time Subtransitive Control Flow Analysis.",
                    "A New Algorithm for Partial Redundancy Elimination based on SSA Form.",
                    "Spill Code Minimization via Interference Region Spilling.",
                    "Call-Cost Directed Register Allocation.",
                    "Register Promotion in C Programs.",
                    "Fine-grain Multithreading with Minimal Compiler Support - A Cost Effective Approach to Implementing Efficient Multithreading Languages.",
                    "Data Distribution Support on Distributed Shared Memory Multiprocessors.",
                    "Data-centric Multi-level Blocking.",
                    "Code Compression."
                ]
            }
        ]
    },
    {
        "year": "1996",
        "name": "17th PLDI 1996",
        "info": "Philadephia, Pennsylvania, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1996",
                "sub_name": "Proceedings of the ACM SIGPLAN'96 Conference on Programming Language Design and Implementation (PLDI), Philadephia, Pennsylvania, USA, May 21-24, 1996.",
                "count": 28,
                "papers": [
                    "Software Pipelining Showdown: Optimal vs. Heuristic Methods in a Production Compiler.",
                    "A Reduced Multipipeline Machine Description that Preserves Scheduling Constraints.",
                    "Static Debugging: Browsing the Web of Program Invariants.",
                    "Source-Level Debugging of Scalar Optimized Code.",
                    "Static Detection of Dynamic Memory Errors.",
                    "Commutativity Analysis: A New Analysis Framework for Parallelizing Compilers.",
                    "Global Communication Analysis and Optimization.",
                    "GUM: A Portable Parallel Implementation of Haskell.",
                    "Simple Garbage-Collector-Safety.",
                    "Representing Control in the Presence of One-Shot Continuations.",
                    "Printing Floating-Point Numbers Quickly and Accurately.",
                    "Practical Program Analysis Using General Purpose Logic Programming Systems - A Case Study.",
                    "Efficient and Language-Independent Mobile Programs.",
                    "Optimizing ML with Run-Time Code Generation.",
                    "Fast, Effective Dynamic Compilation.",
                    "VCODE: a Retargetable, Extensible, Very Fast Dynamic Code Generation System.",
                    "Simple Objects for Standard ML.",
                    "TIL: A Type-Directed Optimizing Compiler for ML.",
                    "Flow-directed Inlining.",
                    "Realistic Compilation by Partial Evaluation.",
                    "Data Specialization.",
                    "Relocating Machine Instructions by Currying.",
                    "Teapot: Language Support for Writing Memory Coherence Protocols.",
                    "Target-Sensitive Construction of Diagnostic Programs for Procedure Calling Sequence Generators.",
                    "Replay For Concurrent Non-Deterministic Shared Memory Applications.",
                    "Data Flow Frequency Analysis.",
                    "A New Framework for Exhaustive and Incremental Data Flow Analysis Using DJ Graphs.",
                    "Generalized Dominance and Control Dependence."
                ]
            }
        ]
    },
    {
        "year": "1995",
        "name": "16th PLDI 1995",
        "info": "La Jolla, California, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1995",
                "sub_name": "Proceedings of the ACM SIGPLAN'95 Conference on Programming Language Design and Implementation (PLDI), La Jolla, California, USA, June 18-21, 1995.",
                "count": 28,
                "papers": [
                    "Efficient Context-Sensitive Pointer Analysis for C Programs.",
                    "Context-Insensitive Alias Analysis Reconsidered.",
                    "Flow-Sensitive Interprocedural Constant Propagation.",
                    "APT: A Data Structure for Optimal Control Dependence Computation.",
                    "Efficient Building and Placing of Gating Functions.",
                    "Avoiding Conditional Branches by Code Replication.",
                    "Accurate Static Branch Prediction by Value Range Propagation.",
                    "Corpus-Based Static Branch Prediction.",
                    "Selective Specialization for Object-Oriented Languages.",
                    "Simple and Effective Link-Time Optimization of Modula-3 Programs.",
                    "A Type-Based Compiler for Standard ML.",
                    "Register Allocation Using Lazy Saves, Eager Restores, and Greedy Shuffling.",
                    "Scheduling and Mapping: Software Pipelining in the Presence of Structural Hazards.",
                    "Improving Balanced Scheduling with Compiler Optimizations that Increase Instruction-Level Parallelism.",
                    "Implementation of the Data-Flow Synchronous Language SIGNAL.",
                    "Better Static Memory Management: Improving Region-Based Analysis of Higher-Order Languages.",
                    "Storage Assignment to Decrease Code Size.",
                    "Optimizing Parallel Programs with Explicit Synchronization.",
                    "Unifying Data and Control Transformations for Distributed Shared Memory Machines.",
                    "The LRPD Test: Speculative Run-Time Parallelization of Loops with Privatization and Reduction Parallelization.",
                    "The Power of Assignment Motion.",
                    "Global Code Motion / Global Value Mumbering.",
                    "Interprocedural Partial Redundancy Elimination and its Application to Distributed Memory Compilation.",
                    "Elimination of Redundant Array Subscript Range Checks.",
                    "Tile Size Selection Using Cache Organization and Data Layout.",
                    "EEL: Machine-Independent Executable Editing.",
                    "Garbage Collection Using a Dynamic Threatening Boundary.",
                    "Stack Caching for Interpreters."
                ]
            }
        ]
    },
    {
        "year": "1994",
        "name": "15th PLDI 1994",
        "info": "Orlando, Florida, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1994",
                "sub_name": "Proceedings of the ACM SIGPLAN'94 Conference on Programming Language Design and Implementation (PLDI), Orlando, Florida, USA, June 20-24, 1994.",
                "count": 30,
                "papers": [
                    "Is Continuation-Passing Useful for Data Flow Analysis?",
                    "Separate Compilation for Standard ML.",
                    "Lazy Functional State Threads.",
                    "VLIW Compilation Techniques in a Superscalar Environment.",
                    "Link-Time Optimization of Address Calculation on a 64-bit Architecture.",
                    "Division by Invariant Integers using Multiplication.",
                    "Precise Compile-Time Performance Prediction for Superscalar-Based Computers.",
                    "Accurate Static Estimators for Program Optimization.",
                    "Improving Semi-static Branch Prediction by Code Replication.",
                    "GIVE-N-TAKE - A Balanced Code Placement Framework.",
                    "Counting Solutions to Presburger Formulas: How and Why.",
                    "Parallelizing Complex Scans and Reductions.",
                    "Partial Dead Code Elimination.",
                    "Effective Partial Redundancy Elimination.",
                    "The Program Structure Tree: Computing Control Regions in Linear Time.",
                    "Memory Access Coalescing: A technique for Eliminating Redundant memory Accesses.",
                    "ATOM - A System for Building Customized Program Analysis Tools.",
                    "Cache Performance of Garbage-Collected Programs.",
                    "A General Data Dependence Test for Dynamic, Pointer-Based Data Structures.",
                    "Interprocedural May-Alias Analysis for Pointers: Beyond k-limiting.",
                    "Context-Sensitive Interprocedural Points-to Analysis in the Presence of Function Pointers.",
                    "Zero-cost Range Splitting.",
                    "register Allocation over the Program Dependence Graph.",
                    "Debugging of Globally Optimized Programs Using Data Flow Analysis.",
                    "Efficient Detection of All Pointer and Array Access Errors.",
                    "On Slicing Programs with Jump Statements.",
                    "Optimal Tracing and Incremental Reexecution for Debugging Long-Running Programs.",
                    "Optimizing Dynamically-Dispatched Calls with Run-Time Type Feedback.",
                    "Type Analysis of Prolog Using Type Graphs.",
                    "Backtracking without Trailing in CLP(RLin)."
                ]
            }
        ]
    },
    {
        "year": "1993",
        "name": "14th PLDI 1993",
        "info": "Albuquerque, New Mexico, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1993",
                "sub_name": "Proceedings of the ACM SIGPLAN'93 Conference on Programming Language Design and Implementation (PLDI), Albuquerque, New Mexico, USA, June 23-25, 1993.",
                "count": 29,
                "papers": [
                    "Practical Data Breakpoints: Design and Implementation.",
                    "Detection and Recovery of Endangered Variables Caused by Instruction Scheduling.",
                    "Isolation and Analysis of Optimization Errors.",
                    "Efficient Accomodation of May-Alias Information in SSA Form.",
                    "Abstract Debugging of Higher-Order Imperative Languages.",
                    "Interprocedural Side Effect Analysis With Pointer Aliasing.",
                    "A Practical Data Flow Framework for Array Reference Analysis and its Use in Optimizations.",
                    "Dependence-Based Program Analysis.",
                    "Interprocedural Constant Propagation: A Study of Jump Function Implementations.",
                    "Orchestrating Interactions Among Parallel Computations.",
                    "Global Optimizations for Parallelism and Locality on Scalable Parallel Machines.",
                    "Communication Optimization and Code Generation for Distributed Memory Machines.",
                    "First-Class Data-Type Representations in SchemeXerox.",
                    "Handling Control.",
                    "Programmable Syntax Macros.",
                    "Compiling Real-Time Programs into Schedulable Code.",
                    "Improving the Cache Locality of Memory Allocation.",
                    "Using Lifetime Predictors to Improve Memory Allocation Performance.",
                    "Space Efficient Conservative Garbage Collection.",
                    "Guardians in a Generation-Based Garbage Collector.",
                    "Real-Time Replication Garbage Collection.",
                    "Implementing Type Classes.",
                    "The Essence of Compiling with Continuations.",
                    "Register Allocation with Instruction Scheduling: A New Approach.",
                    "Lifetime-Sensitive Modulo Scheduling.",
                    "Load/Store Range Analysis for Global Register Allocation.",
                    "Balanced Scheduling: Instruction Scheduling When Memory Latency is Uncertain.",
                    "Reverse If-Conversion.",
                    "Branch Prediction For Free."
                ]
            }
        ]
    },
    {
        "year": "1992",
        "name": "13th PLDI 1992",
        "info": "San Francisco, California, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1992",
                "sub_name": "Proceedings of the ACM SIGPLAN'92 Conference on Programming Language Design and Implementation (PLDI), San Francisco, California, USA, June 17-19, 1992.",
                "count": 30,
                "papers": [
                    "A New Approach to Debugging Optimized Code.",
                    "Dynascope: A Tool for Program Directing.",
                    "A Retargetable Debugger.",
                    "Debugging Optimized Code with Dynamic Deoptimization.",
                    "The Design and Implementation of HoME.",
                    "A Customizable Substrate for Concurrent Languages.",
                    "A Concurrent Compiler for Modula-2+.",
                    "Sharlit - A Tool for Building Optimizers.",
                    "Prototyping Fortran-90 Compilers for Massively Parallel Machines.",
                    "Compiling Dataflow Analysis of Logic Programs.",
                    "Escape Analysis on Lists.",
                    "An Abstract Machine for CLP(R).",
                    "Eliminating False Data Dependences using the Omega Test.",
                    "Delinearization: An Efficient Way to Break Multiloop Dependence Equations.",
                    "Beyond Induction Variables.",
                    "A General Framework for Iteration-Reordering Loop Transformations.",
                    "Relaxing SIMD Control Flow Constraints using Loop Transformations.",
                    "A Dynamic Scheduling Technique for Irregular Parallel Programs.",
                    "How to Analyze Large Programs Efficiently and Informatively.",
                    "Lazy Code Motion.",
                    "A Safe Approximate Algorithm for Interprocedural Pointer Aliasing.",
                    "Abstractions for Recursive Pointer Data Structures: Improving the Analysis of Imperative Programs.",
                    "Alphonse: Incremental Computation as a Programming Abstraction.",
                    "Compiler Support for Garbage Collection in a Statically Typed Language.",
                    "Register Allocation for Software Pipelined Loops.",
                    "Probalistic Register Allocation.",
                    "Rematerialization.",
                    "Avoiding Unconditional Jumps by Code Replication.",
                    "Simple and Efficient BURS Table Generation.",
                    "Eliminating Branches using a Superoptimizer and the GNU C Compiler."
                ]
            }
        ]
    },
    {
        "year": "1991",
        "name": "12th PLDI 1991",
        "info": "Toronto, Ontario, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1991",
                "sub_name": "Proceedings of the ACM SIGPLAN'91 Conference on Programming Language Design and Implementation (PLDI), Toronto, Ontario, Canada, June 26-28, 1991.",
                "count": 29,
                "papers": [
                    "Efficient and Exact Data Dependence Analysis.",
                    "Practical Dependence Testing.",
                    "A Data Locality Optimizing Algorithm.",
                    "CCG: A Prototype Coagulating Code Generator.",
                    "Predicting Program Behavior Using Real or Estimated Profiles.",
                    "Procedure Merging with Instruction Caches.",
                    "Strictness and Binding-Time Analyses: Two for the Price of One.",
                    "Parameterized Partial Evaluation.",
                    "The Semantic Approach to Program Slicing.",
                    "Automatic Generation of Global Optimizers.",
                    "Size and Access Inference for Data-Parallel Programs.",
                    "Fortran at Ten Gigaflops: The Connection Machine Convolution Compiler.",
                    "Mostly Parallel Garbage Collection.",
                    "Tag-Free Garbage Collection for Strongly Typed Programming Languages.",
                    "Effective \"Static-Graph\" Reorganization to Improve Locality in Garbage-Collected Systems.",
                    "Register Allocation via Hierarchical Graph Coloring.",
                    "A Timed Petri-Net Model for Fine-Grain Loop Scheduling.",
                    "Circular Scheduling: A New Technique to Perform Software Pipelining.",
                    "The Marion System for Retargetable Instruction Scheduling.",
                    "Global Instruction Scheduling for Superscalar Machines.",
                    "Linear-Time, Optimal Code Scheduling for Delayed-Load Architectures.",
                    "Refinement Types for ML.",
                    "Soft Typing.",
                    "CML: A Higher-Order Concurrent Language.",
                    "A Methodology for Managing Hard Constraints in CLP Systems.",
                    "Generalized Algorithmic Debugging and Testing.",
                    "Occurences in Debugger Specifications.",
                    "Monitoring Semantics: A Formal Framework for Specifying, Implementing, and Reasoning about Execution Monitors.",
                    "Advice to Authors of Extended Abstracts."
                ]
            }
        ]
    },
    {
        "year": "1990",
        "name": "11th PLDI 1990",
        "info": "White Plains, New York, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1990",
                "sub_name": "Proceedings of the ACM SIGPLAN'90 Conference on Programming Language Design and Implementation (PLDI), White Plains, New York, USA, June 20-22, 1990.",
                "count": 30,
                "papers": [
                    "On the Structure of Verifiable Code Generator Specifications.",
                    "Fast Code Generation Using Automatically-Generated Decision Trees.",
                    "Profile Guided Code Positioning.",
                    "Register Allocation Across Procedure and Module Boundaries.",
                    "Graph Coloring Register Allocation for Processors with Multi-Register Operands.",
                    "Improving Register Allocation for Subscripted Variables.",
                    "Representing Control in the Presence of First-Class Continuations.",
                    "Fast Breakpoints: Design and Implementation.",
                    "Two-Directional Record Layout for Multiple Inheritance.",
                    "How to Read Floating-Point Numbers Accurately.",
                    "Optimizing Programs over the Constructive Reals.",
                    "How to Print Floating-Point Numbers Accurately.",
                    "Type-Dependent Parameter Inference.",
                    "Compilation of Haskell Array Comprehensions for Scientific Computing.",
                    "Iterative Type Analysis and Extended Message Splitting: Optimizing Dynamically-Typed Object-Oriented Programs.",
                    "Type Declarations as Subtype Constraints in Logic Programming.",
                    "Task Granularity Analysis in Logic Programs.",
                    "Generators and the Replicator Control Structures in the Parallel Environment of ALLOY.",
                    "Higher-Order Attribute Grammars and Editing Environments.",
                    "Design, Implementation and Evaluation of the FNC-2 Attribute Grammar System.",
                    "The University of Washington Illustrating Compiler.",
                    "Identifying the Semantic and Textual Differences Between Two Versions of a Program.",
                    "Dynamic Program Slicing.",
                    "The Program Dependence Web: A Representation Supporting Control, Data, and Demand-Driven Interpretation of Imperative Languages.",
                    "A Fresh Look at Optimizing Array Bound Checking.",
                    "Automatic Recognition of Induction Variables and Recurrence Relations by Abstract Interpretation.",
                    "Analysis of Pointers and Structures.",
                    "Compiling Programs for a Linear Systolic Array.",
                    "Instruction Reordering for Fork-Join Parallelism.",
                    "Compact Representations for Control Dependence."
                ]
            }
        ]
    },
    {
        "year": "1989",
        "name": "10th PLDI 1989",
        "info": "Portland, Oregon, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1989",
                "sub_name": "Proceedings of the ACM SIGPLAN'89 Conference on Programming Language Design and Implementation (PLDI), Portland, Oregon, USA, June 21-23, 1989.",
                "count": 31,
                "papers": [
                    "A Framework for Construction and Evaluation of High-Level Specifications for Program Analysis Techniques.",
                    "The Semantics of Program Dependence.",
                    "Dependence Analysis for Pointer Variables.",
                    "A Technique for Summarizing Data Access and Its Use in Parallelism Enhancing Transformations.",
                    "Automatic Generation of DAG Parallelism.",
                    "Process Decomposition Through Locality of Reference.",
                    "Mul-T: A High-Performance Parallel Lisp.",
                    "Parallel Compilation for a Parallel Machine.",
                    "Experience with CST: Programming and Implementation.",
                    "A Fresh Look at Combinator Graph Reduction.",
                    "A VHDL Compiler Based on Attribute Grammar Methodology.",
                    "Higher-Order Attribute Grammars.",
                    "Customization: Optimizing Compiler Technology for SELF, A Dynamically-Typed Object-Oriented Programming Language.",
                    "An LR Substring Parser for Noncorrecting Syntax Error Recovery.",
                    "Scannerless NSLR(1) Parsing of Programming Languages.",
                    "Incremental Generation of Parsers.",
                    "Type Inference in the Presence of Type Abstraction.",
                    "Type Reconstruction with First-Class Polymorphic Values.",
                    "Reasoning about Continuations with Control Effects.",
                    "BEG - A Generator for Efficient Back Ends.",
                    "A Language for Writing Code Generators.",
                    "Inline Function Expansion for Compiling C Programs.",
                    "Spill Code Minimization Techniques for Optimizing Compilers.",
                    "Register Allocation via Clique Separators.",
                    "Coloring Heuristics for Register Allocation.",
                    "On-The-Fly Detection of Access Anomalies.",
                    "Determining Average Program Execution Times and their Variance.",
                    "Generational Reference Counting: A Reduced-Communication Distributed Storage Reclamation Scheme.",
                    "Experiences Creating a Portable Cedar.",
                    "Demonic Memories for Process Histories.",
                    "Unified Management of Registers and Cache Using Liveness and Cache Bypass."
                ]
            }
        ]
    },
    {
        "year": "1988",
        "name": "9th PLDI 1988",
        "info": "Atlanta, Georgia, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1988",
                "sub_name": "Proceedings of the ACM SIGPLAN'88 Conference on Programming Language Design and Implementation (PLDI), Atlanta, Georgia, USA, June 22-24, 1988.",
                "count": 33,
                "papers": [
                    "Safety Considerations for Storage Allocation Optimizations.",
                    "Real-Time Concurrent Collection on Stock Multiprocessors.",
                    "Detecting Conflicts Between Structure Accesses.",
                    "Interprocedural Slicing Using Dependence Graphs.",
                    "The Program Summary Graph and Flow-Sensitive InterproceduralData Flow Analysis.",
                    "Interprocedural Side-Effect Analysis in Linear Time.",
                    "Register Windows versus Register Allocation.",
                    "Automatic Generation of Fast Optimizing Code Generators.",
                    "Minimizing Register Usage Penalty at Procedure Calls.",
                    "Anatomy of a Hardware Compiler.",
                    "Design and Implementation of the UW Illustrated Compiler.",
                    "INC: A Language for Incremental Computations.",
                    "DOC: A Practical Approach to Source-Level Debugging of Globally Optimized Code.",
                    "A Mechanism for Efficient Debugging of Parallel Programs.",
                    "Debugging Concurrent Processes: A Case Study.",
                    "An Efficient Approach to Data Flow Analysis in a Multi Pass Global Optimizer.",
                    "Control-Flow Analysis in Scheme.",
                    "An Optimizer for Ada - Design, Experiences and Results.",
                    "Grammatical Abstraction and Incremental Syntax Analysis in a Language-Based Editor.",
                    "Higher-Order Abstract Syntax.",
                    "Incremental Evaluation for a General Class of Circular Attribute Grammars.",
                    "An Automatically Generated, Realistic Compiler for an Imperative Programming Language.",
                    "Semantic Analysis in a Concurrent Compiler.",
                    "Compiling C for Vectorization, Parallelization, and Inline Expansion.",
                    "Synchronous Operations as First-Class Values.",
                    "Promises: Linguistic Support for Efficient Asynchronous Procedure Calls in Distributed Systems.",
                    "Multiprocessor Smalltalk: A Case Study of a Multiprocessor-Based Programming Environment.",
                    "Refined Types: Highly Differentiated Type Systems and Their Use in the Design of Intermediate Langages.",
                    "A Piggy-back Compiler For Prolog.",
                    "Unfold/Fold Transformations and Loop Optimization of Logic Programs.",
                    "Optimal Loop Parallelization.",
                    "Software Pipelining: An Effective Scheduling Technique for VLIW Machines.",
                    "A Portable Global Optimizer and Linker."
                ]
            }
        ]
    },
    {
        "year": "1987",
        "name": "8th PLDI 1987",
        "info": "St. Paul, Minnesota, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/1987",
                "sub_name": "Proceedings of the Symposium on Interpreters and Interpretive Techniques, 1987, St. Paul, Minnesota, USA, June 24 - 26, 1987.",
                "count": 30,
                "papers": [
                    "Mimic: a fast system/370 simulator.",
                    "A block-and-actions generator as an alternative to a simulator for collecting architecture measurements.",
                    "Automatic design and implementation of language data types.",
                    "Incremental re-execution of programs.",
                    "Enhancement through extension: the extension interpreter.",
                    "The type inference and coercion facilities in the scratchpad II interpreter.",
                    "The Illinois functional programming interpreter.",
                    "Efficient interpretation of synchronizable series expressions.",
                    "An eductive interpreter for Lucid.",
                    "A generator for language-specific debugging systems.",
                    "DI: an interactive debugging interpreter for applicative languages.",
                    "Selective interpretation as a technique for debugging computationally intensive programs.",
                    "Implementation of a high-speed Prolog interpreter.",
                    "Efficient interpretation of Prolog programs.",
                    "A recursive interpreter for the Icon programming language.",
                    "Two-level hybrid interpreter/native code execution for combined space-time program efficiency.",
                    "TOOLS: a unifying approach to object-oriented language interpretation.",
                    "GL-a denotational testbed with continuations and partial continuations as first-class objects.",
                    "A Fortran 77 interpreter for mutation analysis.",
                    "Cint: a RISC interpreter for the C programming language.",
                    "Design of an interpretive environment for Turing.",
                    "Interpreting ABF - a language for document construction.",
                    "Constructive real interpretation of numerical programs.",
                    "The JADE interpreter: a RISC interpreter for syntax directed editing.",
                    "Managing stack frames in Smalltalk.",
                    "Memory allocation and higher-order functions.",
                    "Incremental incrementally compacting garbage collection.",
                    "Distributed garbage collection.",
                    "Parallelism, persistence and meta-cleanliness in the symmetric Lisp interpreter.",
                    "CCAL: An interpreted language for experimentation in concurrent control."
                ]
            }
        ]
    },
    {
        "year": "1986",
        "name": "SIGPLAN Symposium on Compiler Construction 1986",
        "info": "Palo Alto, California, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/sigplan/1986",
                "sub_name": "Proceedings of the 1986 SIGPLAN Symposium on Compiler Construction, Palo Alto, California, USA, June 25-27, 1986.",
                "count": 28,
                "papers": [
                    "Optimal chaining in expression trees.",
                    "Efficient instruction scheduling for a pipelined architecture.",
                    "Compile-time partitioning and scheduling of parallel programs.",
                    "Compilation for a high-performance systolic array.",
                    "Efficient incremental evaluation of aggregate values in attribute grammars.",
                    "Generation of run-time environments.",
                    "Interprocedural optimization: eliminating unnecessary recompilation.",
                    "Transformations of denotational semantics in semantics directed compiler generation.",
                    "A globalizing transformation for attribute grammars.",
                    "Automatic generation of fixed-point-finding evaluators for circular, but well-defined, attribute grammars.",
                    "Effectiveness of a machine-level, global optimizer.",
                    "Data flow analysis for 'intractable' system software.",
                    "EPIC - a retargetable, highly optimizing Lisp compiler.",
                    "Unifying view of recent LALR(1) lookahead set algorithms.",
                    "A practical arbitrary look-ahead LR parsing technique.",
                    "Very fast LR parsing.",
                    "Interprocedural constant propagation.",
                    "Interprocedural dependence analysis and parallelization.",
                    "Direct parallelization of call statements.",
                    "Implementing RUSSELL.",
                    "Static evaluation of functional programs.",
                    "Efficient compilation of linear recursive functions into object level loops.",
                    "ORBIT: an optimizing compiler for scheme.",
                    "A retargetable instruction reorganizer.",
                    "Integrating code generation and optimization.",
                    "Discovering machine-specific code improvements.",
                    "Register allocation in the SPUR Lisp compiler.",
                    "Global register allocation at link time."
                ]
            }
        ]
    },
    {
        "year": "1984",
        "name": "SIGPLAN Symposium on Compiler Construction 1984",
        "info": "Montreal, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/sigplan/1984",
                "sub_name": "Proceedings of the 1984 SIGPLAN Symposium on Compiler Construction, Montreal, Canada, June 17-22, 1984.",
                "count": 31,
                "papers": [
                    "Code generation by coagulation.",
                    "Experience with a Graham-Glanville style code generator.",
                    "Using dynamic programming to generate optimized code in a Graham-Glanville style code generator.",
                    "Parallel processing: a smart compiler and a dumb machine.",
                    "A Fortran compiler for the FPS-164 scientific computer.",
                    "Efficient compilation of lazy evaluation.",
                    "Sub-protocol-evaluators for attribute grammars.",
                    "Strongly non-circular attribute grammars and their recursive evaluation.",
                    "Compiler prototyping using formal semantics.",
                    "Peep: an architectural description driven peephole optimizer.",
                    "Automatic generation of peephole optimizations.",
                    "Analyzing and compressing assembly code.",
                    "Incremental compilation in Magpie.",
                    "Incremental data flow analysis in a structured program editor.",
                    "An approach to incremental compilation.",
                    "Attribute coupled grammars.",
                    "Regular right-part attribute grammars.",
                    "A specification language for one-pass semantic analysis.",
                    "Tree transformation techniques and experiences.",
                    "A multi-language compiler system with automatically generated codegenerators.",
                    "A semantic prototyping system.",
                    "Register allocation by priority-based coloring.",
                    "Automatic loop interchange.",
                    "Efficient computation of flow insensitive interprocedural summary information.",
                    "An efficient implementation of visibility in Ada.",
                    "Inline routines in VAXELN Pascal.",
                    "Sharing code among instances of Ada generics.",
                    "Type checking, separate compilation and reusability.",
                    "Static checking of interprocess communication in ECSP.",
                    "Engineering a high-capacity Pascal compiler for high performance.",
                    "A portable optimizing compiler for Modula-2."
                ]
            }
        ]
    },
    {
        "year": "1982",
        "name": "SIGPLAN Symposium on Compiler Construction 1982",
        "info": "Boston, Massachusetts, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/sigplan/1982",
                "sub_name": "Proceedings of the SIGPLAN '82 Symposium on Compiler Construction, Boston, Massachusetts, USA, June 23-25, 1982.",
                "count": 34,
                "papers": [
                    "Cray Pascal.",
                    "Experience with Porting Techniques on a COBOL 74 Compiler.",
                    "An Overview of the PL.8 Compiler.",
                    "An Experiment in Table Driven Code Generation.",
                    "An Implementation of a Code Generator Specification Language for Table Driven Code Generators.",
                    "Experience with an Automatic Code Generator Generator.",
                    "A Practical Method for Syntactic Error Diagnosis and Recovery.",
                    "A Forward Move Algorithm for LL and LR Parsers.",
                    "Semantic Errors - Diagnosis and Repair.",
                    "Register Allocation & Spilling via Graph Coloring.",
                    "The Design of a Data Flow Analyzer.",
                    "Optimization of Range Checking.",
                    "gprof: a Call Graph Execution Profiler.",
                    "A Facility for the Downward Execution of a High-Level Language.",
                    "A Flexible Compiler Structure That Allows Dynamic Phase Ordering.",
                    "Tailoring Testing to a Specific Compiler - Experiences.",
                    "Compiler Construction Using Attribute Grammars.",
                    "LINGUIST-86: Yet Another Translator Writing System Based On Attribute Grammars.",
                    "A Truly Generative Semantics-Directed Compiler Generator.",
                    "A Practical Method for Code Generation Based on Exhaustive Search.",
                    "Analyzing Exotic Instructions for a Retargetable Code Generator.",
                    "Engineering a Production Code Generator.",
                    "Experience with an Experimental Compiler Generator Based on Denotational Semantics.",
                    "Denotational Semantics as a Specification of Code Generators.",
                    "Control Flow Aspects of Semantics Directed Compiling (Summary).",
                    "An Optimizing Compiler for Lexically Scoped LISP.",
                    "Current Status of a Portable Lisp Compiler.",
                    "An Applicative Compiler for a Parallel Machine.",
                    "The Linear Graph Package, a Compiler Building Environment.",
                    "An Efficient Separate Compilation Strategy for Very Large Programs.",
                    "The Design of an Integrated Support Software System.",
                    "A Single-Pass Syntax-Directed Front End for Ada.",
                    "Experience with the Normal Semantic Definition of HAL/S.",
                    "An Attribute Grammar for Ada."
                ]
            }
        ]
    },
    {
        "year": "1980",
        "name": "SIGPLAN Symposium on Ada Programming Language 1980",
        "info": "Boston, Massachusetts, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/sigplan/1980",
                "sub_name": "Proceedings of the ACM-SIGPLAN symposium on The ADA programming language, SIGPLAN 1980, Boston, Massachusetts, USA, December 9, 1980.",
                "count": 26,
                "papers": [
                    "The Ada compiler validation capability.",
                    "An experience with parallelism in Ada.",
                    "Ada debugging and testing support environments.",
                    "Using Ada for industrial embedded microprocessor applications.",
                    "Towards a compiler front-end for Ada.",
                    "Overloading in preliminary Ada.",
                    "Type resolution in Ada: an implementation report.",
                    "A flexible semantic analyzer for Ada.",
                    "The Charrette Ada compiler.",
                    "A runtime representation for Ada variables and types.",
                    "An Ada code generator for VAX 11/780 with Unix.",
                    "TCOLAda and the \"middle end\" of the PQCC Ada compiler.",
                    "A practical method of documenting and verifying Ada programs with packages.",
                    "Generics and verification in Ada.",
                    "ANNA: towards a language for annotating Ada programs.",
                    "Nesting in Ada programs is for the birds.",
                    "Evolving toward Ada in real time systems.",
                    "The rendezvous and monitor concepts: is there an efficiency difference?",
                    "Algorithms for translating Ada multitasking.",
                    "Ada as a software transition tool.",
                    "Source-to-source translation: Ada to Pascal and Pascal to Ada.",
                    "The NYU Ada translator and interpreter.",
                    "A multi-processing implementation-oriented formal definition of Ada in SEMANOL.",
                    "On a formal model of the tasking concept in Ada.",
                    "The design of a virtual machine for Ada.",
                    "Effective machine descriptors for Ada."
                ]
            }
        ]
    },
    {
        "year": "1979",
        "name": "SIGPLAN Symposium on Compiler Construction 1979",
        "info": "Denver, Colorado, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/pldi/2004best",
                "sub_name": "20 Years of the ACM SIGPLAN Conference on Programming Language Design and Implementation 1979-1999, A Selection.",
                "count": 50,
                "papers": [
                    "Code generation in a machine-independent compiler (with retrospective).",
                    "Efficient computation of LALR(1) look-ahead sets (with retrospective).",
                    "Automatic storage optimization (with retrospective).",
                    "An overview of the PL.8 compiler (with retrospective).",
                    "gprof: a call graph execution profiler (with retrospective).",
                    "Optimization of range checking (with retrospective).",
                    "Register allocation and spilling via graph coloring (with retrospective).",
                    "Automatic loop interchange (with retrospective).",
                    "Register allocation by priority-based coloring (with retrospective).",
                    "Automatic generation of peephole optimizations (with retrospective).",
                    "Parallel processing: a smart compiler and a dumb machine (with retrospective).",
                    "Efficient compilation of lazy evaluation (with retrospective).",
                    "Interprocedural dependence analysis and parallelization (with retrospective).",
                    "Interprocedural constant propagation (with retrospective).",
                    "Efficient instruction scheduling for a pipelined architecture (with retrospective).",
                    "Orbit: an optimizing compiler for scheme (with retrospective).",
                    "Global register allocation at link time (with retrospective).",
                    "Real-time concurrent collection on stock multiprocessors (with retrospective).",
                    "Interprocedural side-effect analysis in linear time (with retrospective).",
                    "Interprocedural slicing using dependence graphs (with retrospective).",
                    "Software pipelining: an effective scheduling technique for VLIW machines (with retrospective).",
                    "Higher-order control-flow analysis in retrospect: lessons learned, lessons abandoned (with retrospective).",
                    "Register windows vs. register allocation (with retrospective).",
                    "Coloring heuristics for register allocation (with retrospective).",
                    "A retrospective on: \"customization: optimizing compiler technology for self, a dynamically-typed object-oriented programming language\" (with retrospective).",
                    "On-the-fly detection of access anomalies (with retrospective).",
                    "Improving register allocation for subscripted variables (with retrospective).",
                    "Analysis of pointers and structures (with retrospective).",
                    "How to read floating point numbers accurately (with retrospective).",
                    "How to print floating-point numbers accurately (with retrospective).",
                    "Fast breakpoints: design and implementation (with retrospective).",
                    "Profile guided code positioning (with retrospective).",
                    "Soft typing (with retrospective).",
                    "Predicting program behavior using real or estimated profiles (with retrospective).",
                    "A data locality optimizing algorithm (with retrospective).",
                    "Lazy code motion (with retrospective).",
                    "A safe approximate algorithm for interprocedural pointer aliasing (with retrospective).",
                    "Space efficient conservative garbage collection (with retrospective).",
                    "The essence of compiling with continuations (with retrospective).",
                    "Balanced scheduling: instruction scheduling when memory latency is uncertain (with retrospective).",
                    "ATOM: a system for building customized program analysis tools (with retrospective).",
                    "Optimizing ML with run-time code generation (with retrospective).",
                    "TIL: a type-directed, optimizing compiler for ML (with retrospective).",
                    "Improving data-flow analysis with path profiles (with retrospective).",
                    "Thin locks: featherweight Synchronization for Java (with retrospective).",
                    "Complete removal of redundant expressions (with retrospective).",
                    "The design and implementation of a certifying compiler (with retrospective).",
                    "On bounding time and space for multiprocessor garbage collection (with retrospective).",
                    "A fast Fourier transform compiler (with retrospective).",
                    "An evaluation of staged run-time optimizations in DyC (with retrospective)."
                ]
            },
            {
                "sub_name_abbr": "conf/sigplan/1979",
                "sub_name": "Proceedings of the 1979 SIGPLAN Symposium on Compiler Construction, Denver, Colorado, USA, August 6-10, 1979.",
                "count": 27,
                "papers": [
                    "Data abstraction: A static implementation strategy.",
                    "A model for implementing Euclid modules and type templates.",
                    "Program checking.",
                    "Dynamic allocation of space for attribute instances in multi-pass evaluators of attribute grammars.",
                    "Semantic charts: A diagrammatic approach to semantic processing.",
                    "Hashed symbol tables for languages with explicit scope control.",
                    "A code generator generator language.",
                    "Code generation in a machine-independent compiler.",
                    "Implementation of an Interactive Programming System.",
                    "Automatic storage optimization.",
                    "Porting the Zed compiler.",
                    "Implementation of a portable Fortran 77 compiler using modern tools.",
                    "The CIMS PL/I compiler.",
                    "Construction of a transportable, multi-pass compiler for extended Pascal.",
                    "Compiler design for efficient code generation and program optimization.",
                    "On implementing separate compilation in block-structured languages.",
                    "The use of transition matrices in a recursive-descent compiler.",
                    "An all(1) compiler generator.",
                    "Global context recovery: A new strategy for parser recovery from syntax errors.",
                    "Practical LR error recovery.",
                    "Efficient computation of LALR(1) look-ahead sets.",
                    "An intermediate language for source and target independent code optimization.",
                    "Machine-independent PASCAL code optimization.",
                    "A comparison of PASCAL intermediate languages.",
                    "Predicting the effects of optimization on a procedure body.",
                    "Machine-independent register allocation.",
                    "The design of a global optimizer."
                ]
            }
        ]
    },
    {
        "year": "1973",
        "name": "SIGPLAN Meeting on Programming Languages and Information Retrieval 1973",
        "info": "Gaithersburg, Maryland, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/sigir/73",
                "sub_name": "Proceedings of the 1973 meeting on Programming languages and information retrieval, SIGPLAN 1973, Gaithersburg, Maryland, USA, November 4-6, 1973.",
                "count": 17,
                "papers": [
                    "A Translating Computer Interface for a Network of Heterogeneous Interactive Retrieval Systems.",
                    "Breaking the Complexity Barrier again.",
                    "Specifying Queries as Relational Expressions.",
                    "On the Construction of Effective Vocabularies for Information Retrieval.",
                    "Information Retrieval and the Query Language.",
                    "The On-Line Interface of Library Management and Document Retrieval Systems.",
                    "Comparative Analysis of Interactive Retrieval Systems.",
                    "Language Decisions Made While Designing an Interactive Information Retrieval System.",
                    "FOL: A Language for Implementing File Organizations for Information Storage and Retrieval Systems.",
                    "An Evaluation of Languages for the Implementation of Information Storage and Retrieval Systems.",
                    "From a Data Description Point of View.",
                    "A Dual Structured Data Base System.",
                    "Retrieval Operations and Data Representations in a Context-Addressed Disc System.",
                    "ARS - An Interactive Reporting System.",
                    "Remarks on Tactical Computer Problems.",
                    "A Note About the Proximity Operators in Information Retieval.",
                    "Comments on Experiments with Retrieval of Legal Information in Full Text."
                ]
            }
        ]
    }
]