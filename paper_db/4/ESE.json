[
    {
        "name": "ESE",
        "year": "2022",
        "info": "Volume 27, 2022",
        "count": 51,
        "papers": [
            "Game-based Sprint retrospectives: multiple action research.",
            "Deep security analysis of program code.",
            "GitHub Discussions: An exploratory study of early adoption.",
            "Dynamical analysis of diversity in rule-based open source network intrusion detection systems.",
            "Information retrieval versus deep learning approaches for generating traceability links in bilingual projects.",
            "Reflections on the Empirical Software Engineering journal.",
            "Reviewing rounds prediction for code patches.",
            "Mining and relating design contexts and design patterns from Stack Overflow.",
            "Conclusion stability for natural language based mining of design discussions.",
            "Efficient static analysis and verification of featured transition systems.",
            "How do i refactor this? An empirical study on refactoring trends and topics in Stack Overflow.",
            "Correction to: Preface to the special issue on program comprehension.",
            "Developers perception of peer code review in research software development.",
            "Quick remedy commits and their impact on mining software repositories.",
            "\"More Than Deep Learning\": post-processing for API sequence recommendation.",
            "TaintBench: Automatic real-world malware benchmarking of Android taint analyses.",
            "Ethics in the mining of software repositories.",
            "On the analysis of non-coding roles in open source development.",
            "An exploratory study on the repeatedly shared external links on Stack Overflow.",
            "Injecting software faults in Python applications.",
            "Demystifying regular expression bugs.",
            "Studying eventual connectivity issues in Android apps.",
            "Rap4DQ: Learning to recommend relevant API documentation for developer questions.",
            "Studying donations and their expenses in open source projects: a case study of GitHub projects collecting donations through open collectives.",
            "Enjoy your observability: an industrial survey of microservice tracing and analysis.",
            "Omni: automated ensemble with unexpected models against adversarial evasion attack.",
            "An empirical study of developers' discussions about security challenges of different programming languages.",
            "Using code reviews to automatically configure static analysis tools.",
            "Test case selection and prioritization using machine learning: a systematic literature review.",
            "An empirical investigation of command-line customization.",
            "Software testing and Android applications: a large-scale empirical study.",
            "CT-IoT: a combinatorial testing-based path selection framework for effective IoT testing.",
            "Two N-of-1 self-trials on readability differences between anonymous inner classes (AICs) and lambda expressions (LEs) on Java code snippets.",
            "A study of gender in user reviews on the Google Play Store.",
            "Gamification in software engineering: the mediating role of developer engagement and job satisfaction.",
            "Inter-team communication in large-scale co-located software engineering: a case study.",
            "Path context augmented statement and network for learning programs.",
            "Learning how to search: generating effective test cases through adaptive fitness function selection.",
            "Modeling Performance of Microservices Systems with Growth Theory.",
            "A comparative study and analysis of developer communications on Slack and Gitter\ufeff.",
            "Propagating frugal user feedback through closeness of code dependencies to improve IR-based traceability recovery.",
            "Problems with SZZ and features: An empirical study of the state of practice of defect prediction data collection.",
            "Analysing app reviews for software engineering: a systematic literature review.",
            "Uniform and scalable sampling of highly configurable systems.",
            "Smoke testing for machine learning: simple tests to discover severe bugs.",
            "An empirical study of the effectiveness of IR-based bug localization for large-scale industrial projects.",
            "Mining Python fix patterns via analyzing fine-grained source code changes.",
            "An empirical study on self-admitted technical debt in Dockerfiles.",
            "Predicting the objective and priority of issue reports in software repositories.",
            "Analysis of a many-objective optimization approach for identifying microservices from legacy systems.",
            "Practitioner's view of the success factors for software outsourcing partnership formation: an empirical exploration."
        ]
    },
    {
        "name": "ESE",
        "year": "2021",
        "info": "Volume 26, 2021",
        "count": 134,
        "papers": [
            "Software development with feature toggles: practices used by practitioners.",
            "What makes a popular academic AI repository?",
            "Spearheading agile: the role of the scrum master in agile projects.",
            "Learning by sampling: learning behavioral family models from software product lines.",
            "ID-correspondence: a measure for detecting evolutionary coupling.",
            "Empirical assessment of generating adversarial configurations for software product lines.",
            "Scalable online vetting of Android apps for measuring declared SDK versions and their consistency with API calls.",
            "Demystifying the challenges and benefits of analyzing user-reported logs in bug reports.",
            "Investigating design anti-pattern and design pattern mutations and their change- and fault-proneness.",
            "CMFuzz: context-aware adaptive mutation for fuzzers.",
            "Discovering configuration workflows from existing logs using process mining.",
            "An exploratory study on confusion in code reviews.",
            "Comparing the results of replications in software engineering.",
            "Automatically recommending components for issue reports using deep learning.",
            "On the Removal of Feature Toggles.",
            "An exploratory study on the introduction and removal of different types of technical debt in deep learning frameworks.",
            "Automated end-to-end management of the modeling lifecycle in deep learning.",
            "The Relation of Test-Related Factors to Software Quality: A Case Study on Apache Systems.",
            "A multi-dimensional analysis of technical lag in Debian-based Docker images.",
            "Automated patch assessment for program repair at scale.",
            "Correction to: Characterizing the transfer of program comprehension in onboarding: an information-push perspective.",
            "World of code: enabling a research workflow for mining and analyzing the universe of open source VCS data.",
            "Lightweight, semi-automatic variability extraction: a case study on scientific computing.",
            "variED: an editor for collaborative, real-time feature modeling.",
            "Why are many businesses instilling a DevOps culture into their organization?",
            "A validated model for the scoping process of quality requirements: a multi-case study.",
            "Helping or not helping? Why and how trivial packages impact the npm ecosystem.",
            "Strategies to manage quality requirements in agile software development: a multiple case study.",
            "Learning lenient parsing & typing via indirect supervision.",
            "Software product-line evaluation in the large.",
            "Wikifying software artifacts.",
            "The nature of build changes.",
            "Correction to: Wait for it: identifying \"On-Hold\" self-admitted technical debt.",
            "Release synchronization in software ecosystems.",
            "Are datasets for information retrieval-based bug localization techniques trustworthy?",
            "A privacy and security analysis of early-deployed COVID-19 contact tracing Android apps.",
            "Appreciation to Empirical Software Engineering reviewers of 2020.",
            "GreenHub: a large-scale collaborative dataset to battery consumption analysis of android devices.",
            "From one to hundreds: multi-licensing in the JavaScript ecosystem.",
            "Ethical issues in empirical studies using student subjects: Re-visiting practices and perceptions.",
            "An empirical study on changing leadership in agile teams.",
            "A family of experiments on test-driven development.",
            "An automated framework for the extraction of semantic legal metadata from legal texts.",
            "An empirical investigation of organic software product lines.",
            "A comprehensive study of bloated dependencies in the Maven ecosystem.",
            "Revisiting the VCCFinder approach for the identification of vulnerability-contributing commits.",
            "Lags in the release, adoption, and propagation of npm vulnerability fixes.",
            "Understanding large-scale software systems - structure and flows.",
            "Correction to: An empirical assessment of baseline feature location techniques.",
            "Training students in evidence-based software engineering and systematic reviews: a systematic review and empirical study.",
            "Locating faults with program slicing: an empirical analysis.",
            "Testing self-healing cyber-physical systems under uncertainty with reinforcement learning: an empirical study.",
            "How to Better Distinguish Security Bug Reports (Using Dual Hyperparameter Optimization).",
            "Flair: efficient analysis of Android inter-component vulnerabilities in response to incremental changes.",
            "Improving energy-efficiency by recommending Java collections.",
            "Learning to recognize actionable static code warnings (is intrinsically easy).",
            "A first look at Android applications in Google Play related to COVID-19.",
            "Genetic programming for feature model synthesis: a replication study.",
            "Out of sight, out of mind? How vulnerable dependencies affect open-source projects.",
            "Evaluating network embedding techniques' performances in software bug prediction.",
            "Embedding API dependency graph for neural code generation.",
            "Predictors of well-being and productivity among software professionals during the COVID-19 pandemic - a longitudinal study.",
            "Promises and challenges of microservices: an exploratory study.",
            "Automatic team recommendation for collaborative software development.",
            "Understanding and improving the quality and reproducibility of Jupyter notebooks.",
            "Generating API tags for tutorial fragments from Stack Overflow.",
            "Understanding and improving artifact sharing in software engineering research.",
            "On using Stack Overflow comment-edit pairs to recommend code maintenance changes.",
            "Development of recommendation systems for software engineering: the CROSSMINER experience.",
            "Security assurance cases - state of the art of an emerging approach.",
            "An empirical study on the use of SZZ for identifying inducing changes of non-functional bugs.",
            "Foreword to the Special Issue on Configurable Systems.",
            "Assessing practitioner beliefs about software engineering.",
            "Lessons Learnt on Reproducibility in Machine Learning Based Android Malware Detection.",
            "Analysing Time-Stamped Co-Editing Networks in Software Development Teams using git2net.",
            "Resource and dependency based test case generation for RESTful Web services.",
            "Assessment of off-the-shelf SE-specific sentiment analysis tools: An extended replication study.",
            "Exposed! A case study on the vulnerability-proneness of Google Play Apps.",
            "On systematically building a controlled natural language for functional requirements.",
            "Reliability of self-rated experience and confidence as predictors for students' performance in software engineering.",
            "Studying backers and hunters in bounty issue addressing process of open source projects.",
            "Beyond the virus: a first look at coronavirus-themed Android malware.",
            "Evaluating the robustness of source code plagiarism detection tools to pervasive plagiarism-hiding modifications.",
            "To what extent do DNN-based image classification models make unreliable inferences?",
            "Assessing exception handling testing practices in open-source libraries.",
            "Weighted software metrics aggregation and its application to defect prediction.",
            "MLASP: Machine learning assisted capacity planning.",
            "Individual differences limit predicting well-being and productivity using software repositories: a longitudinal industrial study.",
            "An empirical study of same-day releases of popular packages in the npm ecosystem.",
            "Can Offline Testing of Deep Neural Networks Replace Their Online Testing?",
            "The entrepreneurial logic of startup software development: A study of 40 software startups.",
            "Evaluating refactorings for disciplining #ifdef annotations: An eye tracking study with novices.",
            "Topic recommendation for software repositories using multi-label classification algorithms.",
            "FeatCompare: Feature comparison for competing mobile apps leveraging user reviews.",
            "AI lifecycle models need to be revised.",
            "Understanding shared links and their intentions to meet information needs in modern code review.",
            "Evaluating the impact of falsely detected performance bug-inducing changes in JIT models.",
            "Task estimation for software company employees based on computer interaction logs.",
            "E-APR: Mapping the effectiveness of automated program repair techniques.",
            "The secret life of test smells - an empirical study on test smell evolution and maintenance.",
            "Finding the sweet spot for organizational control and team autonomy in large-scale agile software development.",
            "Perceived diversity in software engineering: a systematic literature review.",
            "Understanding peer review of software engineering papers.",
            "Industry practices and challenges for the evolvability assurance of microservices.",
            "Measuring affective states from technical debt.",
            "Does class size matter? An in-depth assessment of the effect of class size in software defect prediction.",
            "Automated driver management for selenium WebDriver.",
            "A requirements inspection method based on scenarios generated by model mutation and the experimental validation.",
            "Correction to: MLASP: Machine learning assisted capacity planning. An industrial experience report.",
            "FACER: An API usage-based code-example recommender for opportunistic reuse.",
            "Empirical evaluation of tools for hairy requirements engineering tasks.",
            "What do class comments tell us? An investigation of comment evolution and practices in Pharo Smalltalk.",
            "A study into the practice of reporting software engineering experiments.",
            "Predicting unstable software benchmarks using static source code features.",
            "An empirical study of Q&A websites for game developers.",
            "The forgotten role of search queries in IR-based bug localization: an empirical study.",
            "Maintenance-related concerns for post-deployed Ethereum smart contract development: issues, techniques, and future challenges.",
            "Why and what happened? Aiding bug comprehension with automated category and causal link identification.",
            "How to cherry pick the bug report for better summarization?",
            "Topic modeling in software engineering research.",
            "An empirical study of IoT topics in IoT developer discussions on Stack Overflow.",
            "Where were the repair ingredients for Defects4j bugs?",
            "Understanding developers' privacy and security mindsets via climate theory.",
            "Single-state state machines in model-driven software engineering: an exploratory study.",
            "Characterizing refactoring graphs in Java and JavaScript projects.",
            "A pragmatic approach for hyper-parameter tuning in search-based test case generation.",
            "Fixing vulnerabilities potentially hinders maintainability.",
            "A study of how Docker Compose is used to compose multi-component systems.",
            "Using a balanced scorecard to identify opportunities to improve code review effectiveness: an industrial experience report.",
            "Rotten green tests in Java, Pharo and Python.",
            "Self-admitted technical debt practices: a comparison between industry and open-source.",
            "How are project-specific forums utilized? A study of participation, content, and sentiment in the Eclipse ecosystem.",
            "Applying test case prioritization to software microbenchmarks.",
            "The indolent lambdification of Java."
        ]
    },
    {
        "name": "ESE",
        "year": "2020",
        "info": "Volume 25, 2020",
        "count": 146,
        "papers": [
            "Empirical assessment of the effort needed to attack programs protected with client/server code splitting.",
            "Improving change prediction models with code smell-related information.",
            "A benchmark-based evaluation of search-based crash reproduction.",
            "Bounties on technical Q&A sites: a case study of Stack Overflow bounties.",
            "Are free Android app security analysis tools effective in detecting known vulnerabilities?",
            "Recognizing lines of code violating company-specific coding guidelines using machine learning.",
            "An empirical assessment of baseline feature location techniques.",
            "What distinguishes great software engineers?",
            "Meta-analysis for families of experiments in software engineering: a systematic review and reproducibility and validity assessment.",
            "On the relation between Github communication activity and merge conflicts.",
            "Selecting fault revealing mutants.",
            "Log4Perf: suggesting and updating logging locations for web-based systems' performance monitoring.",
            "\u00c7orba: crowdsourcing to obtain requirements from regulations and breaches.",
            "An empirical investigation into merge conflicts and their effect on software quality.",
            "Going deeper with optimal software products selection using many-objective optimization and satisfiability solvers.",
            "Search. Review. Repeat? An empirical study of threats to replicating SLR searches.",
            "Memory and resource leak defects and their repairs in Java projects.",
            "The effectiveness of context-based change application on automatic program repair.",
            "Why reinventing the wheels? An empirical study on library reuse and re-implementation.",
            "How different are different diff algorithms in Git?",
            "A longitudinal study of popular ad libraries in the Google Play Store.",
            "Developer recommendation for Topcoder through a meta-learning based policy model.",
            "The impact of context metrics on just-in-time defect prediction.",
            "Characterizing the transfer of program comprehension in onboarding: an information-push perspective.",
            "SIEVE: Helping developers sift wheat from chaff via cross-platform analysis.",
            "2019 Reviewer Acknowledgment.",
            "Meshing agile and plan-driven development in safety-critical software: a case study.",
            "Measuring the accuracy of software vulnerability assessments: experiments with students and professionals.",
            "An empirical characterization of bad practices in continuous integration.",
            "ALFAA: Active Learning Fingerprint based Anti-Aliasing for correcting developer identity errors in version control systems.",
            "On the impact of using trivial packages: an empirical case study on npm and PyPI.",
            "An experimental scrutiny of visual design modelling: VCL up against UML+OCL.",
            "What should your run-time configuration framework do to help developers?",
            "How bugs are born: a model to identify how bugs are introduced in software components.",
            "Predicting software defect type using concept-based classification.",
            "Guest editorial: special section on software analysis, evolution, and reengineering.",
            "A systemic framework for crowdsourced test report quality assessment.",
            "How developers engage with static analysis tools in different contexts.",
            "You broke my code: understanding the motivations for breaking changes in APIs.",
            "CAPS: a supervised technique for classifying Stack Overflow posts concerning API issues.",
            "Guest Editorial: Special Issue on Predictive Models and Data Analytics in Software Engineering.",
            "Code Localization in Programming Screencasts.",
            "Cross-version defect prediction: use historical data, cross-project data, or both?",
            "Deriving a usage-independent software quality metric.",
            "Editor's Note: Empirical Software Engineering and COVID-19 research.",
            "Investigating types and survivability of performance bugs in mobile apps.",
            "Practical relevance of software engineering research: synthesizing the community's voice.",
            "The state of adoption and the challenges of systematic variability management in industry.",
            "Characteristics of method extractions in Java: a large scale empirical study.",
            "MSRBot: Using bots to answer questions from software repositories.",
            "An exploratory study of smart contracts in the Ethereum blockchain platform.",
            "Boosting crash-inducing change localization with rank-performance-based feature subset selection.",
            "Ammonia: an approach for deriving project-specific bug patterns.",
            "FixMiner: Mining relevant fix patterns for automated program repair.",
            "The virtual lands of Oz: testing an agribot in simulation.",
            "Guest editorial: Mining software repositories 2018.",
            "CDA: Characterising Deprecated Android APIs.",
            "Better software analytics via \"DUO\": Data mining algorithms using/used-by optimizers.",
            "Preface to the special issue on program comprehension.",
            "Measuring the impact of lexical and structural inconsistencies on developers' cognitive load during bug localization.",
            "Deep code comment generation with hybrid lexical and syntactical information.",
            "Every build you break: developer-oriented assistance for build failure resolution.",
            "What kind of questions do developers ask on Stack Overflow? A comparison of automated approaches to classify posts into question categories.",
            "Guiding log revisions by learning from software evolution history.",
            "Third-party libraries in mobile apps.",
            "An approach and benchmark to detect behavioral changes of commits in continuous integration.",
            "Explicit programming strategies.",
            "An empirical analysis of error propagation in critical software systems.",
            "Building the perfect game - an empirical study of game modifications.",
            "Code and commit metrics of developer productivity: a study on team leaders perceptions.",
            "Using machine learning to assist with the selection of security controls during security assessment.",
            "A gamification solution for improving Scrum adoption.",
            "How software engineering research aligns with design science: a review.",
            "How does combinatorial testing perform in the real world: an empirical study.",
            "What do Programmers Discuss about Deep Learning Frameworks.",
            "Characterizing the evolution of statically-detectable performance issues of Android apps.",
            "What am I testing and where? Comparing testing procedures based on lightweight requirements annotations.",
            "On (Mis)perceptions of testing effectiveness: an empirical study.",
            "PHANTOM: Curating GitHub for engineered software projects using time-series clustering.",
            "Software provenance tracking at the scale of public source code.",
            "RePOR: Mimicking humans on refactoring tasks. Are we there yet?",
            "An empirical investigation of performance overhead in cross-platform mobile development frameworks.",
            "Retraction Note: Retraction note to: The smell of fear: on the relation between test smells and flaky tests.",
            "A study of the performance of general compressors on log files.",
            "On the relationship between bug reports and queries for text retrieval-based bug localization.",
            "A practical guide on conducting eye tracking studies in software engineering.",
            "Detection, assessment and mitigation of vulnerabilities in open source dependencies.",
            "The practitioners' point of view on the concept of technical debt and its causes and consequences: a design for a global family of industrial surveys and its first results from Brazil.",
            "Standing on shoulders or feet? An extended study on the usage of the MSR data papers.",
            "Do code review measures explain the incidence of post-release defects?",
            "A comprehensive study on software aging across android versions and vendors.",
            "An empirical study of the characteristics of popular Minecraft mods.",
            "The 'as code' activities: development anti-patterns for infrastructure as code.",
            "Learning actionable analytics from multiple software projects.",
            "Towards an evidence-based theoretical framework on factors influencing the software development productivity.",
            "Automated issue assignment: results and insights from an industrial case.",
            "The impact of automated feature selection techniques on the interpretation of defect models.",
            "A tailored participatory action research for foss communities.",
            "Towards a fictional collective programming scenario: an approach based on the EIF loop.",
            "Automating system test case classification and prioritization for use case-driven testing in product lines.",
            "Wait for it: identifying \"On-Hold\" self-admitted technical debt.",
            "What to share, when, and where: balancing the objectives and complexities of open source software contributions.",
            "Data-driven software design with Constraint Oriented Multi-variate Bandit Optimization (COMBO).",
            "CGT-FL: using cooperative game theory to effective fault localization in presence of coincidental correctness.",
            "The Teamwork Process Antecedents (TPA) questionnaire: developing and validating a comprehensive measure for assessing antecedents of teamwork process quality.",
            "On the assessment of software defect prediction models via ROC curves.",
            "An empirical investigation on the relationship between design and architecture smells.",
            "Information correspondence between types of documentation for APIs.",
            "The who, what, how of software engineering research: a socio-technical framework.",
            "Using black-box performance models to detect performance regressions under varying workloads: an empirical study.",
            "Evaluating the agreement among technical debt measurement tools: building an empirical benchmark of technical debt liabilities.",
            "Systematic mapping study on domain-specific language development tools.",
            "Too many images on DockerHub! How different are images for the same system?",
            "SMBFL: slice-based cost reduction of mutation-based fault localization.",
            "Feature requests-based recommendation of software refactorings.",
            "Foreword to the Special Issue in Empirical Software Engineering: Best Papers of REFSQ 2019.",
            "Interaction-based creation and maintenance of continuously usable trace links between requirements and source code.",
            "On the fulfillment of coordination requirements in open-source software projects: An exploratory study.",
            "Software engineering whispers: The effect of textual vs. graphical software design descriptions on software design communication.",
            "Correction to: Software engineering whispers: The effect of textual vs. graphical software design descriptions on software design communication.",
            "Formal methods in dependable systems engineering: a survey of professionals from Europe and North America.",
            "Mining the use of higher-order functions.",
            "Publish or perish, but do not forget your software artifacts.",
            "Code cloning in smart contracts: a case study on verified contracts from the Ethereum blockchain platform.",
            "BarrierFinder: recognizing ad hoc barriers.",
            "CROKAGE: effective solution recommendation for programming tasks by leveraging crowd knowledge.",
            "Mining understandable state machine models from embedded code.",
            "On the need of preserving order of data when validating within-project defect classifiers.",
            "Correction to: On the need of preserving order of data when validating within-project defect classifiers.",
            "An Empirical Investigation of Relevant Changes and Automation Needs in Modern Code Review.",
            "A feature location approach for mapping application features extracted from crowd-based screencasts to source code.",
            "Pandemic programming.",
            "How agile teams make self-assignment work: a grounded theory study.",
            "API compatibility issues in Android: Causes and effectiveness of data-driven detection techniques.",
            "On the time-based conclusion stability of cross-project defect prediction models.",
            "Security analysis of permission re-delegation vulnerabilities in Android apps.",
            "A longitudinal study of static analysis warning evolution and the effects of PMD on software quality in Apache open source projects.",
            "Testing machine learning based systems: a systematic mapping.",
            "The significance of bug report elements.",
            "Automated test reuse for highly configurable software.",
            "On the feasibility of automated prediction of bug and non-bug issues.",
            "Correction to: On the feasibility of automated prediction of bug and non-bug issues.",
            "How does code readability change during software evolution?",
            "Preface to the empirical software engineering special issue on selected papers from RE'19.",
            "Are there gender differences when interacting with social goal models?",
            "Automated demarcation of requirements in textual specifications: a machine learning-based approach."
        ]
    },
    {
        "name": "ESE",
        "year": "2019",
        "info": "Volume 24, 2019",
        "count": 118,
        "papers": [
            "Appreciation to Empirical Software Engineering Reviewers of 2018.",
            "Studying the consistency of star ratings and reviews of popular free hybrid Android and iOS apps.",
            "Alleviating patch overfitting with automatic test generation: a study of feasibility and effectiveness for the Nopol repair system.",
            "Software engineering in start-up companies: An analysis of 88 experience reports.",
            "Programmers do not favor lambda expressions for concurrent object-oriented code.",
            "Identification and prioritization of SLR search tool requirements: an SLR and a survey.",
            "An empirical study of game reviews on the Steam platform.",
            "Preface to the Special Issue on Program Comprehension.",
            "Investigating whether and how software developers understand open source software licensing.",
            "Understanding the behaviour of hackers while performing attack tasks in a professional setting and in a public challenge.",
            "Syntax, predicates, idioms - what really affects code complexity?",
            "Introduction to the special issue on software analysis, evolution, and reengineering.",
            "Redundancy-free analysis of multi-revision software artifacts.",
            "An empirical comparison of dependency network evolution in seven software packaging ecosystems.",
            "Shorter identifier names take longer to comprehend.",
            "Effective fault localization of automotive Simulink models: achieving the trade-off between test oracle effort and fault localization accuracy.",
            "Querying distilled code changes to extract executable transformations.",
            "Successes, challenges, and rethinking - an industrial investigation on crowdsourced mobile application testing.",
            "What can Android mobile app developers do about the energy consumption of machine learning?",
            "On the relative value of data resampling approaches for software defect prediction.",
            "How do developers utilize source code from stack overflow?",
            "Test them all, is it worth it? Assessing configuration sampling on the JHipster Web development stack.",
            "An empirical study on the issue reports with questions raised during the issue resolving process.",
            "An empirical analysis of the transition from Python 2 to Python 3.",
            "Balancing the trade-off between accuracy and interpretability in software defect prediction.",
            "The modular and feature toggle architectures of Google Chrome.",
            "An empirical assessment of best-answer prediction models in technical Q&A sites.",
            "Preventing duplicate bug reports by continuously querying bug reports.",
            "Will this clone be short-lived? Towards a better understanding of the characteristics of short-lived clones.",
            "The impact of human factors on the participation decision of reviewers in modern code review.",
            "An ensemble-based model for predicting agile software development effort.",
            "The open science initiative of the Empirical Software Engineering journal.",
            "An empirical study of architecting for continuous delivery and deployment.",
            "Eye tracking analysis of computer program comprehension in programmers with dyslexia.",
            "What's Spain's Paris? Mining analogical libraries from Q&A discussions.",
            "A comprehensive study of pseudo-tested methods.",
            "Comparing the influence of using feature-oriented programming and conditional compilation on comprehending feature-oriented software.",
            "Usage and attribution of Stack Overflow code snippets in GitHub projects.",
            "Categorizing the Content of GitHub README Files.",
            "Experimenting with information retrieval methods in the recovery of feature-code SPL traces.",
            "Discovering community patterns in open-source: a systematic approach and its evaluation.",
            "Commenting source code: is it worth it for small programming tasks?",
            "Guest Editorial: Special Section on Mining Software Repositories.",
            "Mock objects for testing java systems - Why and how developers use them, and how they evolve.",
            "Classifying code comments in Java software systems.",
            "Cross-project code clones in GitHub.",
            "Empowering OCL research: a large-scale corpus of open-source data from GitHub.",
            "High-level software requirements and iteration changes: a predictive model.",
            "GreenScaler: training software energy models with automatic test generation.",
            "An investigation of misunderstanding code patterns in C open-source software projects.",
            "A controlled experiment on time pressure and confirmation bias in functional software testing.",
            "Associating working memory capacity and code change ordering with code review performance.",
            "An empirical study of DLL injection bugs in the Firefox ecosystem.",
            "Studying the difference between natural and programming language corpora.",
            "Automatic query reformulation for code search using crowdsourced knowledge.",
            "The impact of feature reduction techniques on defect prediction models.",
            "Towards prioritizing user-related issue reports of mobile applications.",
            "Gender differences in participation and reward on Stack Overflow.",
            "On the search for industry-relevant regression testing research.",
            "The Android OS stack and its vulnerabilities: an empirical study.",
            "An empirical study of the long duration of continuous integration builds.",
            "Improving the pull requests review process using learning-to-rank algorithms.",
            "Characterizing and identifying reverted commits.",
            "Catalog of energy patterns for mobile applications.",
            "Siamese: scalable and incremental code clone search via multiple code representations.",
            "Extracting and studying the Logging-Code-Issue- Introducing changes in Java-based large-scale open source software systems.",
            "Assessing and optimizing the performance impact of the just-in-time configuration parameters - a case study on PyPy.",
            "Improving requirements-test alignment by prescribing practices that mitigate communication gaps.",
            "On the relation of control-flow and performance feature interactions: a case study.",
            "To the attention of mobile software developers: guess what, test your app!",
            "Software microbenchmarking in the cloud. How bad is it really?",
            "An empirical study on the potential usefulness of domain models for completeness checking of requirements.",
            "Characterizing industry-academia collaborations in software engineering: evidence from 101 projects.",
            "Automatic test improvement with DSpot: a study with ten mature open-source projects.",
            "Understanding the motivations, challenges and needs of Blockchain software developers: a survey.",
            "AspectOCL: using aspects to ease maintenance of evolving constraint specification.",
            "cregit: Token-level blame information in git version control repositories.",
            "Effects of measurements on correlations of software code metrics.",
            "Correction to: older adults and hackathons: a qualitative study.",
            "Editor's Note: Special Section on Software Maintenance and Evolution.",
            "Revisiting supervised and unsupervised models for effort-aware just-in-time defect prediction.",
            "The life-cycle of merge conflicts: processes, barriers, and strategies.",
            "Using bug descriptions to reformulate queries during text-retrieval-based bug localization.",
            "An empirical study of patch uplift in rapid release development pipelines.",
            "Editor's Note: Special Section on Source Code Analysis and Manipulation.",
            "Security code smells in Android ICC.",
            "A comparison of tree- and line-oriented observational slicing.",
            "Semantics-driven extraction of timed automata from Java programs.",
            "Guest editorial: special section on predictive models and data analytics in software engineering.",
            "A novel online supervised hyperparameter tuning procedure applied to cross-company software effort estimation.",
            "Scripted GUI testing of Android open-source apps: evolution of test code and fragility causes.",
            "Guest Editorial: Special Issue on Software Engineering for Mobile Applications.",
            "Designing smart city mobile applications.",
            "Empirical comparison of text-based mobile apps similarity measurement techniques.",
            "Towards understanding and detecting fake reviews in app stores.",
            "An empirical study on quality of Android applications written in Kotlin language.",
            "Studying the characteristics of logging practices in mobile apps: a case study on F-Droid.",
            "DroidLeaks: a comprehensive database of resource leaks in Android apps.",
            "iPerfDetector: Characterizing and detecting performance anti-patterns in iOS applications.",
            "Domain-specific machine translation with recurrent neural network for software localization.",
            "An empirical catalog of code smells for the presentation layer of Android apps.",
            "Empirical study of android repackaged applications.",
            "Evolutionary Fuzzing of Android OS Vendor System Services.",
            "Mining non-functional requirements from App store reviews.",
            "Search-based multi-vulnerability testing of XML injections in web applications.",
            "Correction to: Search-based multi-vulnerability testing of XML injections in web applications.",
            "Fostering good coding practices through individual feedback and gamification: an industrial case study.",
            "ESSMArT way to manage customer requests.",
            "An empirical study on the teams structures in social coding using GitHub projects.",
            "To react, or not to react: Patterns of reaction to API deprecation.",
            "How does code style inconsistency affect pull request integration? An exploratory study on 117 GitHub projects.",
            "Whom are you going to call? determinants of @-mentions in Github discussions.",
            "A study of build inflation in 30 million CPAN builds on 13 Perl versions and 10 operating systems.",
            "The inconsistency between theory and practice in managing inconsistency in requirements engineering.",
            "Identifying gameplay videos that exhibit bugs in computer games.",
            "Practical and effective sandboxing for Linux containers.",
            "Automatic patch generation with context-based change application.",
            "Editor's Note: Special Section on Mining Software Repositories."
        ]
    },
    {
        "name": "ESE",
        "year": "2018",
        "info": "Volume 23, 2018",
        "count": 104,
        "papers": [
            "Genetic Algorithm-based Test Generation for Software Product Line with the Integration of Fault Localization Techniques.",
            "Experiences and challenges in building a data intensive system for data migration.",
            "Search and similarity based selection of use case scenarios: An empirical study.",
            "Impact of incorrect and new requirements on waterfall software project outcomes.",
            "Open innovation using open source tools: a case study at Sony Mobile.",
            "Architecture consistency: State of the practice, challenges and requirements.",
            "Privacy by designers: software developers' privacy mindset.",
            "Examining the stability of logging statements.",
            "An empirical study of the integration time of fixed issues.",
            "Do developers update their library dependencies? - An empirical study on the impact of security advisories on library migration.",
            "Identifying self-admitted technical debt in open source projects using text mining.",
            "Empirical software engineering experts on the use of students and professionals in experiments.",
            "Exploring software development at the very large-scale: a revelatory case study and research agenda for agile method adaptation.",
            "An exploratory qualitative and quantitative analysis of emotions in issue report comments of open source systems.",
            "Appreciation to Empirical Software Engineering Reviewers of 2017.",
            "Toward the development of a conventional time series based web error forecasting framework.",
            "Noise in Mylyn interaction traces and its impact on developers and recommendation systems.",
            "Is cloned code really stable?",
            "An empirical study of early access games on the Steam platform.",
            "EnTagRec ++: An enhanced tag recommendation system for software information sites.",
            "Guest Editorial: Special section on mining software repositories.",
            "The impact of rapid release cycles on the integration delay of fixed issues.",
            "FEVER: An approach to analyze feature-oriented changes and artefact co-evolution in highly configurable systems.",
            "How the R community creates and curates knowledge: an extended study of stack overflow and mailing lists.",
            "Aggregating Association Rules to Improve Change Recommendation.",
            "Addressing problems with replicability and validity of repository mining studies through a smart data platform.",
            "Domain-specific cross-language relevant question retrieval.",
            "Data sets describing the circle of life in Ruby hosting, 2003-2016.",
            "How does developer interaction relate to software quality? an examination of product development data.",
            "On the diffuseness and the impact on maintainability of code smells: a large scale empirical investigation.",
            "A multi-view context-aware approach to Android malware detection and malicious code localization.",
            "Studying the dialogue between users and developers of free apps in the Google Play Store.",
            "Inference of development activities from interaction with uninstrumented applications.",
            "Sentiment Polarity Detection for Software Development.",
            "Are vulnerabilities discovered and resolved like other defects?",
            "An exploratory study on assessing the energy impact of logging on Android applications.",
            "General methods for software architecture recovery: a potential approach and its evaluation.",
            "Empirical study on the discrepancy between performance testing results from virtual and physical environments.",
            "Analyzing a decade of Linux system calls.",
            "Understanding the factors for fast answers in technical Q&A websites - An empirical study of four stack exchange websites.",
            "Challenges and pitfalls on surveying evidence in the software engineering technical literature: an exploratory study with novices.",
            "Reducing user input requests to improve IT support ticket resolution process.",
            "Are tweets useful in the bug fixing process? An empirical study on Firefox and Chrome.",
            "On the impact of state-based model-driven development on maintainability: a family of experiments using UniMod.",
            "An empirical study on the interplay between semantic coupling and co-change of software classes.",
            "Data-efficient performance learning for configurable systems.",
            "Erratum to: Architecture consistency: State of the practice, challenges and requirements.",
            "Persistent code contribution: a ranking algorithm for code contribution in crowdsourced software.",
            "Older adults and hackathons: a qualitative study.",
            "Analyzing the effects of test driven development in GitHub.",
            "An experience report on applying software testing academic results in industry: we need usable automated test generation.",
            "Effect sizes and their variance for AB/BA crossover design studies.",
            "An empirical study on the impact of AspectJ on software evolvability.",
            "Understanding semi-structured merge conflict characteristics in open-source Java projects.",
            "Correctness attraction: a study of stability of software behavior under runtime perturbation.",
            "Editor's Note: Special Issue on Software Maintenance and Evolution.",
            "Code smells for Model-View-Controller architectures.",
            "On the reaction to deprecation of clients of 4 + 1 popular Java APIs and the JDK.",
            "Evolving software trace links between requirements and source code.",
            "Cloned and non-cloned Java methods: a comparative study.",
            "Fusing multi-abstraction vector space models for concern localization.",
            "ProMeTA: a taxonomy for program metamodels in program reverse engineering.",
            "Introduction to the special issue on source code analysis and manipulation.",
            "What are the effects of history length and age on mining software change impact?",
            "The need for software specific natural language techniques.",
            "How effective are mutation testing tools? An empirical analysis of Java mutation testing tools with manual analysis and real faults.",
            "A comparison of code similarity analysers.",
            "Towards reusing hints from past fixes - An exploratory study on thousands of real samples.",
            "Large-scale agile transformation at Ericsson: a case study.",
            "Revisiting the performance of automated approaches for the retrieval of duplicate reports in issue tracking systems that perform just-in-time duplicate retrieval.",
            "Augmenting and structuring user queries to support efficient free-form code search.",
            "Studying software logging using topic models.",
            "Do software models based on the UML aid in source-code comprehensibility? Aggregating evidence from 12 controlled experiments.",
            "Program comprehension of domain-specific and general-purpose languages: replication of a family of experiments using integrated development environments.",
            "App store mining is not enough for app improvement.",
            "Does syntax highlighting help programming novices?",
            "Getting the most from map data structures in Android.",
            "Editor's Note: Special Issue on Automatic Software Repair.",
            "ChangeLocator: locate crash-inducing changes based on crash reports.",
            "Do automated program repair techniques repair hard and important bugs?",
            "A correlation study between automated program repair and test-suite metrics.",
            "Improved representation and genetic operators for linear genetic programming for automated program repair.",
            "Overfitting in semantics-based automated program repair.",
            "Pinpointing and repairing performance bottlenecks in concurrent programs.",
            "System requirements-OSS components: matching and mismatch resolution practices - an empirical study.",
            "APIReal: an API recognition and linking approach for online developer forums.",
            "Finding better active learners for faster literature reviews.",
            "On the correctness of electronic documents: studying, finding, and localizing inconsistency bugs in PDF readers and files.",
            "On the challenges of open-sourcing proprietary software projects.",
            "Studying and detecting log-related issues.",
            "An industrial case study on the use of UML in software maintenance and its perceived benefits and hurdles.",
            "Early prediction of merged code changes to prioritize reviewing tasks.",
            "A systematic approach for performance assessment using process mining - An industrial experience report.",
            "Studying the consistency of star ratings and the complaints in 1 & 2-star user reviews for top free cross-platform Android and iOS apps.",
            "An empirical study of Android Wear user complaints.",
            "Factors and actors leading to the adoption of a JavaScript framework.",
            "Comparison of release engineering practices in a large mature company and a startup.",
            "Supporting the analyzability of architectural component models - empirical findings and tool support.",
            "Foreword to the special issue on empirical research in requirements engineering.",
            "Semi-automatic rule-based domain terminology and software feature-relevant information extraction from natural language user manuals - An approach and evaluation at Roche Diagnostics GmbH.",
            "Detecting requirements defects with NLP patterns: an industrial experience in the railway domain.",
            "Using frame semantics for classifying and summarizing application store reviews.",
            "Using human error information for error prevention.",
            "Four commentaries on the use of students and professionals in empirical software engineering experiments."
        ]
    },
    {
        "name": "ESE",
        "year": "2017",
        "info": "Volume 22, 2017",
        "count": 91,
        "papers": [
            "Appreciation to Empirical Software Engineering reviewers of 2016.",
            "FOREPOST: finding performance problems automatically with feedback-directed learning software testing.",
            "Defect propagation at the project-level: results and a post-hoc analysis on inspection efficiency.",
            "The impact of domain knowledge on the effectiveness of requirements engineering activities.",
            "Extracting and analyzing time-series HCI data from screen-captured task videos.",
            "Zen-ReqOptimizer: a search-based approach for requirements assignment optimization.",
            "Raters' reliability in clone benchmarks construction.",
            "Learning to rank code examples for code search engines.",
            "An experimental search-based approach to cohesion metric evaluation.",
            "Characterizing logging practices in Java-based open source software projects - a replication study in Apache Software Foundation.",
            "The structure and dynamics of knowledge network in domain-specific Q&A sites: a case study of stack overflow.",
            "Stochastic actor-oriented modeling for studying homophily and social influence in OSS projects.",
            "An empirical study of supplementary patches in open source projects.",
            "A stability assessment of solution adaptation techniques for analogy-based software effort estimation.",
            "An empirical study of emergency updates for top android mobile apps.",
            "Why and how developers fork what from whom in GitHub.",
            "Robust Statistical Methods for Empirical Software Engineering.",
            "Do Programmers do Change Impact Analysis in Debugging?",
            "Search-based detection of model level changes.",
            "Investigating the use of moving windows to improve software effort prediction: a replicated study.",
            "Review participation in modern code review - An empirical study of the android, Qt, and OpenStack projects.",
            "Productivity paradoxes revisited - Assessing the relationship between quality maturity levels and labor productivity in brazilian software companies.",
            "Erratum to: Studying high impact fix-inducing changes.",
            "Guest editorial for special section on research in search-based software engineering.",
            "A detailed investigation of the effectiveness of whole test suite generation.",
            "A robust multi-objective approach to balance severity and importance of refactoring opportunities.",
            "Generating valid grammar-based test inputs by means of genetic programming and annotated grammars.",
            "Empirical studies in software and systems traceability.",
            "Achieving traceability in large scale continuous integration and delivery deployment, usage and validation of the eiffel framework.",
            "Estimating the number of remaining links in traceability recovery.",
            "Automated training-set creation for software architecture traceability problem.",
            "Eye movements in software traceability link recovery.",
            "Tackling the term-mismatch problem in automated trace retrieval.",
            "Guest Editorial: Mining software repositories.",
            "A large-scale study of architectural evolution in open-source software systems.",
            "Analysis of license inconsistency in large collections of open source projects.",
            "Predicting the delay of issues with due dates in software projects.",
            "Exception handling bug hazards in Android - Results from a mining study and an exploratory survey.",
            "Do bugs foreshadow vulnerabilities? An in-depth study of the chromium project.",
            "fine-GRAPE: fine-grained APi usage extractor - an approach and dataset to investigate API usage.",
            "A repository of Unix history and evolution.",
            "The Debsources Dataset: two decades of free and open source software.",
            "Guest editorial: Program comprehension.",
            "How programmers read regular code: a controlled experiment using eye tracking.",
            "Documenting and sharing software knowledge using screencasts.",
            "The last line effect explained.",
            "License usage and changes: a large-scale study on gitHub.",
            "Metric-based software reliability prediction approach and its application.",
            "Assessing the quality of industrial avionics software: an extensive empirical evaluation.",
            "Which log level should developers choose for a new logging statement?",
            "Case study on which relations to use for clustering-based software architecture recovery.",
            "Multi-objective reverse engineering of variability-safe feature models based on code dependencies of system variants.",
            "Tracing distributed collaborative development in apache software foundation projects.",
            "Towards just-in-time suggestions for log changes.",
            "Global vs. local models for cross-project defect prediction - A replication study.",
            "Are delayed issues harder to resolve? Revisiting cost-to-fix of defects throughout the lifecycle.",
            "Automatic repair of real bugs in java: a large-scale experiment on the defects4j dataset.",
            "Semantic topic models for source code analysis.",
            "Group versus individual use of power-only EPMcreate as a creativity enhancement technique for requirements elicitation.",
            "Evolutionary trends of developer coordination: a network approach.",
            "Studying the urgent updates of popular games on the Steam platform.",
            "Identifying the implied: Findings from three differentiated replications on the use of security requirements templates.",
            "An initial analysis of software engineers' attitudes towards organizational change.",
            "Effectiveness and efficiency of a domain-specific language for high-performance marine ecosystem simulation: a controlled experiment.",
            "Will this localization tool be effective for this bug? Mitigating the impact of unreliability of information retrieval based bug localization tools.",
            "Guest editorial for special section on success and failure in software engineering.",
            "Naming the pain in requirements engineering - Contemporary problems, causes, and effects in practice.",
            "User satisfaction and system success: an empirical exploration of user involvement in software development.",
            "\"Failures\" to be celebrated: an analysis of major pivots of software startups.",
            "Recurring opinions or productive improvements - what agile teams actually discuss in retrospectives.",
            "Foreword to the special section on negative results in software engineering.",
            "Empirical evaluation of the effects of experience on code quality and programmer productivity: an exploratory study.",
            "On negative results when using sentiment analysis tools for software engineering research.",
            "On the correlation between size and metric validity.",
            "Fragile base-class problem, problem?",
            "Negative results for software effort estimation.",
            "To log, or not to log: using heuristics to identify mandatory log events - a controlled experiment.",
            "Requirements reuse and requirement patterns: a state of the practice survey.",
            "An industry experiment on the effects of test-driven development on external quality and productivity.",
            "An empirical study for software change prediction using imbalanced data.",
            "On the pragmatic design of literature studies in software engineering: an experience-based guideline.",
            "Managing the requirements flow from strategy to release in large-scale agile development: a case study at Ericsson.",
            "On the long-term use of visual gui testing in industrial practice: a case study.",
            "Reengineering legacy applications into software product lines: a systematic mapping.",
            "Model comprehension for security risk assessment: an empirical comparison of tabular vs. graphical representations.",
            "Evaluating code complexity triggers, use of complexity measures and the influence of code complexity on maintenance time.",
            "A study of the relation of mobile device attributes with the user-perceived quality of Android apps.",
            "An empirical study of unspecified dependencies in make-based build systems.",
            "What do developers search for on the web?",
            "Data Transformation in Cross-project Defect Prediction.",
            "Curating GitHub for engineered software projects."
        ]
    },
    {
        "name": "ESE",
        "year": "2016",
        "info": "Volume 21, 2016",
        "count": 74,
        "papers": [
            "Appreciation to empirical software engineering reviewers of 2015.",
            "Employing secure coding practices into industrial applications: a case study.",
            "An empirical study of the textual similarity between source code and source code summaries.",
            "Value-cognitive boosting with a support vector machine for cross-project defect prediction.",
            "Weighing lexical information for software clustering in the context of architecture recovery.",
            "Linguistic antipatterns: what they are and how developers perceive them.",
            "Exploring the costs of technical debt management - a case study.",
            "Empirical assessment of machine learning-based malware detectors for Android - Measuring the gap between in-the-lab and in-the-wild validation scenarios.",
            "Does the level of detail of UML diagrams affect the maintainability of source code?: a family of experiments.",
            "Continuously mining distributed version control systems: an empirical study of how Linux uses Git.",
            "Guest editorial: Special section on mining software repositories.",
            "The impact of tangled code changes on defect prediction models.",
            "Improving bug management using correlations in crash reports.",
            "A contextual approach towards more accurate duplicate bug report detection and ranking.",
            "Assessing software product line potential: an exploratory industrial case study.",
            "Preprocessor-based variability in open-source and industrial software systems: An empirical study.",
            "Understanding and addressing exhibitionism in Java empirical research about method accessibility.",
            "Development nature matters: An empirical study of code clones in JavaScript applications.",
            "Automatic identifier inconsistency detection using code dictionary.",
            "Studying high impact fix-inducing changes.",
            "From Aristotle to Ringelmann: a large-scale analysis of team productivity and coordination in Open Source Software projects.",
            "Open innovation in software engineering: a systematic mapping study.",
            "A field study of how developers locate features in source code.",
            "Guest editorial: special section on software reverse engineering.",
            "On the detection of custom memory allocators in C binaries.",
            "Scalable data structure detection and classification for C/C++ binaries.",
            "Inferring extended finite state machine models from software executions.",
            "Mining architectural violations from version history.",
            "Evaluating the impact of design pattern and anti-pattern dependencies on changes and faults.",
            "Investigating technical and non-technical factors influencing modern code review.",
            "An empirical study of integration activities in distributions of open source software.",
            "Assessing the impact of real-time machine translation on multilingual meetings in global software projects.",
            "An experiment on the impact of transparency on the effectiveness of requirements documents.",
            "Analyzing and automatically labelling the types of user issues that are raised in mobile app reviews.",
            "An empirical study of software release notes.",
            "Comparing and experimenting machine learning techniques for code smell detection.",
            "What are mobile developers asking about? A large scale study using stack overflow.",
            "Assessing refactorings for usability in e-commerce applications.",
            "An empirical examination of the prevalence of inhibitors to the parallelizability of open source software systems.",
            "Experimentation with dynamic simulation models in software engineering: planning and reporting guidelines.",
            "Fresh apps: an empirical study of frequently-updated mobile apps in the Google play store.",
            "What Java developers know about compatibility, and why this matters.",
            "Perspectives on refactoring planning and practice: an empirical study.",
            "Using text clustering to predict defect resolution time: a conceptual replication and an evaluation of prediction accuracy.",
            "Code clones and developer behavior: results of two surveys of the clone research community.",
            "Archetypal personalities of software engineers and their work preferences: a new perspective for empirical studies.",
            "Automated bug assignment: Ensemble-based machine learning in large scale industrial contexts.",
            "Foreword to the special issue on empirical evidence on software product line engineering.",
            "A systematic test case selection methodology for product lines: results and insights from an industrial case study.",
            "Performance variability in software product lines: proposing theories from a case study.",
            "Quantifying structural attributes of system decompositions in 28 feature-oriented software product lines - An exploratory study.",
            "The effects of visualization and interaction techniques on feature model configuration.",
            "Coevolution of variability models and related software artifacts - A fresh look at evolution patterns in the Linux kernel.",
            "Breathing ontological knowledge into feature model synthesis: an empirical study.",
            "A survey on the use of topic models when mining software repositories.",
            "Game of detections: how are security vulnerabilities discovered in the wild?",
            "Studying the needed effort for identifying duplicate issues.",
            "Change-based test selection: an empirical evaluation.",
            "Guest editorial: mining software repositories.",
            "An in-depth study of the promises and perils of mining GitHub.",
            "Studying just-in-time defect prediction using cross-project models.",
            "Towards building a universal defect prediction model with rank transformed predictors.",
            "An empirical study of the impact of modern code review practices on software quality.",
            "Prompter - Turning the IDE into a self-confident programming assistant.",
            "Cheap talk, cooperation, and trust in global software engineering - An evolutionary game theory model with empirical support.",
            "An automatic method for assessing the versions affected by a vulnerability.",
            "On the unreliability of bug severity data.",
            "Large-scale information retrieval in software engineering - an experience report from industrial application.",
            "An exploratory study of api changes and usages based on apache and eclipse ecosystems.",
            "An automated software reliability prediction system for safety critical software.",
            "A guest editorial: special section on search-based software engineering.",
            "Improving the performance of OCL constraint solving with novel heuristics for logical operations: a search-based approach.",
            "On the use of many quality attributes for software refactoring: a many-objective search-based software engineering approach.",
            "A comparative study of many-objective evolutionary algorithms for the discovery of software architectures."
        ]
    },
    {
        "name": "ESE",
        "year": "2015",
        "info": "Volume 20, 2015",
        "count": 55,
        "papers": [
            "Studying the relationship between logging characteristics and the code quality of platform software.",
            "Understanding the Influence of User Participation and Involvement on System Success - a Systematic Mapping Study.",
            "HAZOP-based identification of events in use cases.",
            "A practical guide to controlled experiments of software engineering tools with human participants.",
            "An experimental investigation comparing individual and collaborative work productivity when using desktop and cloud modeling tools.",
            "Mining software repair models for reasoning on the search space of automated program fixing.",
            "UML model refactoring: a systematic literature review.",
            "Management of community contributions.",
            "Guest editorial: special section on mining software repositories.",
            "Towards improving statistical modeling of software engineering data: think locally, act globally!",
            "Understanding the impact of rapid releases on software quality - The case of firefox.",
            "Green mining: a methodology of relating software change and configuration to power consumption.",
            "Guest editorial: special section on software maintenance and evolution.",
            "Do developers benefit from requirements traceability when evolving and maintaining a software system?",
            "An empirical study on the importance of source code entities for requirements traceability.",
            "Do topics make sense to managers and developers?",
            "Modelling the 'hurried' bug report reading process to summarize bug reports.",
            "Detecting and refactoring code smells in spreadsheet formulas.",
            "Multi-objective ant colony optimization for requirements selection.",
            "1600 faults in 100 projects: automatically finding faults while achieving high coverage with EvoSuite.",
            "Empirical evidence on the link between object-oriented measures and external quality attributes: a systematic literature review.",
            "Visual GUI testing in practice: challenges, problemsand limitations.",
            "Object-oriented software extensions in practice.",
            "Achieving scalable mutation-based generation of whole test suites.",
            "Transfer learning in effort estimation.",
            "An experiment on the effectiveness and efficiency of exploratory testing.",
            "Mining system logs to learn error predictors: a case study of a telemetry system.",
            "Fault density, fault types, and spectra-based fault localization.",
            "An elicitation instrument for operationalising GQM+Strategies (GQM+S-EI).",
            "Fostering effective inter-team knowledge sharing in agile software development.",
            "Are test smells really harmful? An empirical study.",
            "Classification model for code clones based on machine learning.",
            "The impact of imperfect change rules on framework API evolution identification: an empirical study.",
            "Confounding parameters on program comprehension: a literature survey.",
            "Introduction to the special issue on software maintenance and evolution research.",
            "Supporting and accelerating reproducible empirical research in software evolution and maintenance using TraceLab Component Library.",
            "Should I follow this fault localization tool's output? - Automated prediction of fault localization effectiveness.",
            "How the Apache community upgrades dependencies: an evolutionary study.",
            "Developer initiation and social interactions in OSS: A case study of the Apache Software Foundation.",
            "Automated prediction of bug report priority using multi-factor analysis.",
            "On rapid releases and software testing: a case study and a semi-systematic literature review.",
            "Towards a decision-making structure for selecting a research design in empirical software engineering.",
            "A framework and architecture for rapid software development: a success story.",
            "A large study on the effect of code obfuscation on the quality of java code.",
            "How product owner teams scale agile methods to large distributed enterprises.",
            "Recommending reference API documentation.",
            "A Large-Scale Empirical Study of the Relationship between Build Technology and Build Maintenance.",
            "Case studies synthesis: a thematic, cross-case, and narrative synthesis worked example.",
            "Link analysis algorithms for static concept location: an empirical assessment.",
            "Software requirements prioritization and selection using linguistic tools and constraint solvers - a controlled experiment.",
            "Optimising agile development practices for the maintenance operation: nine heuristics.",
            "Charting the API minefield using software telemetry data.",
            "An empirical comparison of model-based and capture and replay approaches for performance testing.",
            "The kanban approach, between agility and leanness: a systematic review.",
            "Semi-automatic selection of primary studies in systematic literature reviews: is it reasonable?"
        ]
    },
    {
        "name": "ESE",
        "year": "2014",
        "info": "Volume 19, 2014",
        "count": 61,
        "papers": [
            "How changes affect software entropy: an empirical study.",
            "Contributions of model checking and CoFI methodology to the development of space embedded software.",
            "A case study on bypass testing of web applications.",
            "An empirically based terminology and taxonomy for global software engineering.",
            "Software defect prediction using Bayesian networks.",
            "Static test case prioritization using topic models.",
            "MND-SCEMP: an empirical study of a software cost estimation modeling process in the defense domain.",
            "Investigation of individual factors impacting the effectiveness of requirements inspections: a replicated experiment.",
            "Replications of software engineering experiments.",
            "On the role of tests in test-driven development: a differentiated and partial replication.",
            "Are test cases needed? Replicated comparison between exploratory and test-case-based software testing.",
            "A replicated quasi-experimental study on the influence of personality and team climate in software development.",
            "Effectiveness for detecting faults within and outside the scope of testing techniques: an independent replication.",
            "Examination of the software architecture change characterization scheme using three empirical studies.",
            "Configuring latent Dirichlet allocation based feature location.",
            "Replication of empirical studies in software engineering research: a systematic mapping study.",
            "An industrial study of applying input space partitioning to test financial calculation engines.",
            "On using machine learning to automatically classify software applications into domain categories.",
            "What are developers talking about? An analysis of topics and trends in Stack Overflow.",
            "An empirical study of control logic specifications for programmable logic controllers.",
            "Comprehensibility of UML-based software product line specifications - A controlled experiment.",
            "Investigating the effects of personality traits on pair programming in a higher education setting through a family of experiments.",
            "A successful application of a Test-Driven Development strategy in the industrial environment.",
            "Predicting object-oriented class reuse-proneness using internal quality attributes.",
            "Data collection in global software engineering research: learning from past experience.",
            "A flexible method to estimate the software development effort based on the classification of projects and localization of comparisons.",
            "Conducting quantitative software engineering studies with Alitheia Core.",
            "The impact of UML modeling on defect density and defect resolution time in a proprietary system.",
            "On the variation and specialisation of workload - A case study of the Gnome ecosystem community.",
            "Correlations between bugginess and time-based commit characteristics.",
            "A family of experiments to assess the effectiveness and efficiency of source code obfuscation techniques.",
            "An evaluation of the statistical convertibility of Function Points into COSMIC Function Points.",
            "Assessing the capability of code smells to explain maintenance problems: an empirical study combining quantitative and qualitative data.",
            "Challenges and industry practices for managing software variability in small and medium sized enterprises.",
            "Experiences with incorporating formal techniques into industrial practice.",
            "Resolving the challenges of time and distance.",
            "Agile vs. structured distributed software development: A case study.",
            "From offshore outsourcing to insourcing and partnerships: four failed outsourcing attempts.",
            "Special issue on program comprehension.",
            "High-MCC Functions in the Linux Kernel.",
            "Measuring and modeling programming experience.",
            "An empirical study on the impact of static typing on software maintainability.",
            "Labeling source code with information retrieval methods: an empirical study.",
            "Guest editorial: Search-based software engineering.",
            "An experimental evaluation of the importance of randomness in hill climbing searches applied to software engineering problems.",
            "AutoRELAX: automatically RELAXing a goal model to address uncertainty.",
            "Evolving robust networks for systems-of-systems: is it viable for large networks?",
            "Software process evaluation: a machine learning framework with application to defect management process.",
            "Recovering from a decade: a systematic mapping of information retrieval approaches to software traceability.",
            "Automating extract class refactoring: an improved method and its evaluation.",
            "Bug characteristics in open source software.",
            "An experimental investigation on the effects of context on source code identifiers splitting and expansion.",
            "An empirical study of identifier splitting techniques.",
            "Variation factors in the design and analysis of replicated controlled experiments - Three (dis)similar studies on inspections versus unit testing.",
            "Challenges and practices in aligning requirements with verification and validation: a case study of six companies.",
            "SWordNet: Inferring semantically related words from software context.",
            "Empirical study on the maintainability of Web applications: Model-driven Engineering vs Code-centric.",
            "Reporting experiments to satisfy professionals' information needs.",
            "Validating differential relationships between risk categories and project performance as perceived by managers.",
            "Performance assessment of an architecture with adaptative interfaces for people with special needs.",
            "Waste identification and elimination in information technology organizations."
        ]
    },
    {
        "name": "ESE",
        "year": "2013",
        "info": "Volume 18, 2013",
        "count": 37,
        "papers": [
            "Kernel methods for software effort estimation - Effects of different kernel functions and bandwidths on estimation accuracy.",
            "Can traditional fault prediction models be used for vulnerability prediction?",
            "Effort estimation of FLOSS projects: a study of the Linux kernel.",
            "An empirical study of the state of the practice and acceptance of model-driven engineering in four industrial cases.",
            "All complaints are not created equal: text analysis of open source software defect reports.",
            "A study of methods for textual satisfaction assessment.",
            "Preface to the special issue on program comprehension.",
            "Understanding Ajax applications by connecting client and server-side execution traces.",
            "The impact of identifier style on effort and comprehension.",
            "Integrating information retrieval, execution and link analysis algorithms to improve feature location in software.",
            "Understanding privacy policies - A study in empirical analysis of language usage.",
            "Studying the impact of social interactions on software quality.",
            "Predictive models in software engineering.",
            "Predicting the Flow of Defect Correction Effort using a Bayesian Network Model.",
            "The limited impact of individual developer data on software defect prediction.",
            "Using tabu search to configure support vector regression for effort estimation.",
            "Introduction to the special issue on search based software engineering.",
            "GPGPU test suite minimisation: search based software engineering performance improvement using graphics cards.",
            "Parameter tuning or default values? An empirical investigation in search-based software engineering.",
            "Using error abstraction and classification to improve requirement quality: conclusions from a family of four empirical studies.",
            "On the value of outlier elimination on software effort estimation research.",
            "Do background colors improve program comprehension in the #ifdef hell?",
            "Performance and reliability prediction for evolving service-oriented software systems - Industrial experience report.",
            "STAMINA: a competition to encourage the development and assessment of software model inference techniques.",
            "Software model synthesis using satisfiability solvers.",
            "Guest editorial: reverse engineering.",
            "What your plug-in test suites really test: an integration perspective on test suite understanding.",
            "Using structural and semantic measures to improve software modularization.",
            "Integrating conceptual and logical couplings for change impact analysis in software.",
            "On the impact of software evolution on software clustering.",
            "Studying re-opened bugs in open source software.",
            "Introduction to the special issue on mining software repositories.",
            "Adoption and use of Java generics.",
            "How do open source communities blog?",
            "Automated topic naming - Supporting cross-project analysis of software maintenance activities.",
            "How (and why) developers use the dynamic features of programming languages: the case of smalltalk.",
            "Software Bertillonage - Determining the provenance of software development artifacts."
        ]
    },
    {
        "name": "ESE",
        "year": "2012",
        "info": "Volume 17, 2012",
        "count": 27,
        "papers": [
            "Special issue on repeatable results in software engineering prediction.",
            "The difficulties of building generic reliability models for software.",
            "Validity and reliability of evaluation procedures in comparative studies of effort prediction models.",
            "A permutation test based on regression error characteristic curves for software cost estimation models.",
            "On the dataset shift problem in software engineering prediction models.",
            "On the reproducibility of empirical software engineering studies based on data retrieved from development repositories.",
            "A replicated assessment and comparison of adaptation techniques for analogy-based effort estimation.",
            "Location pairs: a test coverage metric for shared-memory concurrent programs.",
            "A qualitative human-centric evaluation of flexibility in middleware implementations.",
            "The ability of object-oriented metrics to predict change-proneness: a meta-analysis.",
            "An exploratory study of the impact of antipatterns on class change- and fault-proneness.",
            "Program comprehension of domain-specific and general-purpose languages: comparison using a family of experiments.",
            "Replication of an experiment on linguistic tool support for consolidation of requirements from multiple sources.",
            "Introduction to the special issue on software repository mining in 2009.",
            "Time variance and defect prediction in software projects - Towards an exploitation of periods of stability and change as well as a notion of concept drift in software projects.",
            "On the use of calling structure information to improve fault prediction.",
            "Analyzing and mining a code search engine usage log.",
            "Refining code ownership with synchronous changes.",
            "Introduction to the Special Issue on Mining Software Repositories in 2010.",
            "Clones: what is that smell?",
            "Evaluating defect prediction approaches: a benchmark and an extensive comparison.",
            "The evolution of Java build systems.",
            "Developing a grounded theory to explain the practices of self-organizing Agile teams.",
            "Computer-mediated communication to support distributed requirements elicitations and negotiations tasks.",
            "Strengths and barriers behind the successful agile deployment - insights from the three software intensive companies in Finland.",
            "What should developers be aware of? An empirical study on the directives of API documentation.",
            "Software development effort prediction of industrial projects applying a general regression neural network."
        ]
    },
    {
        "name": "ESE",
        "year": "2011",
        "info": "Volume 16, 2011",
        "count": 28,
        "papers": [
            "Introduction to the special issue on search based software engineering.",
            "WCET analysis of modern processors using multi-criteria optimisation.",
            "A study of the bi-objective next release problem.",
            "Evaluating improvements to a meta-heuristic search for constrained interaction testing.",
            "Using search-based algorithms for Ajax event sequence generation during testing.",
            "Design evolution metrics for defect prediction in object oriented systems.",
            "A multiple comparative study of test-with development product changes and their effects on team speed and product quality.",
            "Investigating the use of Support Vector Regression for web effort estimation.",
            "Reporting computing projects through structured abstracts: a quasi-experiment.",
            "Behavioral economics in software quality engineering.",
            "The role of non-exact replications in software engineering experiments.",
            "Studying the co-evolution of production and test code in open source and industrial developer test processes through repository mining.",
            "A method for evaluating rigor and industrial relevance of technology evaluations.",
            "An empirical study on the influence of pattern roles on change-proneness.",
            "Qualitative research in software engineering.",
            "Qualitative research on software development: a longitudinal case study methodology.",
            "Getting the whole story: an experience report on analyzing data elicited using the war stories procedure.",
            "Using grounded theory to study the experience of software development.",
            "The search for a research method for studying OSS process innovation.",
            "Empirical research in software architecture: opportunities, challenges, and approaches.",
            "A practice-driven systematic review of dependency analysis solutions.",
            "From monolithic to component-based performance evaluation of software architectures - A series of experiments analysing accuracy and effort.",
            "Assessing architectural evolution: a case study.",
            "Characteristics of multiple-component defects and architectural hotspots: a large system case study.",
            "A field study of API learning obstacles.",
            "Eliciting user requirements using Appreciative inquiry.",
            "Using structural and textual information to capture feature coupling in object-oriented software.",
            "Calculation and optimization of thresholds for sets of software metrics."
        ]
    },
    {
        "name": "ESE",
        "year": "2010",
        "info": "Volume 15, 2010",
        "count": 25,
        "papers": [
            "An empirical study on the maintenance of source code clones.",
            "A checklist for integrating student empirical studies with research and teaching goals.",
            "Fuzzy grey relational analysis for software effort estimation.",
            "Empirical evidence in global software engineering: a systematic review.",
            "Improving automated requirements trace retrieval: a study of term-based enhancement methods.",
            "Fault-prone module detection using large-scale text features based on spam filtering.",
            "Understanding cost drivers of software evolution: a quantitative and qualitative investigation of change effort in two evolving software systems.",
            "Distributed agile: project management in a global environment.",
            "Assessing the state of software in a large enterprise.",
            "Applying empirical software engineering to software architecture: challenges and lessons learned.",
            "Comparing the effectiveness of several modeling methods for fault prediction.",
            "A multiplicative model of software defect repair times.",
            "Guest editorial: Special issue on software reliability engineering.",
            "An adaptive QoS-aware fault tolerance strategy for web services.",
            "Testing peer-to-peer systems.",
            "Profiling the operational behavior of OS device drivers.",
            "Support planning and controlling of early quality assurance by combining expert judgment and defect data - a case study.",
            "An experimental comparison of ER and UML class diagrams for data modelling.",
            "An empirical study on the efficiency of different design pattern representations in UML class diagrams.",
            "LSEbA: least squares regression and estimation by analogy in a semi-parametric model for software cost estimation.",
            "An empirical investigation into open source web applications' implementation vulnerabilities.",
            "Testing the theory of relative defect proneness for closed-source software.",
            "Measuring fidelity to extreme programming: a psychometric approach.",
            "Refining the systematic literature review process - two participant-observer case studies.",
            "The effect of moving from a plan-driven to an incremental software development approach with agile practices - An industrial case study."
        ]
    },
    {
        "name": "ESE",
        "year": "2009",
        "info": "Volume 14, 2009",
        "count": 26,
        "papers": [
            "Special issue on information retrieval for program comprehension.",
            "Using information retrieval based coupling measures for impact analysis.",
            "An information retrieval process to aid in the analysis of code clones.",
            "Assessing IR-based traceability recovery tools through controlled experiments.",
            "An empirical analysis of information retrieval based concept location techniques in software comprehension.",
            "Guidelines for conducting and reporting case study research in software engineering.",
            "On modeling software defect repair time.",
            "An experimental investigation of personality types impact on pair effectiveness in pair programming.",
            "A case study comparing defect profiles of a reused framework and of applications reusing it.",
            "Guest editors introduction: special issue on mining software repositories.",
            "Macro-level software evolution: a case study of a large software compilation.",
            "Toward an understanding of bug fix patterns.",
            "Visual querying and analysis of large software repositories.",
            "On guiding the augmentation of an automated test suite via mutation analysis.",
            "Another viewpoint on \"evaluating web software reliability based on workload and failure data extracted from server logs\".",
            "Exploring the effects of SourceForge.net coordination and communication tools on the efficiency of open source projects using data envelopment analysis.",
            "Empirical evaluation of an educational game on software measurement.",
            "Software architecture evaluation methods based on cost benefit analysis and quantitative decision making.",
            "A subject-based empirical evaluation of SSUCD's performance in reducing inconsistencies in use case models.",
            "Developing search strategies for detecting relevant experiments.",
            "On the relative value of cross-company and within-company data for defect prediction.",
            "Experiences in developing and applying a software engineering technology testbed.",
            "A study of the non-linear adjustment for analogy based software cost estimation.",
            "Practical challenges of requirements prioritization based on risk estimation.",
            "Assessing the understandability of UML statechart diagrams with composite states - A family of empirical studies.",
            "Experimental evaluation of a tool for the verification and transformation of source code in event-driven systems."
        ]
    },
    {
        "name": "ESE",
        "year": "2008",
        "info": "Volume 13, 2008",
        "count": 32,
        "papers": [
            "In this issue.",
            "Replicating studies on cross- vs single-company effort models using the ISBSG Database.",
            "Comparing distributed and face-to-face meetings for software architecture evaluation: A controlled experiment.",
            "Analysis of attribute weighting heuristics for analogy-based software effort estimation method AQUA+.",
            "Evaluating guidelines for reporting empirical software engineering studies.",
            "In this issue.",
            "The internal consistency and precedence of key process areas in the capability maturity model for software.",
            "A statistical framework for analyzing the duration of software projects.",
            "A binomial software reliability model based on coverage of structural testing criteria.",
            "The role of replications in Empirical Software Engineering.",
            "The role of replications in empirical software engineering - a word of warning.",
            "Triangulation as a basis for knowledge discovery in software engineering.",
            "In this issue.",
            "Cooperative method development.",
            "Tests for consistent measurement of external subjective software quality attributes.",
            "Realizing quality improvement through test driven development: results and experiences of four industrial teams.",
            "The impact of agile practices on communication in software development.",
            "In this issue.",
            "Analysing the effectiveness of rule-coverage as a reduction criterion for test suites of grammar-based software.",
            "Exploiting the empirical characteristics of program dependences for improved forward computation of dynamic slices.",
            "Towards understanding the relationship between team climate and software quality - a quasi-experimental study.",
            "Presenting software engineering results using structured abstracts: a randomised experiment.",
            "Editorial, special issue, repeatable experiments in software engineering.",
            "Theory of relative defect proneness.",
            "On the effectiveness of early life cycle defect prediction with Bayesian Nets.",
            "Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models.",
            "Techniques for evaluating fault prediction models.",
            "Guest editors' introduction: special issue from the 13th working conference on reverse engineering (WCRE 2006).",
            "Empirical evaluation of clone detection using syntax suffix trees.",
            "\"Cloning considered harmful\" considered harmful: patterns of cloning in software.",
            "An experiment on the role of graphical elements in architecture visualization.",
            "An industrial case study in reconstructing requirements views."
        ]
    },
    {
        "name": "ESE",
        "year": "2007",
        "info": "Volume 12, 2007",
        "count": 30,
        "papers": [
            "In this issue.",
            "Pair-wise comparisons versus planning game partitioning - experiments on requirements prioritisation techniques.",
            "Simulated annealing applied to test generation: landscape characterization and stopping criteria.",
            "A flexible method for software effort estimation by analogy.",
            "Protocols in the use of empirical software engineering artifacts.",
            "In this issue.",
            "Understanding component co-evolution with a study on Linux.",
            "A study of effectiveness of dynamic slicing in locating real faults.",
            "A replicated empirical study of a selection method for software reliability growth models.",
            "Empirical evaluation of optimization algorithms when used in goal-oriented automated test data generation techniques.",
            "In this issue.",
            "Identifying and addressing problems in object-oriented framework reuse.",
            "Quality of manual data collection in Java software: an empirical investigation.",
            "Empirical analysis on the correlation between GCC compiler warnings and revision numbers of source files in five industrial software projects.",
            "Global and task effects in information-seeking among software engineers.",
            "In this issue.",
            "A practical approach to testing GUI systems.",
            "Quantifying identifier quality: an analysis of trends.",
            "An empirical study of cycles among classes in Java.",
            "Experimenting with software testbeds for evaluating new technologies.",
            "In this issue.",
            "Trace anomalies as precursors of field failures: an empirical study.",
            "Quality, productivity and economic benefits of software reuse: a review of industrial studies.",
            "Building measure-based prediction models for UML class diagram maintainability.",
            "Empirical studies in reverse engineering: state of the art and future trends.",
            "In this issue.",
            "An empirical study of a reverse engineering method for the aggregation relationship based on operation propagation.",
            "The effect of experience on the test-driven development process.",
            "Maximising the information gained from a study of static analysis technologies for concurrent software.",
            "Philips experiences in global distributed software development."
        ]
    },
    {
        "name": "ESE",
        "year": "2006",
        "info": "Volume 11, 2006",
        "count": 25,
        "papers": [
            "In This Issue.",
            "The Economics of Unit Testing.",
            "Prioritizing JUnit Test Cases: An Empirical Assessment and Cost-Benefits Analysis.",
            "Empirical Characterization of Session-Based Workload and Reliability for Web Servers.",
            "Perspective-Based Reading: A Replicated Experiment Focused on Individual Reviewer Effectiveness.",
            "The Impact of an Agile Methodology on the Well Being of Development Teams.",
            "In this issue.",
            "An experimental evaluation of a higher-ordered-typed-functional specification-based test-generation technique.",
            "Integrating agile software development into stage-gate managed product development.",
            "Using patterns for the refinement and translationof UML models: A controlled experiment.",
            "Investigating the extreme programming system-An empirical study.",
            "An experiment on linguistic tool support for consolidation of requirements from multiple sources in market-driven product development.",
            "EMSE special issue from ICSM and Metrics.",
            "Replaying development history to assess the effectiveness of change propagation tools.",
            "An empirical study of fine-grained software modifications.",
            "Subjective evaluation of software evolvability using code smells: An empirical study.",
            "An empirical study of variations in COTS-based software development processes in the Norwegian IT industry.",
            "Benchmarking k-nearest neighbour imputation with homogeneous Likert data.",
            "In this issue.",
            "Input validation analysis and testing.",
            "Can observational techniques help novices overcome the software inspection learning curve? An empirical investigation.",
            "An empirical study of the effect of complexity, platform, and program type on software development effort of business applications.",
            "Experiences from introducing UML-based development in a large safety-critical project.",
            "An evaluation of combination strategies for test case selection.",
            "Empirical software engineering: Industrial experience reports."
        ]
    },
    {
        "name": "ESE",
        "year": "2005",
        "info": "Volume 10, 2005",
        "count": 22,
        "papers": [
            "Expert Estimation of Web-Development Projects: Are Software Professionals in Technical Roles More Optimistic Than Those in Non-Technical Roles?",
            "A Survey of Documentation Practice within Corrective Maintenance.",
            "OPM vs. UML - Experimenting with Comprehension and Construction of Web Application Models.",
            "An Empirical Exploration of the Distributions of the Chidamber and Kemerer Object-Oriented Metrics Suite.",
            "In this Issue.",
            "Collecting Feedback during Software Engineering Experiments.",
            "An Investigation of a Method for Identifying a Software Architecture Candidate with Respect to Quality Attributes.",
            "Assessment of a New Three-Group Software Quality Classification Technique: An Empirical Case Study.",
            "The Impact of Project Planning Team Experience on Software Project Cost Estimates.",
            "A Short Note on Safest Default Missingness Mechanism Assumptions.",
            "In This Issue.",
            "Requirements Engineering and Downstream Software Development: Findings from a Case Study.",
            "Investigating the Role of Use Cases in the Construction of Class Diagrams.",
            "Studying Software Engineers: Data Collection Techniques for Software Field Studies.",
            "Using Metaphor to Analyse Qualitative Data: Vulcans and Humans in Software Development.",
            "Methodology Support in CASE Tools and Its Impact on Individual Acceptance and Use: A Controlled Experiment.",
            "In this Issue.",
            "Supporting Controlled Experimentation with Testing Techniques: An Infrastructure and its Potential Impact.",
            "A Characterisation Schema for Software Testing Techniques.",
            "The Influence of the Level of Abstraction on the Evolvability of Conceptual Models of Information Systems.",
            "An Empirical Approach to Characterizing Risky Software Projects Based on Logistic Regression Analysis.",
            "When Software Engineers Met Research Scientists: A Case Study."
        ]
    },
    {
        "name": "ESE",
        "year": "2004",
        "info": "Volume 9, 2004",
        "count": 15,
        "papers": [
            "Reviewing 25 Years of Testing Technique Experiments.",
            "An Industrial Case Study of Immediate Benefits of Requirements Engineering Process Improvement at the Australian Center for Unisys Software.",
            "Evaluation of Usage-Based Reading-Conclusions after Three Experiments.",
            "Knowledge-Sharing Issues in Experimental Software Engineering.",
            "A Controlled Experiment Comparing the Maintainability of Programs Designed with and without Design Patterns-A Replication in a Real Programming Environment.",
            "Open-Source Change Logs.",
            "Are Individual Differences in Software Development Performance Possible to Capture Using a Quantitative Survey?.",
            "Comparative Assessment of Software Quality Classification Techniques: An Empirical Case Study.",
            "The Impact of Background and Experience on Software Inspections.",
            "A Focus on the Human Side of Software Engineering.",
            "Impacts of the Organizational Model on Testing: Three Industrial Cases.",
            "Regression Models of Software Development Effort Estimation Accuracy and Bias.",
            "Group Processes in Software Effort Estimation.",
            "Are Reviews an Alternative to Pair Programming?.",
            "An Ethnographic Study of XP Practice."
        ]
    },
    {
        "name": "ESE",
        "year": "2003",
        "info": "Volume 8, 2003",
        "count": 15,
        "papers": [
            "Software Process Improvement Problems in Twelve Software Companies: An Empirical Analysis.",
            "Techniques of Successful Application of Factor Analysis in Software Measurement.",
            "Designing and Conducting an Empirical Study on Test Management Automation.",
            "An Empirically-Based Process for Software Architecture Evaluation.",
            "Fault-Threshold Prediction with Linear Programming Methodologies.",
            "A Further Empirical Investigation of the Relationship Between MRE and Project Size.",
            "A Comparative Study of Cost Estimation Models for Web Hypermedia Applications.",
            "An Investigation on the Occurrence of Service Requests in Commercial Software Applications.",
            "Object-Oriented Function Points: An Empirical Validation.",
            "Fault Prediction Modeling for Software Quality Estimation: Comparing Commonly Used Techniques.",
            "Prioritizing and Assessing Software Project Success Factors and Project Characteristics using Subjective Data.",
            "Empirical Evaluations of Usage-Based Reading and Fault Content Estimation for Software Inspections.",
            "Analogy-Based Practical Classification Rules for Software Quality Estimation.",
            "Determining the Distribution of Maintenance Categories: Survey versus Measurement.",
            "An Externally Replicated Experiment for Evaluating the Learning Effectiveness of Using Simulations in Software Project Management Education."
        ]
    },
    {
        "name": "ESE",
        "year": "2002",
        "info": "Volume 7, 2002",
        "count": 19,
        "papers": [
            "In This Issue.",
            "Can you Trust a Single Data Source Exploratory Software Engineering Case Study?",
            "An Initial Experimental Assessment of the Dynamic Modelling in UML.",
            "Experimental Evaluation of Program Slicing for Fault Localization.",
            "Software Group Reviews and the Impact of Procedural Roles on Defect Detection Performance.",
            "Software Process Improvement Motivators: An Analysis using Multidimensional Scaling.",
            "Object-Oriented Program Comprehension: Effect of Expertise, Task and Phase.",
            "Estimating Maintenance Effort by Analogy.",
            "Improved Software Cost Estimation - A Robust and Interpretable Modelling Method and a Comprehensive Empirical Investigation.",
            "A Review of Experimental Investigations into Object-Oriented Technology.",
            "Empirical Evaluation of Aesthetics-based Graph Layout.",
            "Using a Reliability Growth Model to Control Software Inspection.",
            "Uncertain Classification of Fault-Prone Software Modules.",
            "An Empirical Method for Selecting Software Reliability Growth Models.",
            "An Industrial Case Study to Examine a Non-Traditional Inspection Implementation for Requirements Specifications.",
            "Comments on 'A Simulation Tool for Efficient Analogy Based Cost Estimation', by L. Angelis and I. Stamelos, published in Empirical Software Engineering.",
            "Reply to comments by M. Jorgensen, on the paper: 'A Simulation Tool for Efficient Analogy Based Cost Estimation' by L. Angelis and I. Stamelos, Published in Empirical Software Engineering.",
            "Knowledge Management in Medium-Sized Software Consulting Companies.",
            "Enabling Software Process Improvement: An Investigation of the Importance of Organizational Issues."
        ]
    },
    {
        "name": "ESE",
        "year": "2001",
        "info": "Volume 6, 2001",
        "count": 24,
        "papers": [
            "Replicated Case Studies for Investigating Quality Factors in Object-Oriented Designs.",
            "Controlling Overfitting in Classification-Tree Models of Software Quality.",
            "Cost-effective Detection of Software Defects through Perspective-based Inspections.",
            "Beg, Borrow, or Steal: Using Multidisciplinary Approaches in Empirical Software Engineering Research.",
            "Ethical Issues in Empirical Software Engineering: The Limits of Policy.",
            "Interface Mutation Test Adequacy Criterion: An Empirical Evaluation.",
            "Quantitative Measurements of the Influence of Participant Roles during Peer Review Meetings.",
            "A Preliminary Software Engineering Theory as Investigated by Published Experiments.",
            "Viewpoint Article: Conducting and Presenting Empirical Software Engineering.",
            "Knowledge Requirements for Software Quality Measurement.",
            "Modelling the Likelihood of Software Process Improvement: An Exploratory Study.",
            "Assessing the Changeability of two Object-Oriented Design Alternatives - a Controlled Experiment.",
            "Why and How Research Ethics Matters to You. Yes, You!",
            "Ethics and Open Source.",
            "Getting to the Source of Ethical Issues.",
            "Ethics in Qualitative Studies of Commercial Software Enterprises: Case Description.",
            "Ethics in Qualitative Studies of Commercial Software Enterprises Ethical Analysis.",
            "Ethical Issues in Software Engineering Research: A Survey of Current Practice.",
            "Mixing Software Engineering Research and Development-What Needs Ethical Review and What Does Not?",
            "Not Your Ordinary Research.",
            "Protecting Research Subjects, Employees and Researchers: Implications for Software Engineering.",
            "Is it Ethical to Evaluate Web-based Learning Tools using Students?",
            "When is a Volunteer Not a Volunteer?",
            "Descriptive Software Process Modeling-How to Deal with Sensitive Process Information."
        ]
    },
    {
        "name": "ESE",
        "year": "2000",
        "info": "Volume 5, 2000",
        "count": 22,
        "papers": [
            "Editorial An Issue of Ethics: Responsibilities and Obligations of Empirical Software Engineering Researchers.",
            "The Use of Procedural Roles in Code Inspections: An Experimental Study.",
            "A Simulation Tool for Efficient Analogy Based Cost Estimation.",
            "The Human-Computer Interface Explanation A Correspondence on Jankowski's Paper on Methodological Support for Structured Analysis.",
            "An Introduction to \"Dissertation Abstracts\".",
            "An Empirical Investigation Of Software Project Schedule Behaviour.",
            "Ethics and Empirical Studies of Software Engineering.",
            "A Replicated Empirical Study of the Impact of the Methods in the PSP on Individual Engineers.",
            "Assessing and Understanding Efficiency and Success of Software Production.",
            "Correction of the Software Science Length Estimator Skewness for 'C' Language Programs.",
            "On Building Prediction Systems for Software Engineers.",
            "An Instrument for Assessing Software Measurement Programs.",
            "Using Students as Subjects-A Comparative Study of Students and Professionals in Lead-Time Impact Assessment.",
            "Picking the Right Problem Frame-An Empirical Study.",
            "Requirements-Based Estimation of Change Costs.",
            "Replicating the CREWS Use Case Authoring Guidelines Experiment.",
            "Early Lifecycle Work: Influence of Individual Characteristics, Methodological Constraints, and Interface Constraints.",
            "Empirical Evaluation of CASE Tools Usage at Nokia.",
            "Hints for Reviewing Empirical Work in Software Engineering.",
            "Balancing Misclassification Rates in Classification-Tree Models of Software Quality.",
            "Are the Perspectives Really Different? - Further Experimentation on Scenario-Based Reading of Requirements.",
            "An Instrument for Measuring the Key Factors of Success in Software Process Improvement."
        ]
    },
    {
        "name": "ESE",
        "year": "1999",
        "info": "Volume 4, 1999",
        "count": 20,
        "papers": [
            "Introduction to Special Issue on Usability Engineering.",
            "Engineering the Design of Usable Hypermedia.",
            "Perspective-based Usability Inspection: An Empirical Validation of Efficacy.",
            "The Usability Problem Taxonomy: A Framework for Classification and Analysis.",
            "Benchmarking Kappa: Interrater Agreement in Software Process Assessments.",
            "An Empirical Study of Analogy-based Software Effort Estimation.",
            "A Comparative Study of Ordering and Classification of Fault-Prone Software Modules.",
            "Introduction to the Special Issue: Papers from the Fifth International Symposium on Software Metrics.",
            "Metrics to Assess the Likelihood of Project Success Based on Architecture Reviews.",
            "Collecting Metrics for CORBA-Based Distributed Systems.",
            "Software Evolution and the Code Fault Introduction Process.",
            "A Function Point-Like Measure for Object-Oriented Software.",
            "Software Metrics Data Analysis - Exploring the Relative Performance of Some Commonly Used Modeling Techniques.",
            "A Critical Analysis of PSP Data Quality: Results from a Case Study.",
            "Empirical Studies of Software Development and Evolution (ESSDE 99) Workshop Report.",
            "Empirical Studies Applied to Software Process Models.",
            "Empirical Studies of Evolving Systems.",
            "The Role of Empirical Studies in Process Improvement.",
            "Empirical Studies of Object-Oriented Artifacts, Methods, and Processes: State of the Art and Future Directions.",
            "Directions and Methodologies for Empirical Software Engineering Research."
        ]
    },
    {
        "name": "ESE",
        "year": "1998",
        "info": "Volume 3, 1998",
        "count": 19,
        "papers": [
            "Sharing the Wealth: Accumulating and Sharing Lessons Learned in Empirical Software Engineering Research.",
            "Does Every Inspection Really Need a Meeting?",
            "Further Experiences with Scenarios and Checklists.",
            "A Unified Framework for Cohesion Measurement in Object-Oriented Systems.",
            "The Control Structure Diagram: An Overview and Initial Evaluation.",
            "A Guttman Scaling of CMM Level 2 Practices: Investigating the Implementation Sequences Underlying Software Engineering Maturity.",
            "The Internal Consistencies of the 1987 SEI Maturity Questionnaire and the SPICE Capability Dimension.",
            "Empirical Studies of Control Dependence Graph Size for C Programs.",
            "Conference Report: The Seventh Empirical Studies of Programmers Workshop.",
            "Viewpoint: Linking Education With Practice: Involving Software Engineering Educators and Researchers in the Profession.",
            "A Comparison of Tool-Based and Paper-Based Software Inspection.",
            "An Investigation into the Applicability and Validity of Object-Oriented Design Metrics.",
            "Classification of Fault-Prone Software Modules: Prior Probabilities, Costs, and Model Evaluation.",
            "Empirical Studies of Software Maintenance: A Report from WESS '97.",
            "Viewpoint: PhD Abstract Publication in Empirical Software Engineering.",
            "An Extended Replication of an Experiment for Assessing Methods for Software Requirements Inspections.",
            "Comparing Detection Methods For Software Requirements Inspections: A Replication Using Professional Subjects.",
            "An Experimental Evaluation of an Experience-Based Capture-Recapture Method in Software Code Inspections.",
            "Software Process Simulation Modeling (ProSim'98): Workshop Report."
        ]
    },
    {
        "name": "ESE",
        "year": "1997",
        "info": "Volume 2, 1997",
        "count": 29,
        "papers": [
            "Editorial.",
            "Computer-Aided Systems Engineering Methodology Support and Its Effect on the Output of Structured Analysis.",
            "A Replicated Experiment to Assess Requirements Inspection Techniques.",
            "Monitoring Smoothly Degrading Systems for Increased Dependability.",
            "Guest Editor's Introduction.",
            "Empirical Evaluation of Software Maintenance Technologies.",
            "Methodologies for Performing Empirical Studies: Report from the International Workshop on Empirical Studies of Software Maintenance.",
            "Fundamental Laws and Assumptions of Software Maintenance.",
            "The Practical Use of Empirical Studies for Maintenance Process Improvement.",
            "Qualitative Analysis of a Requirements Change Process.",
            "Evaluating Impact Analysis - A Case Study.",
            "On Increasing Our Knowledge of Large-Scale Software Comprehension .",
            "Applying QIP/GQM in a Maintenance Project.",
            "Early Risk-Management by Identification of Fault-prone Modules.",
            "Problems and Prospects in Quantifying Software Maintainability.",
            "Experience With Regression Test Selection.",
            "Lessons Learned from a Regression Testing Case Study.",
            "Nasa Shuttle Software Maintenance Evolution.",
            "The Study of Software Maintenance Organizations and Processes.",
            "Report from an Experiment: Impact of Documentation on Maintenance.",
            "How Software Engineering Tools Organize Programmer Behavior During the Task of Data Encapsulation.",
            "A Controlled Experiment to Evaluate On-Line Process Guidance.",
            "An Experimental Comparison of the Maintainability of Object-Oriented and Structured Design Documents.",
            "Comments to the Paper: Briand, Eman, Morasca: On the Application of Measurement Theory in Software Engineering.",
            "Reply to ''Comments to the Paper: Briand, El Emam, Morasca: On the Application of Measurement Theory in Software Engineering.",
            "Meta Analysis-A Silver Bullet-for Meta-Analysts.",
            "A Study of Strategies for Computerized Critiquing of Programmers.",
            "Visual Depiction of Decision Statements: What is Best for Programmers and Non-Programmers?",
            "Process Modelling and Empirical Studies of Software Evolution (PMESSE'97) Workshop Report."
        ]
    },
    {
        "name": "ESE",
        "year": "1996",
        "info": "Volume 1, 1996",
        "count": 12,
        "papers": [
            "Function point sizing: Structure, validity and applicability.",
            "The impact of software evolution and reuse on software quality.",
            "Comparing ada and FORTRAN lines of code: Some experimental results.",
            "On the application of measurement theory in software engineering.",
            "Editorial.",
            "Evaluating inheritance depth on the maintainability of object-oriented software.",
            "The empirical investigation of Perspective-Based Reading.",
            "Increasing testing productivity and software quality: A comparison of software testing methodologies within NASA.",
            "In this issue.",
            "An instrument for measuring the success of the requirements engineering process in information systems development.",
            "Repeatable software engineering experiments for comparing defect-detection techniques.",
            "Estimating test effectiveness with dynamic complexity measurement."
        ]
    }
]