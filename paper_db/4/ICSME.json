[
    {
        "year": "2021",
        "name": "37th ICSME 2021",
        "info": "Luxembourg",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2021",
                "sub_name": "IEEE International Conference on Software Maintenance and Evolution, ICSME 2021, Luxembourg, September 27 - October 1, 2021.",
                "count": 78,
                "papers": [
                    "Evaluating The Energy Consumption of Java I/O APIs.",
                    "Improving Traceability Link Recovery Using Fine-grained Requirements-to-Code Relations.",
                    "SmartGift: Learning to Generate Practical Inputs for Testing Smart Contracts.",
                    "Revisiting Test Cases to Boost Generate-and-Validate Program Repair.",
                    "The Unit Test Quality of Deep Learning Libraries: A Mutation Analysis.",
                    "Test Case Reduction: A Framework, Benchmark, and Comparative Study.",
                    "You Look so Different: Finding Structural Clones and Subclones in Java Source Code.",
                    "Leveraging Intermediate Artifacts to Improve Automated Trace Link Retrieval.",
                    "Incorporating Multiple Features to Predict Bug Fixing Time with Neural Networks.",
                    "Analysis of Non-Discrimination Policies in the Sharing Economy.",
                    "Towards Just-Enough Documentation for Agile Effort Estimation: What Information Should Be Documented?",
                    "On the Evaluation of Commit Message Generation Models: An Experimental Study.",
                    "Characterization and Automatic Updates of Deprecated Machine-Learning API Usages.",
                    "A Method to Comprehend Feature Dependencies Based on Semi-Static Structures.",
                    "An Empirical Study on Code Comment Completion.",
                    "Does Refactoring Break Tests and to What Extent?",
                    "Mutation Analysis for Assessing End-to-End Web Tests.",
                    "Toward Less Hidden Cost of Code Completion with Acceptance and Ranking Models.",
                    "Untangling Spaghetti of Evolutions in Software Histories to Identify Code and Test Co-evolutions.",
                    "Mining Historical Test Failures to Dynamically Batch Tests to Save CI Resources.",
                    "Contemporary COBOL: Developers' Perspectives on Defects and Defect Location.",
                    "Interactive Patch Filtering as Debugging Aid.",
                    "Do practitioners intentionally self-fix Technical Debt and why?",
                    "Automated Recovery of Issue-Commit Links Leveraging Both Textual and Non-textual Data.",
                    "Dialogue Management for Interactive API Search.",
                    "Ensemble Models for Neural Source Code Summarization of Subroutines.",
                    "Look Ahead! Revealing Complete Composite Refactorings and their Smelliness Effects.",
                    "Soundy Automated Parallelization of Test Execution.",
                    "Energy Efficient Guidelines for iOS Core Location Framework.",
                    "Design Smells in Deep Learning Programs: An Empirical Study.",
                    "Understanding Quantum Software Engineering Challenges An Empirical Study on Stack Exchange Forums and GitHub Issues.",
                    "Repo2Vec: A Comprehensive Embedding Approach for Determining Repository Similarity.",
                    "SPICA: A Methodology for Reviewing and Analysing Fault Localisation Techniques.",
                    "Cross-language Code Coupling Detection: A Preliminary Study on Android Applications.",
                    "A First Look at Accessibility Issues in Popular GitHub Projects.",
                    "FluentCrypto: Cryptography in Easy Mode.",
                    "An Evolutionary Analysis of Software-Architecture Smells.",
                    "Assessing Generalizability of CodeBERT.",
                    "Sirius: Static Program Repair with Dependence Graph-Based Systematic Edit Patterns.",
                    "Task-Oriented API Usage Examples Prompting Powered By Programming Task Knowledge Graph.",
                    "CAT: Change-focused Android GUI Testing.",
                    "CI/CD Pipelines Evolution and Restructuring: A Qualitative and Quantitative Study.",
                    "Multimodal Representation for Neural Code Search.",
                    "Migrating GUI behavior: from GWT to Angular.",
                    "Breaking down monoliths with Microservices and DevOps: an industrial experience report.",
                    "Report From The Trenches A Case Study In Modernizing Software Development Practices.",
                    "DeepOrder: Deep Learning for Test Case Prioritization in Continuous Integration Testing.",
                    "Duplicate Bug Report Detection by Using Sentence Embedding and Fine-tuning.",
                    "Efficient Platform Migration of a Mainframe Legacy System Using Custom Transpilation.",
                    "The Used, the Bloated, and the Vulnerable: Reducing the Attack Surface of an Industrial Application.",
                    "eknows: Platform for Multi-Language Reverse Engineering and Documentation Generation.",
                    "An NLP-based Tool for Software Artifacts Analysis.",
                    "Sorrel: an IDE Plugin for Managing Licenses and Detecting License Incompatibilities.",
                    "iSCREAM: a suite for Smart Contract REAdability assessMent.",
                    "MLCatchUp: Automated Update of Deprecated Machine-Learning APIs in Python.",
                    "FeaRS: Recommending Complete Android Method Implementations.",
                    "Restats: A Test Coverage Tool for RESTful APIs.",
                    "IDEAL: An Open-Source Identifier Name Appraisal Tool.",
                    "CodeRibbon: More Efficient Workspace Management and Navigation for Mainstream Development Environments.",
                    "FACER-AS: An API Usage-based Code Recommendation Tool for Android Studio.",
                    "Is reputation on Stack Overflow always a good indicator for users' expertise? No!",
                    "Links do Matter: Understanding the Drivers of Developer Interactions in Software Ecosystems.",
                    "The Impact of Continuous Code Quality Assessment on Defects.",
                    "Stepwise Refactoring Tools.",
                    "Software Architecture Challenges for ML Systems.",
                    "NLP-assisted Web Element Identification Toward Script-free Testing.",
                    "BiasHeal: On-the-Fly Black-Box Healing of Bias in Sentiment Analysis Systems.",
                    "Using Bandit Algorithms for Project Selection in Cross-Project Defect Prediction.",
                    "Human, bot or both? A study on the capabilities of classification models on mixed accounts.",
                    "Hurdles for Developers in Cryptography.",
                    "Contrasting Third-Party Package Management User Experience.",
                    "Clustering, Separation, and Connection: A Tale of Three Characteristics.",
                    "Can Differential Testing Improve Automatic Speech Recognition Systems?",
                    "Disambiguating Mentions of API Methods in Stack Overflow via Type Scoping.",
                    "A Partial Reproduction of A Guided Genetic Algorithm for Automated Crash Reproduction.",
                    "Automated Refactoring for Energy-Aware Software.",
                    "Logs and models in engineering complex embedded systems.",
                    "Sine-Cosine Algorithm for Software Fault Prediction."
                ]
            }
        ]
    },
    {
        "year": "2020",
        "name": "36th ICSME 2020",
        "info": "Adelaide, Australia",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2020",
                "sub_name": "IEEE International Conference on Software Maintenance and Evolution, ICSME 2020, Adelaide, Australia, September 28 - October 2, 2020.",
                "count": 106,
                "papers": [
                    "Effects of Adopting Code Review Bots on Pull Requests to OSS Projects.",
                    "Can You Capture Information As You Intend To? A Case Study on Logging Practice in Industry.",
                    "Haste Makes Waste: An Empirical Study of Fast Answers in Stack Overflow.",
                    "An Empirical Study of Usages, Updates and Risks of Third-Party Libraries in Java Projects.",
                    "What Developers (Care to) Recall: An Interview Survey on Smaller Systems.",
                    "Database-Access Performance Antipatterns in Database-Backed Web Applications.",
                    "Sentiment Analysis for Software Engineering: How Far Can Pre-trained Transformer Models Go?",
                    "GenSlice: Generalized Semantic History Slicing.",
                    "A Method for Finding Missing Unit Tests.",
                    "Analysis of Modern Release Engineering Topics : - A Large-Scale Study using StackOverflow -.",
                    "Learning Code-Query Interaction for Enhancing Code Searches.",
                    "Static source code metrics and static analysis warnings for fine-grained just-in-time defect prediction.",
                    "A Framework and DataSet for Bugs in Ethereum Smart Contracts.",
                    "A First Look at the Deprecation of RESTful APIs: An Empirical Study.",
                    "Achieving Reliable Sentiment Analysis in the Software Engineering Domain using BERT.",
                    "Detecting Semantic Conflicts via Automated Behavior Change Detection.",
                    "Failures and Fixes: A Study of Software System Incident Response.",
                    "Every Mutation Should Be Rewarded: Boosting Fault Localization with Mutated Predicates.",
                    "Automated Extraction of Requirement Entities by Leveraging LSTM-CRF and Transfer Learning.",
                    "A Fine-Grained Analysis on the Inconsistent Changes in Code Clones.",
                    "Identifying Compiler and Optimization Options from Binary Code using Deep Learning Approaches.",
                    "Guided, Deep Testing of X.509 Certificate Validation via Coverage Transfer Graphs.",
                    "#ifdef Directives and Program Comprehension: The Dilemma between Correctness and Preference.",
                    "Introducing Differential Privacy Mechanisms for Mobile App Analytics of Dynamic Content.",
                    "Defining a Software Maintainability Dataset: Collecting, Aggregating and Analysing Expert Evaluations of Software Maintainability.",
                    "Experiments with Interactive Fault Localization Using Simulated and Real Users.",
                    "Shake It! Detecting Flaky Tests Caused by Concurrency with Shaker.",
                    "Studying Software Developer Expertise and Contributions in Stack Overflow and GitHub.",
                    "Assessing the Characteristics of FOSS Contributions in Network Automation Projects.",
                    "Pizza versus Pinsa: On the Perception and Measurability of Unit Test Code Quality.",
                    "Evaluating Code Readability and Legibility: An Examination of Human-centric Studies.",
                    "A software maintenance-focused process and supporting toolset for academic environments.",
                    "A Large-scale Data Set and an Empirical Study of Docker Images Hosted on Docker Hub.",
                    "CounterFault: Value-Based Fault Localization by Modeling and Predicting Counterfactual Outcomes.",
                    "Commit-Aware Mutation Testing.",
                    "Remote Pair Programming in Virtual Reality.",
                    "A Cost-Effective Approach for Hyper-Parameter Tuning in Search-based Test Case Generation.",
                    "It Takes a Village to Build a Robot: An Empirical Study of The ROS Ecosystem.",
                    "How (Not) to Find Bugs: The Interplay Between Merge Conflicts, Co-Changes, and Bugs.",
                    "Assessing Mock Classes: An Empirical Study.",
                    "Automated Recording and Semantics-Aware Replaying of High-Speed Eye Tracking and Interaction Data to Support Cognitive Studies of Software Engineering Tasks.",
                    "Characterizing Task-Relevant Information in Natural Language Software Artifacts.",
                    "Improving Testing by Mimicking User Behavior.",
                    "Expanding the Number of Reviewers in Open-Source Projects by Recommending Appropriate Developers.",
                    "How Does Modern Code Review Impact Software Design Degradation? An In-depth Empirical Study.",
                    "Revisiting Test Smells in Automatically Generated Tests: Limitations, Pitfalls, and Opportunities.",
                    "Lifting the Curtain on Merge Conflict Resolution: A Sensemaking Perspective.",
                    "On the Impact of Multi-language Development in Machine Learning Frameworks.",
                    "Improving Automated GUI Exploration of Android Apps via Static Dependency Analysis.",
                    "On the Performance and Adoption of Search-Based Microservice Identification with toMicroservices.",
                    "An Empirical Study of i18n Collateral Changes and Bugs in GUIs of Android apps.",
                    "AOBTM: Adaptive Online Biterm Topic Modeling for Version Sensitive Short-texts Analysis.",
                    "Why are Some Bugs Non-Reproducible? : -An Empirical Investigation using Data Fusion-.",
                    "A3Ident: A Two-phased Approach to Identify the Leading Authors of Android Apps.",
                    "Interest of Defect Technical Debt: An Exploratory Study on Apache Projects.",
                    "CrossASR: Efficient Differential Testing of Automatic Speech Recognition via Text-To-Speech.",
                    "Score-Based Automatic Detection and Resolution of Syntactic Ambiguity in Natural Language Requirements.",
                    "Moderate Detection and Removal of Omnipresent Modules in Software Clustering.",
                    "Improving Log-Based Anomaly Detection with Component-Aware Analysis.",
                    "Who (Self) Admits Technical Debt?",
                    "Investigating The Reproducibility of NPM Packages.",
                    "On Package Freshness in Linux Distributions.",
                    "Fuzzing to Estimate Gas Costs of Ethereum Contracts.",
                    "Regression Testing of Massively Multiplayer Online Role-Playing Games.",
                    "SiblingClassTestDetector: Finding Untested Sibling Functions.",
                    "SBFL-Suitability: A Software Characteristic for Fault Localization.",
                    "Examining The Work Experience of Programmers with Visual Impairments.",
                    "Using Symbolic Execution to Analyze Linux KBuild Makefiles.",
                    "Few-Shot Guided Mix for DNN Repairing.",
                    "On the need for automatic knowledge management in modern collaboration tools to improve software maintenance.",
                    "EWIDL: Single-Source Web API Documentation Management System.",
                    "Efficient Bug Triage For Industrial Environments.",
                    "De-Flake Your Tests : Automatically Locating Root Causes of Flaky Tests in Code At Google.",
                    "From 6.2 to 0.15 seconds - an Industrial Case Study on Mobile Web Performance.",
                    "Incremental Type Migration Using Type Algebra.",
                    "Improving Bug Localization by Mining Crash Reports: An Industrial Study.",
                    "Toward a Definition of Cognitive-Driven Development.",
                    "A blessing in disguise? Assessing the Relationship between Code Smells and Sustainability.",
                    "Reducing accidental clones using instant clone search in automatic code review.",
                    "Exploring the Challenges of Cloud Migrations During a Global Pandemic.",
                    "Towards a new Test Case Prioritization Approach based on Fuzzy Clustering Analysis.",
                    "Robin: A Voice Controlled Virtual Teammate for Software Developers and Teams.",
                    "Exploring Bluetooth Communication Protocols in Internet-of-Things Software Development.",
                    "Refactoring Recommendations Based on the Optimization of Socio-Technical Congruence.",
                    "Practitioners' insights on machine-learning software engineering design patterns: a preliminary study.",
                    "Graph Neural Network-based Vulnerability Predication.",
                    "DR-Tools: a suite of lightweight open-source tools to measure and visualize Java source code.",
                    "Teddy: Automatic Recommendation of Pythonic Idiom Usage For Pull-Based Software Projects.",
                    "JCoffee: Using Compiler Feedback to Make Partial Code Snippets Compilable.",
                    "A toolset to support a software maintenance process in academic environments.",
                    "QScored: An Open Platform for Code Quality Ranking and Visualization.",
                    "WebRTS: A Dynamic Regression Test Selection Tool for Java Web Applications.",
                    "Kaya: A Testing Framework for Blockchain-based Decentralized Applications.",
                    "Automatic Support for Multi-Domain Model Management.",
                    "Verifying and Testing Concurrent Programs using Constraint Solver based Approaches.",
                    "Integration of Program Slicing with Cognitive Complexity for Defect Prediction.",
                    "Debugging Declarative Models in Alloy.",
                    "From Transient Information to Persistent Documentation: Enhancing Software Documentation.",
                    "Mobile App Energy Consumption: A Study of Known Energy Issues in Mobile Applications and their Classification Schemes - Summary Plan.",
                    "Newcomer Candidate: Characterizing Contributions of a Novice Developer to GitHub.",
                    "Automatic Identification of Rollback Edit with Reasons in Stack Overflow Q&A Site.",
                    "The Making of Accessible Android Applications: An Empirical Study on the State of the Practice.",
                    "Leveraging Textual and Non-Textual Features for Documentation Decluttering.",
                    "Source Code based On-demand Class Documentation Generation.",
                    "Learning based and Context Aware Non-Informative Comment Detection.",
                    "An Empirical Study of the Dependency Networks of Deep Learning Libraries."
                ]
            }
        ]
    },
    {
        "year": "2019",
        "name": "35th ICSME 2019",
        "info": "Cleveland, OH, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2019",
                "sub_name": "2019 IEEE International Conference on Software Maintenance and Evolution, ICSME 2019, Cleveland, OH, USA, September 29 - October 4, 2019.",
                "count": 95,
                "papers": [
                    "A Longitudinal Analysis of Bug Handling Across Eclipse Releases.",
                    "Impact of Switching Bug Trackers: A Case Study on a Medium-Sized Open Source Project.",
                    "The Impact of Rare Failures on Statistical Fault Localization: The Case of the Defects4J Suite.",
                    "Do Energy-Oriented Changes Hinder Maintainability?",
                    "Can Everyone use my app? An Empirical Study on Accessibility in Android Apps.",
                    "Quantifying the Performance Impact of SQL Antipatterns on Mobile Applications.",
                    "An Empirical Study of UI Implementations in Android Applications.",
                    "Same App, Different Countries: A Preliminary User Reviews Study on Most Downloaded iOS Apps.",
                    "Improving Bug Triaging with High Confidence Predictions at Ericsson.",
                    "An Industrial Study on the Differences between Pre-Release and Post-Release Bugs.",
                    "Tracing with Less Data: Active Learning for Classification-Based Traceability Link Recovery.",
                    "Deep Learning Anti-Patterns from Code Metrics History.",
                    "An Approach to Recommendation of Verbosity Log Levels Based on Logging Intention.",
                    "Automated Characterization of Software Vulnerabilities.",
                    "Learning to Identify Security-Related Issues Using Convolutional Neural Networks.",
                    "TECCD: A Tree Embedding Approach for Code Clone Detection.",
                    "Investigating Context Adaptation Bugs in Code Clones.",
                    "Decomposing God Classes at Siemens.",
                    "Tracy: A Business-Driven Technical Debt Prioritization Framework.",
                    "Self-Admitted Technical Debt Removal and Refactoring Actions: Co-Occurrence or More?",
                    "Identifying the Within-Statement Changes to Facilitate Change Understanding.",
                    "Aiding Code Change Understanding with Semantic Change Impact Analysis.",
                    "Towards Generating Transformation Rules without Examples for Android API Replacement.",
                    "How Do Code Changes Evolve in Different Platforms? A Mining-Based Investigation.",
                    "How the Experience of Development Teams Relates to Assertion Density of Test Classes.",
                    "Automatic Discovery and Cleansing of Numerical Metamorphic Relations.",
                    "AutoMR: Automatic Discovery and Cleansing of Numerical Metamorphic Relations.",
                    "Automated Identification of Over-Privileged SmartThings Apps.",
                    "EmoD: An End-to-End Approach for Investigating Emotion Dynamics in Software Development.",
                    "Know-How in Programming Tasks: From Textual Tutorials to Task-Oriented Knowledge Graph.",
                    "An Empirical Study of Abbreviations and Expansions in Software Artifacts.",
                    "An Open Dataset of Abbreviations and Expansions.",
                    "Estimating Software Task Effort in Crowds.",
                    "Do as I Do, Not as I Say: Do Contribution Guidelines Match the GitHub Contribution Process?",
                    "An Analysis of 35+ Million Jobs of Travis CI.",
                    "Linguistic Change in Open Source Software.",
                    "Learning How to Mutate Source Code from Bug-Fixes.",
                    "Personalized Code Recommendation.",
                    "Syntax and Stack Overflow: A Methodology for Extracting a Corpus of Syntax Errors and Fixes.",
                    "BARRIERFINDER: Recognizing Ad Hoc Barriers.",
                    "Impact Analysis of Syntactic and Semantic Similarities on Patch Prioritization in Automated Program Repair.",
                    "Losing Confidence in Quality: Unspoken Evolution of Computer Vision Services.",
                    "Inappropriate Usage Examples in Web API Documentations.",
                    "What Do Developers Discuss about Biometric APIs?",
                    "Teaching Software Maintenance.",
                    "Continuous Collateral Privacy Risk Auditing of Evolving Autonomous Driving Software.",
                    "Challenges in re-Platforming Mixed Language PL/I and COBOL IS to an Open Systems Platform.",
                    "Application of Philosophical Principles in Linux Kernel Customization.",
                    "Lessons Learned from Large-Scale Refactoring.",
                    "Interactive Traceability Links Visualization using Hierarchical Trace Map.",
                    "Supporting Software Architecture Maintenance by Providing Task-Specific Recommendations.",
                    "A Validation Method of Self-Adaptive Strategy Based on POMDP.",
                    "Modeling the Relationship Between Identifier Name and Behavior.",
                    "Lib Metamorphosis: A Performance Analysis Framework for Exchanging Data Structures in Performance Sensitive Applications.",
                    "Processing Large Datasets of Fined Grained Source Code Changes.",
                    "CodeSonar (R) Extension for Copy-Paste-(Mis) Adapt Error Detection.",
                    "Recommending Exception Handling Code.",
                    "SmartEmbed: A Tool for Clone and Bug Detection in Smart Contracts through Structural Code Embedding.",
                    "Near-Omniscient Debugging for Java Using Size-Limited Execution Trace.",
                    "Sciit: Aligning Source Control Management and Issue Tracking Architectures.",
                    "Ticket Tagger: Machine Learning Driven Issue Classification.",
                    "Kraken-Mobile: Cross-Device Interaction-Based Testing of Android Apps.",
                    "MigrationMiner: An Automated Detection Tool of Third-Party Java Library Migration at the Method Level.",
                    "OPIA: A Tool for On-Device Testing of Vulnerabilities in Android Applications.",
                    "OSAIFU: A Source Code Factorizer on Android Studio.",
                    "An Empirical Study of the Relationship between Continuous Integration and Test Code Evolution.",
                    "What Factors Make SQL Test Cases Understandable for Testers? A Human Study of Automated Test Data Generation Techniques.",
                    "Systematically Testing and Diagnosing Responsiveness for Android Apps.",
                    "DeepEvolution: A Search-Based Testing Approach for Deep Neural Networks.",
                    "An Exploratory Study of Logging Configuration Practice in Java.",
                    "Performance-Influence Model for Highly Configurable Software with Fourier Learning and Lasso Regression.",
                    "Microservices Migration in Industry: Intentions, Strategies, and Challenges.",
                    "Comparing Constraints Mined From Execution Logs to Understand Software Evolution.",
                    "Synthesizing Program Execution Time Discrepancies in Julia Used for Scientific Software.",
                    "Comprehending Test Code: An Empirical Study.",
                    "An Empirical Study Assessing Source Code Readability in Comprehension.",
                    "Handling Duplicates in Dockerfiles Families: Learning from Experts.",
                    "Share, But be Aware: Security Smells in Python Gists.",
                    "Can Automated Impact Analysis Techniques Help Predict Decaying Modules?",
                    "Assuring the Evolvability of Microservices: Insights into Industry Practices and Challenges.",
                    "Investigating Instability Architectural Smells Evolution: An Exploratory Case Study.",
                    "A Qualitative Study on Framework Debugging.",
                    "Adoption, Support, and Challenges of Infrastructure-as-Code: Insights from Industry.",
                    "Studying the Impact of Policy Changes on Bug Handling Performance.",
                    "Automatic Examining of Software Architectures on Mobile Applications Codebases.",
                    "The Relationship Between Cognitive Complexity and the Probability of Defects.",
                    "Business-Driven Technical Debt Prioritization.",
                    "Applying Markov Models to Identify Grammatical Patterns of Function Identifiers.",
                    "Enhancing Eye Tracking of Source Code: A Specialized Fixation Filter for Source Code.",
                    "Improving the Robustness and Efficiency of Continuous Integration and Deployment.",
                    "Towards Better Understanding Developer Perception of Refactoring.",
                    "RAPTOR: Release-Aware and Prioritized Bug-Fixing Task Assignment Optimization.",
                    "Characterizing Performance Regression Introducing Code Changes.",
                    "Towards a Model to Appraise and Suggest Identifier Names.",
                    "Design Smell Detection and Analysis for Open Source Java Software."
                ]
            }
        ]
    },
    {
        "year": "2018",
        "name": "34th ICSME 2018",
        "info": "Madrid, Spain",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2018",
                "sub_name": "2018 IEEE International Conference on Software Maintenance and Evolution, ICSME 2018, Madrid, Spain, September 23-29, 2018.",
                "count": 86,
                "papers": [
                    "On the Relation of Test Smells to Software Code Quality.",
                    "Why are Features Deprecated? An Investigation Into the Motivation Behind Deprecation.",
                    "A Large-Scale Empirical Study on Linguistic Antipatterns Affecting APIs.",
                    "Reproducible Interference-Aware Mobile Testing.",
                    "DRLgencert: Deep Learning-Based Automated Testing of Certificate Verification in SSL/TLS Implementations.",
                    "Combining Search-Based Testing and Dynamic Symbolic Execution by Evolvability Metric.",
                    "Test Re-Prioritization in Continuous Testing Environments.",
                    "Improving Code: The (Mis) Perception of Quality Metrics.",
                    "AutoSpearman: Automatically Mitigating Correlated Software Metrics for Interpreting Defect Models.",
                    "BinMatch: A Semantics-Based Hybrid Approach on Binary Code Clone Analysis.",
                    "Automatic Clone Recommendation for Refactoring Based on the Present and the Past.",
                    "Change-Aware Dynamic Program Analysis for JavaScript.",
                    "On State Machine Mining from Embedded Control Software.",
                    "Reflexion Models for State Machine Extraction and Verification.",
                    "Comparing Multiple MATLAB/Simulink Models Using Static Connectivity Matrix Analysis.",
                    "A Simple NLP-Based Approach to Support Onboarding and Retention in Open Source Communities.",
                    "Improving API Caveats Accessibility by Mining API Caveats Knowledge Graph.",
                    "Statistical Translation of English Texts to API Code Templates.",
                    "AudioHighlight: Code Skimming for Blind Programmers.",
                    "Gistable: Evaluating the Executability of Python Code Snippets on GitHub.",
                    "How do Multiple Pull Requests Change the Same Code: A Study of Competing Pull Requests in GitHub.",
                    "Assessing Test Case Prioritization on Real Faults and Mutants.",
                    "Predicting Higher Order Structural Feature Interactions in Variable Systems.",
                    "Generating Accurate and Compact Edit Scripts Using Tree Differencing.",
                    "A Closer Look at Real-World Patches.",
                    "An Empirical Study of Multi-entity Changes in Real Bug Fixes.",
                    "A Conceptual Replication Study on Bugs that Get Fixed in Open Source Software.",
                    "Automatic Test Smell Detection Using Information Retrieval Techniques.",
                    "RegionDroid: A Tool for Detecting Android Application Repackaging Based on Runtime UI Region Features.",
                    "How Maintainability Issues of Android Apps Evolve.",
                    "Studying Permission Related Issues in Android Wearable Apps.",
                    "Efficient, Evolutionary Security Analysis of Interacting Android Apps.",
                    "Automatic Traceability Maintenance via Machine Learning Classification.",
                    "Are Bug Reports Enough for Text Retrieval-Based Bug Localization?",
                    "Linking Source Code to Untangled Change Intents.",
                    "On the Evolution of Technical Lag in the npm Package Dependency Network.",
                    "Embracing Technical Debt, from a Startup Company Perspective.",
                    "A Reflexive and Automated Approach to Syntactic Pattern Matching in Code Transformations.",
                    "On the Impact of Tokenizer and Parameters on N-Gram Based Code Analysis.",
                    "Beyond Metadata: Code-Centric and Usage-Based Analysis of Known Vulnerabilities in Open-Source Software.",
                    "Adapting Neural Text Classification for Improved Software Categorization.",
                    "Effective Reformulation of Query for Code Search Using Crowdsourced Knowledge and Extra-Large Data Analytics.",
                    "Search-Based Scheduling of Experiments in Continuous Deployment.",
                    "Understanding, Debugging, and Optimizing Distributed Software Builds: A Design Study.",
                    "Threats of Aggregating Software Repository Data.",
                    "Communicative Intention in Code Review Questions.",
                    "On the Value of Bug Reports for Retrieval-Based Bug Localization.",
                    "Semi-Automated Feature Traceability with Embedded Annotations.",
                    "An Empirical Study of Flaky Tests in Android Apps.",
                    "Toward Automatic Summarization of Arbitrary Java Statements for Novice Programmers.",
                    "Towards Feature Envy Design Flaw Detection at Block Level.",
                    "Automated Extraction of Augmented Models for Android Apps.",
                    "An Empirical Study on the Effect of Dynamic Slicing on Automated Program Repair Efficiency.",
                    "Towards Smoother Library Migrations: A Look at Vulnerable Dependency Migrations at Function Level for npm JavaScript Packages.",
                    "Continuous Refactoring in CI: A Preliminary Study on the Perceived Advantages and Barriers.",
                    "Reducing Code Duplication by Identifying Fresh Domain Abstractions.",
                    "A Practical Approach to the Automatic Classification of Security-Relevant Commits.",
                    "COBOL to Java and Newspapers Still Get Delivered.",
                    "An Experience Report of the API Evolution and Maintenance for Software Platforms.",
                    "Cloned Buggy Code Detection in Practice Using Normalized Compression Distance.",
                    "Stereo: Editing Clones Refactored as Code Generators.",
                    "Understanding the Role of Reporting in Work Item Tracking Systems for Software Development: An Industrial Case Study.",
                    "A Qualitative Study of Variability Management of Control Software for Industrial Automation Systems.",
                    "Clone-Based Variability Management in the Android Ecosystem.",
                    "Relational Database Schema Evolution: An Industrial Case Study.",
                    "Detecting and Predicting Evolution in Spreadsheets - A Case Study in an Energy Network Company.",
                    "Aligning Technical Debt Prioritization with Business Objectives: A Multiple-Case Study.",
                    "Software Process Analysis Methodology - A Methodology Based on Lessons Learned in Embracing Legacy Software.",
                    "Mainframe Migration Based on Screen Scraping.",
                    "BLIMP Tracer: Integrating Build Impact Analysis with Code Review.",
                    "Developers' Game: A Preliminary Study Concerning a Tool for Automated Developers Assessment.",
                    "GemChecker: Reporting on the Status of Gems in Ruby on Rails Projects.",
                    "DiffViz: A Diff Algorithm Independent Visualization Tool for Edit Scripts.",
                    "Replication Package for \"Threats of Aggregating Software Repository Data\".",
                    "Artefact: An R Implementation of the AutoSpearman Function.",
                    "Two Datasets for Sentiment Analysis in Software Engineering.",
                    "TraceLab Components for Generating Speech Act Types in Developer Question/Answer Conversations.",
                    "NLP2API: Query Reformulation for Code Search Using Crowdsourced Knowledge and Extra-Large Data Analytics.",
                    "TUNA: TUning Naturalness-Based Analysis.",
                    "Predicting Software Maintainability in Object-Oriented Systems Using Ensemble Techniques.",
                    "Methods and Tools for Focusing and Prioritizing the Testing Effort.",
                    "Context-Aware Software Documentation.",
                    "Team Maturity in Agile Software Development: The Impact on Productivity.",
                    "Dead Code.",
                    "Integrating Runtime Values with Source Code to Facilitate Program Comprehension.",
                    "Automating Software Development for Mobile Computing Platforms."
                ]
            },
            {
                "sub_name_abbr": "conf/icsm/2018dysdoc",
                "sub_name": "IEEE Third International Workshop on Dynamic Software Documentation, DySDoc@ICSME 2018, Madrid, Spain, September 25, 2018.",
                "count": 8,
                "papers": [
                    "Automatically Generating Natural Language Documentation for Methods.",
                    "Automatically Redocumenting Source Code with Method and Class Stereotypes.",
                    "DynaDoc: Automated On-demand Context-Specific Documentation.",
                    "Automatic Generation of API Documentations for Open-Source Projects.",
                    "A Timeline Summarization of Code Changes.",
                    "Catalogen: Generating Catalogs of Code Examples Collected from OSS.",
                    "Generating an Interactive View of Dynamic Aspects of API Usage Examples.",
                    "Enriching API Documentation by Relevant API Methods Recommendation Based on Version History."
                ]
            }
        ]
    },
    {
        "year": "2017",
        "name": "33rd ICSME 2017",
        "info": "Shanghai, China",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2017",
                "sub_name": "2017 IEEE International Conference on Software Maintenance and Evolution, ICSME 2017, Shanghai, China, September 17-22, 2017.",
                "count": 77,
                "papers": [
                    "The Pricey Bill of Technical Debt: When and by Whom will it be Paid?",
                    "Detecting DOM-Sourced Cross-Site Scripting in Browser Extensions.",
                    "The Co-evolution of Test Maintenance and Code Maintenance through the Lens of Fine-Grained Semantic Changes.",
                    "Embroidery: Patching Vulnerable Binary Code of Fragmentized Android Devices.",
                    "What are the Testing Habits of Developers? A Case Study in a Large IT Company.",
                    "How Long and How Much: What to Expect from Summer of Code Participants?",
                    "The Utility Challenge of Privacy-Preserving Data-Sharing in Cross-Company Defect Prediction: An Empirical Study of the CLIFF&MORPH Algorithm.",
                    "Heterogeneous Defect Prediction Through Multiple Kernel Learning and Ensemble Learning.",
                    "AimDroid: Activity-Insulated Multi-level Automated Testing for Android Applications.",
                    "Towards Accurate Duplicate Bug Retrieval Using Deep Learning Techniques.",
                    "Learning to Predict Severity of Software Vulnerability Using Only Vulnerability Description.",
                    "GEAS: Generic Adaptive Scheduling for High-Efficiency Context Inconsistency Detection.",
                    "An Experiment Comparing Lifted and Delayed Variability-Aware Program Analysis.",
                    "Supervised vs Unsupervised Models: A Holistic Look at Effort-Aware Just-in-Time Defect Prediction.",
                    "Towards Activity-Aware Tool Support for Change Tasks.",
                    "A Tale of CI Build Failures: An Open Source and a Financial Organization Perspective.",
                    "Coarse Hierarchical Delta Debugging.",
                    "SimEvo: Testing Evolving Multi-process Software Systems.",
                    "Recommending when Design Technical Debt Should be Self-Admitted.",
                    "Bug Propagation through Code Cloning: An Empirical Study.",
                    "An Empirical Study on the Removal of Self-Admitted Technical Debt.",
                    "CCLearner: A Deep Learning-Based Clone Detection Approach.",
                    "Revisiting Turnover-Induced Knowledge Loss in Software Projects.",
                    "Deep Green: Modelling Time-Series of Software Energy Consumption.",
                    "Composite Software Diversification.",
                    "Evaluating State-of-the-Art Free and Open Source Static Analysis Tools Against Buffer Errors in Android Apps.",
                    "The Evaluation of an Approach for Automatic Generated Documentation.",
                    "Personality and Project Success: Insights from a Large-Scale Study with Professionals.",
                    "On the Optimal Order of Reading Source Code Changes for Review.",
                    "An Exploratory Study of Performance Regression Introducing Code Changes.",
                    "Refactoring Asynchrony in JavaScript.",
                    "Understanding Android Application Programming and Security: A Dynamic Study.",
                    "Using Observed Behavior to Reformulate Queries during Text Retrieval-based Bug Localization.",
                    "Semantics-Aware Machine Learning for Function Recognition in Binary Code.",
                    "Continuous, Evolutionary and Large-Scale: A New Perspective for Automated Mobile App Testing.",
                    "Is it Safe to Uplift this Patch?: An Empirical Study on Mozilla Firefox.",
                    "A Characterization Study of Repeated Bug Fixes.",
                    "Interaction-Based Tracking of Program Entities for Test Case Evolution.",
                    "An Empirical Study of Local Database Usage in Android Applications.",
                    "Recommending Framework Extension Examples.",
                    "Software Practitioner Perspectives on Merge Conflicts and Resolutions.",
                    "On-demand Developer Documentation.",
                    "How Do Developers Select and Prioritize Code Smells? A Preliminary Study.",
                    "SimPact: Impact Analysis for Simulink Models.",
                    "Flattening Code for Metrics Measurement and Analysis.",
                    "Constraints Based Approach to Interactive Feature Location.",
                    "An Empirical Study on the Usage of Fault Localization in Automated Program Repair.",
                    "Understanding Stack Overflow Code Fragments.",
                    "Automated Repair of High Inaccuracies in Numerical Programs.",
                    "Dissecting Android Inter-component Communications via Interactive Visual Explorations.",
                    "Forecasting the Duration of Incremental Build Jobs.",
                    "Automating Aggregation for Software Quality Modeling.",
                    "Bug or Not? Bug Report Classification Using N-Gram IDF.",
                    "Supporting Microservice Evolution.",
                    "Reviewing Career Paths of the OpenStack Developers.",
                    "Confusion Detection in Code Reviews.",
                    "Behavior Metrics for Prioritizing Investigations of Exceptions.",
                    "An Experience Report on Applying Passive Learning in a Large-Scale Payment Company.",
                    "Graph Data Management of Evolving Dependency Graphs for Multi-versioned Codebases.",
                    "Predicting and Evaluating Software Model Growth in the Automotive Industry.",
                    "Mean Average Distance to Resolver: An Evaluation Metric for Ticket Routing in Expert Network.",
                    "RCIA: Automated Change Impact Analysis to Facilitate a Practical Cancer Registry System.",
                    "How do Developers Test Android Applications?",
                    "Atlantis: Improving the Analysis and Visualization of Large Assembly Execution Traces.",
                    "NLP2Code: Code Snippet Content Assist via Natural Language Tasks.",
                    "CityVR: Gameful Software Visualization.",
                    "flexfringe: A Passive Automaton Learning Package.",
                    "DroidFax: A Toolkit for Systematic Characterization of Android Applications.",
                    "REPERSP: Recommending Personalized Software Projects on GitHub.",
                    "KOWALSKI: Collecting API Clients in Easy Mode.",
                    "TraceLab Components for Generating Extractive Summaries of User Stories.",
                    "Artifacts for Dynamic Analysis of Android Apps.",
                    "Behavior-Informed Algorithms for Automatic Documentation Generation.",
                    "Combining Evolutionary Algorithms with Constraint Solving for Configuration Optimization.",
                    "Understanding Spreadsheet Evolution in Practice.",
                    "Mining AndroZoo: A Retrospect.",
                    "Improving Software Maintenance Using Process Mining and Predictive Analytics."
                ]
            }
        ]
    },
    {
        "year": "2016",
        "name": "32nd ICSME 2016",
        "info": "Raleigh, NC, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2016",
                "sub_name": "2016 IEEE International Conference on Software Maintenance and Evolution, ICSME 2016, Raleigh, NC, USA, October 2-7, 2016.",
                "count": 88,
                "papers": [
                    "An Ecosystemic and Socio-Technical View on Software Maintenance and Evolution.",
                    "An Empirical Evaluation of Models of Programmer Navigation.",
                    "A Comprehensive Study on the Energy Efficiency of Java's Thread-Safe Collections.",
                    "Maintenance Effort Estimation for Open Source Software: A Systematic Literature Review.",
                    "A Taxonomy for Program Metamodels in Program Reverse Engineering.",
                    "Automated Extraction of Mixins in Cascading Style Sheets.",
                    "The A?B*A Pattern: Undoing Style in CSS and Refactoring Opportunities It Presents.",
                    "Detect Cross-Browser Issues for JavaScript-Based Web Applications Based on Record/Replay.",
                    "An Empirical Study of Internationalization Failures in the Web.",
                    "Evolving Requirements-to-Code Trace Links across Versions of a Software System.",
                    "Inferring Links between Concerns and Methods with Multi-abstraction Vector Space Model.",
                    "Inferring Computational State Machine Models from Program Executions.",
                    "An Optimization Approach for Matching Textual Domain Models with Existing Code.",
                    "A Complete Operator Library for DSL Evolution Specification.",
                    "Do Contexts Help in Phrase-Based, Statistical Source Code Migration?",
                    "Evolving NoSQL Databases without Downtime.",
                    "Hug the Elephant: Migrating a Legacy Data Analytics Application to Hadoop Ecosystem.",
                    "An Empirical Study on the Characteristics of Python Fine-Grained Source Code Change Types.",
                    "Using Topic Model to Suggest Fine-Grained Source Code Changes.",
                    "From Quick Fixes to Slow Fixes: Reimagining Static Analysis Resolutions to Enable Design Space Exploration.",
                    "Recommending Code Changes for Automatic Backporting of Linux Device Drivers.",
                    "A Validated Set of Smells in Model-View-Controller Architectures.",
                    "Smells Like Teen Spirit: Improving Bug Prediction Performance Using the Intensity of Code Smells.",
                    "Comparing Quality Metrics for Cloned and Non Cloned Java Methods: A Large Scale Empirical Study.",
                    "\"Automated Debugging Considered Harmful\" Considered Harmful: A User Study Revisiting the Usefulness of Spectra-Based Fault Localization Techniques with Professionals Using Real Bugs from Large Systems.",
                    "An Automated Approach for Recommending When to Stop Performance Tests.",
                    "Recovering Commit Branch of Origin from GitHub Repositories.",
                    "Why are Commits Being Reverted?: A Comparative Study of Industrial and Open Source Projects.",
                    "Understanding Variable Code: Reducing the Complexity by Integrating Variability Information.",
                    "Concepts, Operations, and Feasibility of a Projection-Based Variation Control System.",
                    "Understanding the Factors That Impact the Popularity of GitHub Repositories.",
                    "Who is Who in the Mailing List? Comparing Six Disambiguation Heuristics to Identify Multiple Addresses of a Participant.",
                    "TechLand: Assisting Technology Landscape Inquiries with Insights from Stack Overflow.",
                    "Search-Based Peer Reviewers Recommendation in Modern Code Review.",
                    "ICON: Inferring Temporal Constraints from Natural Language API Descriptions.",
                    "Learning to Extract API Mentions from Informal Natural Language Discussions.",
                    "On the Reaction to Deprecation of 25, 357 Clients of 4+1 Popular Java APIs.",
                    "Accessing Inaccessible Android APIs: An Empirical Study.",
                    "Empirical Study on Synthesis Engines for Semantics-Based Program Repair.",
                    "Enhancing Automated Program Repair with Deductive Verification.",
                    "Automatic Detection of Instability Architectural Smells.",
                    "Towards Accurate Binary Correspondence Using Runtime-Observed Values.",
                    "A Quantitative and Qualitative Investigation of Performance-Related Commits in Android Apps.",
                    "On the Vocabulary Agreement in Software Issue Descriptions.",
                    "Repairing Intricate Faults in Code Using Machine Learning and Path Exploration.",
                    "Continuous Maintenance.",
                    "Using Temporal and Semantic Developer-Level Information to Predict Maintenance Activity Profiles.",
                    "Modular Change Impact Analysis for Configurable Software.",
                    "How Does the Shift to GitHub Impact Project Collaboration?",
                    "Key Elements Extraction and Traces Comprehension Using Gestalt Theory and the Helmholtz Principle.",
                    "Part of Speech Tagging Java Method Names.",
                    "Detecting Function Constructors in JavaScript.",
                    "Improving Code Maintainability: A Case Study on the Impact of Refactoring.",
                    "What is the Cause for a Defect to be Re-Assigned?",
                    "How Can We Help Software Rearchitecting Efforts? Study of an Industrial Case.",
                    "Continuous Delivery Practices in a Large Financial Organization.",
                    "Introducing Traceability and Consistency Checking for Change Impact Analysis across Engineering Tools in an Automation Solution Company: An Experience Report.",
                    "Use Cases of a Generic Model Interpreter in an Automotive Software Setting.",
                    "Integration of Static and Dynamic Code Analysis for Understanding Legacy Source Code.",
                    "A Case Study of Automated Feature Location Techniques for Industrial Cost Estimation.",
                    "A Tiered Approach Towards an Incremental BPEL to BPMN 2.0 Migration.",
                    "Effect of Time Window on the Performance of Continuous Regression Testing.",
                    "Customized Regression Testing Using Telemetry Usage Patterns.",
                    "Industrial Application of Automated Regression Testing in Test-Driven ETL Development.",
                    "SchemaAnalyst: Search-Based Test Data Generation for Relational Database Schemas.",
                    "mrstudyr: Retrospectively Studying the Effectiveness of Mutant Reduction Techniques.",
                    "BigCloneEval: A Clone Detection Tool Evaluation Framework with BigCloneBench.",
                    "NullTerminator: Pseudo-Automatic Refactoring to Null Object Design Pattern.",
                    "srcType: A Tool for Efficient Static Type Resolution.",
                    "A Tool for Efficiently Reverse Engineering Accurate UML Class Diagrams.",
                    "TraceLab Components for Reproducing Source Code Summarization Experiments.",
                    "Data and Analysis Code for GP EFSM Inference.",
                    "Artifact: Cassandra Source Code, Feature Descriptions across 27 Versions, with Starting and Ending Version Trace Matrices.",
                    "A Tool for Detecting and Refactoring the A?B*A Pattern in CSS.",
                    "Artifacts for \"A Comprehensive Study on the Energy Efficiency of Java's Thread-Safe Collections\".",
                    "Experimental Data for the A?B*A Pattern in CSS: Inputs and Outputs.",
                    "Resolving Input Validation Vulnerabilities by Retracing Taint Flow Through Source Code.",
                    "On the Popularity of GitHub Software.",
                    "A Roadmap for Co-Evolution of Meta-Models and Models.",
                    "Improving Bug Reporting and Testing for Mobile Applications.",
                    "A Multiagent-Based Framework for Self-Adaptive Software with Search-Based Optimization.",
                    "Measuring Code Similarity in Large-Scaled Code Corpora.",
                    "Automatically Documenting Software Artifacts.",
                    "Alternative Sources of Information for Code Smell Detection: Postcards from Far Away.",
                    "Configuring and Assembling Information Retrieval Based Solutions for Software Engineering Tasks.",
                    "iTrace: Overcoming the Limitations of Short Code Examples in Eye Tracking Experiments.",
                    "Automated GUI Testing of Android Apps: From Research to Practice.",
                    "srcML 1.0: Explore, Analyze, and Manipulate Source Code."
                ]
            },
            {
                "sub_name_abbr": "conf/icsm/2016mtd",
                "sub_name": "8th IEEE International Workshop on Managing Technical Debt, MTD 2016, Raleigh, NC, USA, October 4, 2016.",
                "count": 7,
                "papers": [
                    "How \"Specification by Example\" and Test-Driven Development Help to Avoid Technial Debt.",
                    "The Perception of Technical Debt in the Embedded Systems Domain: An Industrial Case Study.",
                    "Database Design Debts through Examining Schema Evolution.",
                    "Towards Assessing the Technical Debt of Undesired Software Behaviors in Design Patterns.",
                    "Technical Debt Indexes Provided by Tools: A Preliminary Discussion.",
                    "Practical Technical Debt Discovery by Matching Patterns in Assessment Graph.",
                    "Adjusting the Balance Sheet by Appending Technical Debt."
                ]
            }
        ]
    },
    {
        "year": "2015",
        "name": "31st ICSME 2015",
        "info": "Bremen, Germany",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2015",
                "sub_name": "2015 IEEE International Conference on Software Maintenance and Evolution, ICSME 2015, Bremen, Germany, September 29 - October 1, 2015.",
                "count": 79,
                "papers": [
                    "Software history under the lens: A study on why and how developers examine it.",
                    "To fix or to learn? How production bias affects developers' information foraging during debugging.",
                    "Developers' perception of co-change patterns: An empirical study.",
                    "When and why developers adopt and change software licenses.",
                    "Investigating naming convention adherence in Java references.",
                    "Developing a model of loop actions by mining loop characteristics from a large code corpus.",
                    "Delta extraction: An abstraction technique to comprehend why two objects could be related.",
                    "Modeling changeset topics for feature location.",
                    "Four eyes are better than two: On the impact of code reviews on software quality.",
                    "A comparative study on the bug-proneness of different types of code clones.",
                    "An empirical study of bugs in test code.",
                    "Investigating code review quality: Do people and participation matter?",
                    "Inter-smell relations in industrial and open source systems: A replication and comparative analysis.",
                    "Evaluating clone detection tools with BigCloneBench.",
                    "Uncovering dependence clusters and linchpin functions.",
                    "Forked and integrated variants in an open-source firmware project.",
                    "Towards automating dynamic analysis for behavioral design pattern detection.",
                    "Practical and accurate pinpointing of configuration errors using static analysis.",
                    "Deterministic dynamic race detection across program versions.",
                    "Program specialization and verification using file format specifications.",
                    "An empirical evaluation of ant build maintenance using Formiga.",
                    "Scripting parametric refactorings in Java to retrofit design patterns.",
                    "System specific, source code transformations.",
                    "A decision support system to refactor class cycles.",
                    "On the role of developer's scattered changes in bug prediction.",
                    "How do developers react to API evolution? The Pharo ecosystem case.",
                    "Who should review this change?: Putting text and file location analyses together for more accurate recommendations.",
                    "Exploring API method parameter recommendations.",
                    "How can i improve my app? Classifying user reviews for software maintenance and evolution.",
                    "User reviews matter! Tracking crowdsourced reviews to support evolution of successful apps.",
                    "What are the characteristics of high-rated apps? A case study on free Android Applications.",
                    "GreenAdvisor: A tool for analyzing the impact of software evolution on energy consumption.",
                    "Apiwave: Keeping track of API popularity and migration.",
                    "UrbanIt: Visualizing repositories everywhere.",
                    "ePadEvo: A tool for the detection of behavioral design patterns.",
                    "PARC: Recommending API methods parameters.",
                    "ArchFLoc: Locating and explaining architectural features in running web applications.",
                    "WSDarwin: A web application for the support of REST service evolution.",
                    "DUM-Tool.",
                    "An empirical study on the handling of crash reports in a large software company: An experience report.",
                    "How developers detect and fix performance bottlenecks in Android apps.",
                    "Challenges for maintenance of PLC-software and its related hardware for automated production systems: Selected industrial Case Studies.",
                    "Code smells in spreadsheet formulas revisited on an industrial dataset.",
                    "Web usage patterns of developers.",
                    "Identifying wasted effort in the field via developer interaction data.",
                    "Is this code written in English? A study of the natural language of comments and identifiers in practice.",
                    "Impact assessment for vulnerabilities in open-source software libraries.",
                    "Experiences from performing software quality evaluations via combining benchmark-based metrics analysis, software visualization, and expert assessment.",
                    "Do automatic refactorings improve maintainability? An industrial case study.",
                    "An empirical evaluation of the effectiveness of inspection scenarios developed from a defect repository.",
                    "Efficient regression testing based on test history: An industrial evaluation.",
                    "Migrating legacy control software to multi-core hardware.",
                    "Query by example in large-scale code repositories.",
                    "Does software modernization deliver what it aimed for? A post modernization analysis of five software modernization case studies.",
                    "Reverse engineering a visual age application.",
                    "Using static analysis for knowledge extraction from industrial User Interfaces.",
                    "Constrained feature selection for localizing faults.",
                    "Crowdsourced bug triaging.",
                    "Toward improving graftability on automated program repair.",
                    "Mining Stack Overflow for discovering error patterns in SQL queries.",
                    "Towards purity-guided refactoring in Java.",
                    "Fitness workout for fat interfaces: Be slim, clean, and flexible.",
                    "Choosing your weapons: On sentiment analysis tools for software engineering research.",
                    "Assessing developer contribution with repository mining-based metrics.",
                    "What's hot in software engineering Twitter space?",
                    "Validating metric thresholds with developers: An early result.",
                    "Towards a survival analysis of database framework usage in Java projects.",
                    "Exploring the use of deep learning for feature location.",
                    "Using stereotypes in the automatic generation of natural language summaries for C++ methods.",
                    "Keecle: Mining key architecturally relevant classes using dynamic analysis.",
                    "Combining software interrelationship data across heterogeneous software repositories.",
                    "Recovering transitive traceability links among software artifacts.",
                    "Live object exploration: Observing and manipulating behavior and state of Java objects.",
                    "Supporting newcomers in software development projects.",
                    "Advances in software product quality measurement and its applications in software evolution.",
                    "Treating software quality as a first-class entity.",
                    "Detection strategies of smells in web software development.",
                    "Code smells in highly configurable software.",
                    "A model-based approach to software refactoring."
                ]
            },
            {
                "sub_name_abbr": "conf/icsm/2015mtd",
                "sub_name": "7th IEEE International Workshop on Managing Technical Debt, MTD@ICSME 2015, Bremen, Germany, October 2, 2015.",
                "count": 13,
                "papers": [
                    "Message from the chairs.",
                    "Towards an open-source tool for measuring and visualizing the interest of technical debt.",
                    "Detecting and quantifying different types of self-admitted technical Debt.",
                    "Towards a prioritization of code debt: A code smell Intensity Index.",
                    "A Contextualized Vocabulary Model for identifying technical debt on code comments.",
                    "Identifying and visualizing Architectural Debt and its efficiency interest in the automotive domain: A case study.",
                    "Validating and prioritizing quality rules for managing technical debt: An industrial case study.",
                    "Technical debt in Automated Production Systems.",
                    "Estimating the breaking point for technical debt.",
                    "Technical debt of standardized test software.",
                    "Decision-making framework for refactoring.",
                    "A framework to aid in decision making for technical debt management.",
                    "Restructuring and refinancing technical debt."
                ]
            },
            {
                "sub_name_abbr": "conf/icsm/2015mud",
                "sub_name": "5th IEEE Workshop on Mining Unstructured Data MUD@ICSME 2015, Bremen, Germany, September 28, 2015.",
                "count": 3,
                "papers": [
                    "Heuristic-based part-of-speech tagging of source code identifiers and comments.",
                    "SODA: the stack overflow dataset almanac.",
                    "Matching machine-code functions in executables within one product line via bioinformatic sequence alignment."
                ]
            }
        ]
    },
    {
        "year": "2014",
        "name": "30th ICSME 2014",
        "info": "Victoria, BC, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2014",
                "sub_name": "30th IEEE International Conference on Software Maintenance and Evolution, Victoria, BC, Canada, September 29 - October 3, 2014.",
                "count": 104,
                "papers": [
                    "An Empirical Study of the Effects of Expert Knowledge on Bug Reports.",
                    "Determining Developers' Expertise and Role: A Graph Hierarchy-Based Approach.",
                    "Understanding Log Lines Using Development Knowledge.",
                    "How Does Exception Handling Behavior Evolve? An Exploratory Study in Java and C# Applications.",
                    "Why Do Automated Builds Break? An Empirical Study.",
                    "A Fine-Grained Analysis on the Evolutionary Coupling of Cloned Code.",
                    "CoMoGen: An Approach to Locate Relevant Task Context by Combining Search and Navigation.",
                    "CSCC: Simple, Efficient, Context Sensitive Code Completion.",
                    "A Slice-Based Estimation Approach for Maintenance Effort.",
                    "An Exploratory Study on Self-Admitted Technical Debt.",
                    "Do They Really Smell Bad? A Study on Developers' Perception of Bad Code Smells.",
                    "Smelling Faults in Spreadsheets.",
                    "An Empirical Study of the Energy Consumption of Android Applications.",
                    "How Does Code Obfuscation Impact Energy Usage?",
                    "Prevalence and Maintenance of Automated Functional Tests for Web Applications.",
                    "On the Use of Stack Traces to Improve Text Retrieval-Based Bug Localization.",
                    "On the Effectiveness of Information Retrieval Based Bug Localization for C Programs.",
                    "Compositional Vector Space Models for Improved Bug Localization.",
                    "Boosting Bug-Report-Oriented Fault Localization with Segmentation and Stack-Trace Analysis.",
                    "Learning to Combine Multiple Ranking Metrics for Fault Localization.",
                    "Pinso: Precise Isolation of Concurrency Bugs via Delta Triaging.",
                    "Quantifying the Encapsulation of Implemented Software Architectures.",
                    "Empirical Analysis of the Relationship between CC and SLOC in a Large Corpus of Java Methods.",
                    "Is Popularity a Measure of Quality? An Analysis of Maven Components.",
                    "Mining Co-change Information to Understand When Build Changes Are Necessary.",
                    "How Developers' Collaborations Identified from Different Sources Tell Us about Code Changes.",
                    "On Analyzing the Topology of Commit Histories in Decentralized Version Control Systems.",
                    "Writing Acceptable Patches: An Empirical Study of Open Source Project Patches.",
                    "An Empirical Study of Delays in the Integration of Addressed Issues.",
                    "EnTagRec: An Enhanced Tag Recommendation System for Software Information Sites.",
                    "Mining API Usage Examples from Test Code.",
                    "Combining Text Mining and Data Mining for Bug Report Classification.",
                    "Evaluating Modern Clone Detection Tools.",
                    "Recommending Clones for Refactoring Using Design, Context, and History.",
                    "Clonepedia: Summarizing Code Clones by Common Syntactic Context for Software Maintenance.",
                    "Refactoring Fat Interfaces Using a Genetic Algorithm.",
                    "Refactoring Java Concurrent Programs Based on Synchronization Requirement Analysis.",
                    "Scaling Testing of Refactoring Engines.",
                    "Maintenance Patterns of Large-Scale PHP Web Applications.",
                    "Enhancing Clone-and-Own with Systematic Reuse for Developing Software Variants.",
                    "Continuous Integration in a Social-Coding World: Empirical Evidence from GitHub.",
                    "Clustering Commits for Understanding the Intents of Implementation.",
                    "Code Tagging as a Social Game.",
                    "Visual Storytelling of Development Sessions.",
                    "Interactive Visualization of Bug Reports Using Topic Evolution and Extractive Summaries.",
                    "Recovering Feature-to-Code Mappings in Mixed-Variability Software Systems.",
                    "Using Structured Queries for Source Code Search.",
                    "Towards Creating Test Cases Using Code Search.",
                    "Learning to Rank Improves IR in SE.",
                    "Which Features Do My Users (Not) Use?",
                    "Dynamic Inference of Change Contracts.",
                    "On the Impact of Refactoring Operations on Code Quality Metrics.",
                    "Establishing Referential Integrity in Legacy Information Systems - Reality Bites!",
                    "Establishing the Source Code Disruption Caused by Automated Remodularisation Tools.",
                    "Mining Software Contracts for Software Evolution.",
                    "Towards a Big Data Curated Benchmark of Inter-project Code Clones.",
                    "Compiling Clones: What Happens?",
                    "Semi-automatic Identification and Representation of Subsystem Variability in Simulink Models.",
                    "A Novel Approach to Detect Unintentional Re-implementations.",
                    "Program Dependency Analysis for Consolidating Customized Product Copies.",
                    "Program Slicing in the Presence of Preprocessor Variability.",
                    "Supporting Maintenance and Evolution of Access Control Models in Web Applications.",
                    "Overthrowing the Tyranny of Alphabetical Ordering in Documentation Systems.",
                    "A Web Service Test Generator.",
                    "Using Software Metrics to Estimate the Impact of Maintenance in the Performance of Embedded Software.",
                    "Fault Localization for Make-Based Build Crashes.",
                    "A Manual Categorization of Android App Development Issues on Stack Overflow.",
                    "A Pilot Study of Diversity in High Impact Bugs.",
                    "Improving Low Quality Stack Overflow Post Detection.",
                    "Evolutionary Improvements of Cross-Cutting Concerns: Performance in Practice.",
                    "Autonomic Software Systems: Developing for Self-Managing Legacy Systems.",
                    "Reverse Engineering PL/SQL Legacy Code: An Experience Report.",
                    "A Heuristic-Based Approach to Refactor Crosscutting Behaviors in UML State Machines.",
                    "Continuous Software Quality Control in Practice.",
                    "Software Defect Prediction for LSI Designs.",
                    "Improving Review of Clustered-Code Analysis Warnings.",
                    "Applying ISO/IEC 25010 Standard to Prioritize and Solve Quality Issues of Automatic ETL Processes.",
                    "Prompter: A Self-Confident Recommender System.",
                    "SEAgle: Effortless Software Evolution Analysis.",
                    "Querying the History of Software Projects Using QWALKEKO.",
                    "Tool Demo: Browsing Software Repositories.",
                    "LDA Analyzer: A Tool for Exploring Topic Models.",
                    "maintaineR: A Web-Based Dashboard for Maintainers of CRAN Packages.",
                    "Tools for Enabling Automatic Validation of Large-Scale Parallel Application Simulations.",
                    "ReDA: A Web-Based Visualization Tool for Analyzing Modern Code Review Dataset.",
                    "Reviewer Recommender of Pull-Requests in GitHub.",
                    "ChainTracker: Towards a Comprehensive Tool for Building Code-Generation Environments.",
                    "SurfClipse: Context-Aware Meta-search in the IDE.",
                    "Context-Sensitive Code Completion Tool for Better API Usability.",
                    "FaultySheet Detective: When Smells Meet Fault Localization.",
                    "RTTool: A Tool for Extracting Relative Thresholds for Source Code Metrics.",
                    "Model Clone Detector Evaluation Using Mutation Analysis.",
                    "Practical Software Quality Prediction.",
                    "Reflections on Collaborative Software Visualization in Co-located Environments.",
                    "Studying the Impact of Developer Communication on the Quality and Evolution of a Software System: A Doctoral Dissertation Retrospective.",
                    "Supporting Query Formulation for Text Retrieval Applications in Software Engineering.",
                    "Co-evolution of Model-Based Tests for Industrial Automotive Software.",
                    "Detecting Collaborative Patterns in Programs.",
                    "The Maintenance and Evolution of Field-Representative Performance Tests.",
                    "Towards Self-Adaptive IDEs.",
                    "Extracting Code Examples from Unit Test Cases.",
                    "WSDarwin: A Framework for the Support of Web Service Evolution.",
                    "Managing Software Defects.",
                    "Specification and Detection of SOA Antipatterns."
                ]
            },
            {
                "sub_name_abbr": "conf/icsm/2014mtd",
                "sub_name": "Sixth International Workshop on Managing Technical Debt, MTD@ICSME 2014, Victoria, BC, Canada, September 30, 2014.",
                "count": 9,
                "papers": [
                    "Towards an Ontology of Terms on Technical Debt.",
                    "Technical Debt: The Ultimate Antipattern - The Biggest Costs May Be hidden, Widespread, and Long Term.",
                    "Explicating, Understanding, and Managing Technical Debt from Self-Driving Miniature Car Projects.",
                    "The Correspondence Between Software Quality Models and Technical Debt Estimation Approaches.",
                    "A Framework for Estimating Interest on Technical Debt by Monitoring Developer Activity Related to Code Comprehension.",
                    "When-to-Release Decisions in Consideration of Technical Debt.",
                    "Technical Debt and the Effect of Agile Software Development Practices on It - An Industry Practitioner Survey.",
                    "Managing Technical Debt in Database Schemas of Critical Software.",
                    "Are the Methods in Your Data Access Objects (DAOs) in the Right Place? A Preliminary Study."
                ]
            },
            {
                "sub_name_abbr": "conf/icsm/2014mud",
                "sub_name": "IEEE 4th Workshop on Mining Unstructured Data, MUD@ICSME 2014, Victoria, BC, Canada, 30 September, 2014.",
                "count": 4,
                "papers": [
                    "An Exploratory Study on Software Microblogger Behaviors.",
                    "Modeling Changeset Topics.",
                    "Mining Peer Code Review System for Computing Effort and Contribution Metrics for Patch Reviewers.",
                    "Combining Text Mining and Visualization Techniques to Study Teams' Behavioral Processes."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2014",
                "sub_name": "14th IEEE International Working Conference on Source Code Analysis and Manipulation, SCAM 2014, Victoria, BC, Canada, September 28-29, 2014.",
                "count": 35,
                "papers": [
                    "Effect of Clone Information on the Performance of Developers Fixing Cloned Bugs.",
                    "Automatic Identification of Important Clones for Refactoring and Tracking.",
                    "A Comparative Study of Bug Patterns in Java Cloned and Non-cloned Code.",
                    "A Change-Type Based Empirical Study on the Stability of Cloned Code.",
                    "C/C++ Thread Safety Analysis.",
                    "Toolset and Program Repository for Code Coverage-Based Test Suite Analysis and Manipulation.",
                    "The Ekeko/X Program Transformation Tool.",
                    "Flowgen: Flowchart-Based Documentation Framework for C++.",
                    "PESTO: A Tool for Migrating DOM-Based to Visual Web Tests.",
                    "Pangea: A Workbench for Statically Analyzing Multi-language Software Corpora.",
                    "Source Meter Sonar Qube Plug-in.",
                    "Total ADS: Automated Software Anomaly Detection System.",
                    "ACUA: API Change and Usage Auditor.",
                    "Bulk Fixing Coding Issues and Its Effects on Software Quality: Is It Worth Refactoring?",
                    "Instrumentation of Annotated C Programs for Test Generation.",
                    "Scalable Security Verification of Software at Compile Time.",
                    "Impact of Code Refactoring Using Object-Oriented Methodology on a Scientific Computing Application.",
                    "Concolic Fault Localization.",
                    "On the Accuracy of Forward Dynamic Slicing and Its Effects on Software Maintenance.",
                    "Efficient Utilization of Secondary Storage for Scalable Dynamic Slicing.",
                    "SENSA: Sensitivity Analysis for Quantitative Change-Impact Prediction.",
                    "Seeing Is Slicing: Observation Based Slicing of Picture Description Languages.",
                    "Explaining Why Methods Change Together.",
                    "Studying Fine-Grained Co-evolution Patterns of Production and Test Code.",
                    "Supplementary Bug Fixes vs. Re-opened Bugs.",
                    "Semantic Versioning versus Breaking Changes: A Study of the Maven Repository.",
                    "Fast Flow Analysis with Godel Hashes.",
                    "A Parallel On-Demand Algorithm for Computing Interprocedural Dominators.",
                    "Are Object Graphs Extracted Using Abstract Interpretation Significantly Different from the Code?",
                    "Bit-Level Taint Analysis.",
                    "Pruning, Pushdown Exception-Flow Analysis.",
                    "On Automatically Generating Commit Messages via Summarization of Source Code Changes.",
                    "On the Use of Context in Recommending Exception Handling Code Examples.",
                    "A Pattern Search Method for Unpreprocessed C Programs Based on Tokenized Syntax Trees.",
                    "Identifying Source Code Reuse across Repositories Using LCS-Based Source Code Similarity."
                ]
            }
        ]
    },
    {
        "year": "2013",
        "name": "29th ICSM 2013",
        "info": "Eindhoven, The Netherlands",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2013",
                "sub_name": "2013 IEEE International Conference on Software Maintenance, Eindhoven, The Netherlands, September 22-28, 2013.",
                "count": 92,
                "papers": [
                    "A Fuzzy Expert System for Cost-Effective Regression Testing Strategies.",
                    "Identifying Process Improvement Targets in Test Processes: A Case Study.",
                    "On Rapid Releases and Software Testing.",
                    "How Multiple Developers Affect the Evolution of Code Clones.",
                    "Mining Logical Clones in Software: Revealing High-Level Business and Programming Rules.",
                    "An Empirical Study of Clone Removals.",
                    "Content Categorization of API Discussions.",
                    "An Empirical Study of API Stability and Adoption in the Android Ecosystem.",
                    "How We Design Interfaces, and How to Assess It.",
                    "An Accurate Stack Memory Abstraction and Symbolic Analysis Framework for Executables.",
                    "An Automation-Assisted Empirical Study on Lock Usage for Concurrent Programs.",
                    "Leveraging Performance Counters and Execution Logs to Diagnose Memory-Related Performance Issues.",
                    "Exploring the Limits of Domain Model Recovery.",
                    "Combining Static and Dynamic Analyses to Reverse-Engineer Scenario Diagrams.",
                    "An Analysis of Machine Learning Algorithms for Condensing Reverse Engineered Class Diagrams.",
                    "Output-Oriented Refactoring in PHP-Based Dynamic Web Applications.",
                    "On the Automation of Dependency-Breaking Refactorings in Java.",
                    "Reducing the Energy Consumption of Mobile Applications Behind the Scenes.",
                    "Efficient Automated Program Repair through Fault-Recorded Testing Prioritization.",
                    "Dealing with Faults in Source Code: Abbreviated vs. Full-Word Identifier Names.",
                    "DRONE: Predicting Priority of Reported Bugs by Multi-factor Analysis.",
                    "An Empirical Investigation on Documentation Usage Patterns in Maintenance Tasks.",
                    "Architecture Compliance Checking of Semantically Rich Modular Architectures: A Comparative Study of Tool Support.",
                    "LHDiff: A Language-Independent Hybrid Approach for Tracking Source Code Lines.",
                    "Mining Software Profile across Multiple Repositories for Hierarchical Categorization.",
                    "Mining Software Repositories for Accurate Authorship.",
                    "Investigating the Impact of Code Smells on System's Quality: An Empirical Study on Systems of Different Application Domains.",
                    "Predicting Bugs Using Antipatterns.",
                    "The Evolution of Project Inter-dependencies in a Software Ecosystem: The Case of Apache.",
                    "Stakeholders' Information Needs for Artifacts and Their Dependencies in a Real World Context.",
                    "Improving Feature Location by Enhancing Source Code with Stereotypes.",
                    "Will Fault Localization Work for These Failures? An Automated Approach to Predict Effectiveness of Fault Localization Tools.",
                    "Enhancing Software Traceability by Automatically Expanding Corpora with Relevant Documentation.",
                    "Supporting and Accelerating Reproducible Research in Software Maintenance Using TraceLab Component Library.",
                    "Social Activities Rival Patch Submission for Prediction of Developer Initiation in OSS Projects.",
                    "How Does Context Affect the Distribution of Software Maintainability Metrics?",
                    "Refactoring Clones: An Optimization Problem.",
                    "Multi-abstraction Concern Localization.",
                    "Towards a Weighted Voting System for Q&A Sites.",
                    "Latent Co-development Analysis Based Semantic Search for Large Code Repositories.",
                    "Differentiating Roles of Program Elements in Action-Oriented Concerns.",
                    "Theory and Practice, Do They Match? A Case with Spectrum-Based Fault Localization.",
                    "An Initial Investigation into Change-Based Reconstruction of Floss-Refactorings.",
                    "Automatically Extracting Instances of Code Change Patterns with AST Analysis.",
                    "Identification of Refused Bequest Code Smells.",
                    "Code Smell Detection: Towards a Machine Learning-Based Approach.",
                    "Variations on Using Propagation Cost to Measure Architecture Modifiability Properties.",
                    "Multi-objective Optimal Test Suite Computation for Software Product Line Pairwise Testing.",
                    "Which Feature Location Technique is Better?",
                    "Automatic Means of Identifying Evolutionary Events in Software Development.",
                    "Towards Understanding Large-Scale Adaptive Changes from Version Histories.",
                    "Can Refactoring Cyclic Dependent Components Reduce Defect-Proneness?",
                    "Towards a Taxonomy of Programming-Related Difficulties during Maintenance.",
                    "A Pilot Experiment to Quantify the Effect of Documentation Accuracy on Maintenance Tasks.",
                    "Task-Driven Software Summarization.",
                    "Determining \"Grim Reaper\" Policies to Prevent Languishing Bugs.",
                    "Which Practices Are Suitable for an Academic Software Project?",
                    "WSDARWIN: A Decision-Support Tool for Web-Service Evolution.",
                    "A Study on Developers' Perceptions about Exception Handling Bugs.",
                    "On the Relationship between the Vocabulary of Bug Reports and Source Code.",
                    "Database-Aware Fault Localization for Dynamic Web Applications.",
                    "On the Personality Traits of StackOverflow Users.",
                    "Towards Identification of Software Improvements and Specification Updates by Comparing Monitored and Specified End-User Behavior.",
                    "An Empirical Illustration to Validate a FLOSS Development Model Using S-Shaped Curves.",
                    "Understanding Schema Evolution as a Basis for Database Reengineering.",
                    "SAMOA - A Visual Software Analytics Platform for Mobile Applications.",
                    "Towards a Scalable Cloud Platform for Search-Based Probabilistic Testing.",
                    "LHDiff: Tracking Source Code Lines to Support Software Maintenance Activities.",
                    "gCad: A Near-Miss Clone Genealogy Extractor to Support Clone Evolution Analysis.",
                    "eCITY: A Tool to Track Software Structural Changes Using an Evolving City.",
                    "ExSchema: Discovering and Maintaining Schemas from Polyglot Persistence Applications.",
                    "A Visualization Tool for Reverse-Engineering of Complex Component Applications.",
                    "Interactive Exploration of Collaborative Software-Development Data.",
                    "SourceMiner Evolution: A Tool for Supporting Feature Evolution Comprehension.",
                    "CONQUER: A Tool for NL-Based Query Refinement and Contextualizing Code Search Results.",
                    "srcML: An Infrastructure for the Exploration, Analysis, and Manipulation of Source Code: A Tool Demonstration.",
                    "TRINITY: An IDE for the Matrix.",
                    "E-Xplore: Enterprise API Explorer.",
                    "Browserbite: Accurate Cross-Browser Testing via Machine Learning over Image Features.",
                    "Automated Classification of Static Code Analysis Alerts: A Case Study.",
                    "Mining Telecom System Logs to Facilitate Debugging Tasks.",
                    "Test Case Prioritization for Continuous Regression Testing: An Industrial Case Study.",
                    "Improving Statistical Approach for Memory Leak Detection Using Machine Learning.",
                    "Large-Scale Automated Refactoring Using ClangMR.",
                    "Assuming Software Maintenance of a Large, Embedded Legacy System from the Original Developer.",
                    "The Adventure of Developing a Software Application on a Pre-release Platform: Features and Learned Lessons.",
                    "Analysis of Multi-dimensional Code Couplings.",
                    "How Good Are Code Smells for Evaluating Software Maintainability? Results from a Comparative Case Study.",
                    "Refactoring Planning for Design Smell Correction: Summary, Opportunities and Lessons Learned.",
                    "Revealing the Effect of Coding Practices on Software Maintainability.",
                    "Automated S/W Reengineering for Fault-Tolerant and Energy-Efficient Distributed Execution.",
                    "Reverse Engineering Web Sales Configurators."
                ]
            },
            {
                "sub_name_abbr": "conf/icsm/2013cpsm",
                "sub_name": "IEEE 1st International Workshop on Communicating Business Process and Software Models Quality, Understandability, and Maintainability, CPSM@ICSM 2013, Eindhoven, Netherlands, September 23, 2013.",
                "count": 5,
                "papers": [
                    "Software engineering and business process management: Interpretatio, imitatio, aemulatio.",
                    "Measuring and visualising the quality of models.",
                    "Towards a maintainability model for business processes: Adapting a software maintainability model (position paper).",
                    "Integrated modeling of process- and data-centric software systems with PHILharmonicFlows.",
                    "Impact analysis of UML design changes using model slicing."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2013",
                "sub_name": "13th IEEE International Working Conference on Source Code Analysis and Manipulation, SCAM 2013, Eindhoven, Netherlands, September 22-23, 2013.",
                "count": 24,
                "papers": [
                    "Empirical investigation of SEA-based dependence cluster properties.",
                    "Characterization and assessment of the linux configuration complexity.",
                    "Criticality of defects in cyclic dependent components.",
                    "Code clustering workbench.",
                    "ForkSim: Generating software forks for evaluating cross-project similarity analysis tools.",
                    "Empirical evidence of large-scale diversity in API usage of object-oriented software.",
                    "Aspectual source code analysis with GASR.",
                    "Driving a sound static software analyzer with branch-and-bound.",
                    "PtrTracker: Pragmatic pointer analysis.",
                    "Tracing with a minimal number of probes.",
                    "A state alteration and inspection-based interactive debugger.",
                    "Proteum/FL: A tool for localizing faults using mutation analysis.",
                    "GeCoS: A framework for prototyping custom hardware design flows.",
                    "Review efforts reduction by partitioning of static analysis warnings.",
                    "JSNOSE: Detecting JavaScript Code Smells.",
                    "Determining dynamic coupling in JavaScript using object type inference.",
                    "CodeMetropolis - code visualisation in MineCraft.",
                    "MetricMiner: Supporting researchers in mining software repositories.",
                    "Assembler restructuring in FermaT.",
                    "A Hidden Markov Model to detect coded information islands in free text.",
                    "Fix-it: An extensible code auto-fix component in Review Bot.",
                    "sql-schema-comparer: Support of multi-language refactoring with relational databases.",
                    "A relational symbolic execution algorithm for constraint-based testing of database programs.",
                    "Ontological interpretation of object-oriented programming abstractions."
                ]
            }
        ]
    },
    {
        "year": "2012",
        "name": "28th ICSM 2012",
        "info": "Trento, Italy",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2012",
                "sub_name": "28th IEEE International Conference on Software Maintenance, ICSM 2012, Trento, Italy, September 23-28, 2012.",
                "count": 84,
                "papers": [
                    "From off-Line to continuous on-line maintenance.",
                    "Leveraging natural language analysis of software: Achievements, challenges, and opportunities.",
                    "An industrial case study of Coman's automated task detection algorithm: What Worked, What Didn't, and Why.",
                    "Vasco: A visual approach to explore object churn in framework-intensive applications.",
                    "What makes a good code example?: A study of programming Q&A in StackOverflow.",
                    "Testing C++ generic libraries.",
                    "Code coverage-based regression test selection and prioritization in WebKit.",
                    "An empirical analysis of the distribution of unit test smells and their impact on software maintenance.",
                    "Interactive fault localization leveraging simple user feedback.",
                    "Finding errors from reverse-engineered equality models using a constraint solver.",
                    "The Order of Things: How developers sort fields and methods.",
                    "Rejuvenating C++ programs through demacrofication.",
                    "A change impact analysis to characterize evolving program behaviors.",
                    "Fine-grained change impact analysis for component-based product families.",
                    "Configuration selection using code change impact analysis for regression testing.",
                    "Build system issues in multilanguage software.",
                    "Detecting semantic changes in Makefile build code.",
                    "An empirical study of build system migrations in practice: Case studies on KDE and the Linux kernel.",
                    "Assessing the effect of requirements traceability for software maintenance.",
                    "Do data dependencies in source code complement call dependencies for understanding requirements traceability?",
                    "An empirical study on requirements traceability using eye-tracking.",
                    "Recovering commit dependencies for selective code integration in software product lines.",
                    "Search-based detection of high-level model changes.",
                    "How often do unintended inconsistencies happen? Deriving modification patterns and detecting overlooked code fragments.",
                    "LINSEN: An efficient approach to split identifiers and expand abbreviations.",
                    "Relating requirements to implementation via topic analysis: Do topics extracted from requirements make sense to managers and developers?",
                    "Making automatic repair for large-scale programs more efficient using weak recompilation.",
                    "The impact of bug management patterns on bug fixing: A case study of Eclipse projects.",
                    "Things structural clones tell that simple clones don't.",
                    "Cloning practices: Why developers clone and what can be changed.",
                    "Models are code too: Near-miss clone detection for Simulink models.",
                    "Do code smells reflect important maintainability aspects?",
                    "A cost model based on software maintainability.",
                    "A systematic mapping study on dynamic metrics and software quality.",
                    "Refactoring in the presence of annotations.",
                    "Search-based refactoring: Towards semantics preservation.",
                    "An empirical investigation into the impact of refactoring on regression testing.",
                    "Survival of Eclipse third-party plug-ins.",
                    "Measuring software library stability through historical version analysis.",
                    "Inferring the data access from the clients of generic APIs.",
                    "Refactoring meets spreadsheet formulas.",
                    "Detecting code smells in spreadsheet formulas.",
                    "When would this bug get reported?",
                    "Modelling the 'Hurried' bug report reading process to summarize bug reports.",
                    "Domain specific warnings: Are they any better?",
                    "Triaging incoming change requests: Bug or commit history, or code authorship?",
                    "Feature-gathering dependency-based software clustering using Dedication and Modularity.",
                    "Supervised software modularisation.",
                    "A structured approach to assess third-party library usage.",
                    "Reengineering embedded automotive software.",
                    "Incremental reengineering and migration of a 40 year old airport operations system.",
                    "Dead code elimination for web systems written in PHP: Lessons learned from an industry case.",
                    "Sustainability guidelines for long-living software systems.",
                    "Facilitating enterprise software developer communication with CARES.",
                    "A framework for incremental quality analysis of large software systems.",
                    "Locating performance improvement opportunities in an industrial software-as-a-service application.",
                    "Automated architectural reviews with Semmle.",
                    "Time-leverage point detection for time sensitive software maintenance.",
                    "Inferring weak references for fixing Java memory leaks.",
                    "Move code refactoring with dynamic analysis.",
                    "Dependence communities in source code.",
                    "A study on repetitiveness of code completion operations.",
                    "Vocabulary normalization improves IR-based concept location.",
                    "Who's who in Gnome: Using LSA to merge software repository identities.",
                    "Automatic classification of software related microblogs.",
                    "Detecting similar applications with collaborative tagging.",
                    "Inferring semantically related software terms and their taxonomy by leveraging collaborative tagging.",
                    "Version history based source code plagiarism detection in proprietary systems.",
                    "Applying technical stock market indicators to analyze and predict the evolvability of open source projects.",
                    "Refactoring edit history of source code.",
                    "Retrieving software maintenance history with topic models.",
                    "A software change impact analysis taxonomy.",
                    "Adapting Linux for mobile platforms: An empirical study of Android.",
                    "SEANets: Software evolution analysis with networks.",
                    "Understanding model evolution through semantically lifting model differences with SiLift.",
                    "TraceME: Traceability Management in Eclipse.",
                    "Bacterio: Java mutation testing tool: A framework to evaluate quality of tests cases.",
                    "A toolset for GUI testing of Android applications.",
                    "MOTCP: A tool for the prioritization of test cases based on a sorting genetic algorithm and Latent Semantic Indexing.",
                    "The demacrofier.",
                    "Supporting the identification of architecturally-relevant code anomalies.",
                    "reBPMN: Recovering and reducing business processes.",
                    "MARBLE: Modernization approach for recovering business processes from legacy information systems.",
                    "Understanding deployment costs of enterprise systems: Towards architecture support in deployment decisions."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2012",
                "sub_name": "12th IEEE International Working Conference on Source Code Analysis and Manipulation, SCAM 2012, Riva del Garda, Italy, September 23-24, 2012.",
                "count": 22,
                "papers": [
                    "Cooperative Testing and Analysis: Human-Tool, Tool-Tool and Human-Human Cooperations to Get Work Done.",
                    "Collections Frameworks for Points-To Analysis.",
                    "Building Useful Program Analysis Tools Using an Extensible Java Compiler.",
                    "Impact Analysis in the Presence of Dependence Clusters Using Static Execute after in WebKit.",
                    "Closed Symbolic Execution for Verifying Program Termination.",
                    "Alias-Aware Propagation of Simple Pattern-Based Properties in PHP Applications.",
                    "CAWDOR: Compiler Assisted Worm Defense.",
                    "Folding Repeated Instructions for Improving Token-Based Code Clone Detection.",
                    "Evolution of Near-Miss Clones.",
                    "Optimizing Expression Selection for Lookup Table Program Transformation.",
                    "Cross-Language Code Analysis and Refactoring.",
                    "When Does a Refactoring Induce Bugs? An Empirical Study.",
                    "Aucsmith-Like Obfuscation of Java Bytecode.",
                    "AccessAnalysis: A Tool for Measuring the Appropriateness of Access Modifiers in Java Systems.",
                    "Dynamic Trace-Based Data Dependency Analysis for Parallelization of C Programs.",
                    "Bakar Alir: Supporting Developers in Construction of Information Flow Contracts in SPARK.",
                    "InputTracer: A Data-Flow Analysis Tool for Manual Program Comprehension of x86 Binaries.",
                    "Combining Conceptual and Domain-Based Couplings to Detect Database and Code Dependencies.",
                    "What Does Control Flow Really Look Like? Eyeballing the Cyclomatic Complexity Metric.",
                    "Compatibility Prediction of Eclipse Third-Party Plug-ins in New Eclipse Releases.",
                    "Improving Bug Location Using Binary Class Relationships.",
                    "On the Use of Stemming for Concern Location and Bug Localization in Java."
                ]
            }
        ]
    },
    {
        "year": "2011",
        "name": "27th ICSM 2011",
        "info": "Williamsburg, VA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2011",
                "sub_name": "IEEE 27th International Conference on Software Maintenance, ICSM 2011, Williamsburg, VA, USA, September 25-30, 2011.",
                "count": 79,
                "papers": [
                    "Foreword.",
                    "How to steal a botnet and what can happen when you do.",
                    "Useful software engineering research - leading a double-agent life.",
                    "Fault interaction and its repercussions.",
                    "A novel approach to regression test selection for J2EE applications.",
                    "Localizing failure-inducing program edits based on spectrum information.",
                    "Automated change impact analysis for agent systems.",
                    "ImpactScale: Quantifying change impact to predict faults in large software systems.",
                    "A seismology-inspired approach to study change propagation.",
                    "SCOTCH: Test-to-code traceability using slicing and conceptual coupling.",
                    "Identifying distributed features in SOA by mining dynamic call trees.",
                    "Identifying performance deviations in thread pools.",
                    "Mining java class naming conventions.",
                    "Generating natural language summaries for crosscutting source code concerns.",
                    "Expanding identifiers to normalize source code vocabulary.",
                    "Using tactic traceability information models to reduce the risk of architectural degradation during system maintenance.",
                    "On integrating orthogonal information retrieval methods to improve traceability recovery.",
                    "Structural conformance checking with design tests: An evaluation of usability and calability.",
                    "MoMS: Multi-objective miniaturization of software.",
                    "A method engineering based legacy to SOA migration method.",
                    "Identifying overly strong conditions in refactoring implementations.",
                    "Graph-based detection of library API imitations.",
                    "Crossing the boundaries while analyzing heterogeneous component-based software systems.",
                    "On the maintenance of UI-integrated mashup applications.",
                    "An exploratory study of feature location process: Distinct phases, recurring patterns, and elementary actions.",
                    "Exploiting text mining techniques in the analysis of execution traces.",
                    "An evaluation of the strategies of sorting, filtering, and grouping API methods for Code Completion.",
                    "A probabilistic software quality model.",
                    "Predicting post-release defects using pre-release field testing results.",
                    "Sahara: Guiding the debugging of failed software upgrades.",
                    "Late propagation in software clones.",
                    "File cloning in open source Java projects: The good, the bad, and the ugly.",
                    "An automatic framework for extracting and classifying near-miss clone genealogies.",
                    "Using source code metrics to predict change-prone Java interfaces.",
                    "You can't control the unfamiliar: A study on the relations between aggregation techniques for software metrics.",
                    "Understanding a developer social network and its evolution.",
                    "Classifying field crash reports for fixing bugs: A case study of Mozilla Firefox.",
                    "Categorizing software applications for maintenance.",
                    "Evaluating software clustering using multiple simulated authoritative decompositions.",
                    "Industrial experiences with automated regression testing of a legacy database application.",
                    "Regression testing in Software as a Service: An industrial case study.",
                    "A clustering approach to improving test case prioritization: An industrial case study.",
                    "Code Hot Spot: A tool for extraction and analysis of code change history.",
                    "An integration resolution algorithm for mining multiple branches in version control systems.",
                    "Relating developers' concepts and artefact vocabulary in a financial software module.",
                    "Incremental and iterative reengineering towards Software Product Line: An industrial case study.",
                    "The evolution of Information Systems a case study on document management.",
                    "Testing & quality assurance in data migration projects.",
                    "Precise detection of un-initialized variables in large, real-life COBOL programs in presence of unrealizable paths.",
                    "Type-preserving heap profiler for C++.",
                    "Analyzing the effects of formal methods on the development of industrial control software.",
                    "Source code comprehension strategies and metrics to predict comprehension effort in software maintenance and evolution tasks - an empirical study with industry practitioners.",
                    "Estimating software maintenance effort from use cases: An industrial case study.",
                    "Toward a metrics suite for source code lexicons.",
                    "A comparison of stemmers on source code identifiers for software search.",
                    "Clustering and lexical information support for the recovery of design pattern in source code.",
                    "Code convention adherence in evolving software.",
                    "SE2 model to support software evolution.",
                    "Measuring maintainability of spreadsheets in the wild.",
                    "Using stereotypes to help characterize commits.",
                    "Source code survival with the Kaplan Meier.",
                    "Tracking technical debt - An exploratory case study.",
                    "Measuring disruption from software evolution activities using graph-based metrics.",
                    "Clustering and recommending collections of code relevant to tasks.",
                    "Dependency profiles for software architecture evaluations.",
                    "Empirical assessment of UML class diagram layouts based on architectural importance.",
                    "Emergent laws of method and class stereotypes in object oriented software.",
                    "A logic meta-programming foundation for example-driven pattern detection in object-oriented programs.",
                    "Evidence-based software process recovery: A post-doctoral view.",
                    "Sociotechnical coordination and collaboration in open source software.",
                    "A tool for combination-based prioritization and reduction of user-session-based test suites.",
                    "MARBLE. A business process archeology tool.",
                    "Program querying with a SOUL: The BARISTA tool suite.",
                    "Webdiff: A generic differencing service for software artifacts.",
                    "EQ: Checking the implementation of equality in Java.",
                    "Maleku: An evolutionary visual software analysis tool for providing insights into software evolution.",
                    "Effective mining of software repositories.",
                    "Practical combinatorial (t-way) methods for detecting complex faults in regression testing.",
                    "Research methods in computer science."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2011",
                "sub_name": "11th IEEE Working Conference on Source Code Analysis and Manipulation, SCAM 2011, Williamsburg, VA, USA, September 25-26, 2011.",
                "count": 21,
                "papers": [
                    "Counting Bugs is Harder Than You Think.",
                    "Knitting Music and Programming: Reflections on the Frontiers of Source Code Analysis.",
                    "Program Analysis Too Loopy? Set the Loops Aside.",
                    "Computation of Alias Sets from Shape Graphs for Comparison of Shape Analysis Precision.",
                    "Assumption Hierarchy for a CHA Call Graph Construction Algorithm.",
                    "Tuning Static Data Race Analysis for Automotive Control Software.",
                    "Exploring the Development of Micro-apps: A Case Study on the BlackBerry and Android Platforms.",
                    "Are the Clients of Flawed Classes (Also) Defect Prone?",
                    "Equational Reasoning on x86 Assembly Code.",
                    "Security Testing of Web Applications: A Search-Based Approach for Cross-Site Scripting Vulnerabilities.",
                    "A Study of Cloning in the Linux SCSI Drivers.",
                    "A Constraint Programming Approach to Conflict-Aware Optimal Scheduling of Prioritized Code Clone Refactoring.",
                    "Analyzing the Effect of Preprocessor Annotations on Code Clones.",
                    "The Effect of Lexicon Bad Smells on Concept Location in Source Code.",
                    "Recovering a Balanced Overview of Topics in a Software Domain.",
                    "A Comparative Study of Code Query Technologies.",
                    "I2SD: Reverse Engineering Sequence Diagrams from Enterprise Java Beans with Interceptors.",
                    "CheckPointer - A C Memory Access Validator.",
                    "Lightweight Transformation and Fact Extraction with the srcML Toolkit.",
                    "Automatic Parallelization of Side-Effecting Higher-Order Scheme Programs.",
                    "What You See is What You Asked for: An Effort-Based Transformation of Code Analysis Tasks into Interactive Visualization Scenarios."
                ]
            }
        ]
    },
    {
        "year": "2010",
        "name": "26th ICSM 2010",
        "info": "Timisoara, Romania",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2010",
                "sub_name": "26th IEEE International Conference on Software Maintenance (ICSM 2010), September 12-18, 2010, Timisoara, Romania.",
                "count": 85,
                "papers": [
                    "Foreword.",
                    "Certifying software robustness using program slicing.",
                    "Program analysis and transformation for data-intensive system evolution.",
                    "Reverse engineering object-oriented distributed systems.",
                    "Software asset management.",
                    "Conversion of fast inter-procedural static analysis to model checking.",
                    "Empirical software evolvability - code smells and human evaluations.",
                    "Improved size and effort estimation models for software maintenance.",
                    "History-sensitive recovery of product line features.",
                    "Coherent Software Cities.",
                    "Using ontology fragments in concept location.",
                    "Physical and conceptual identifier dispersion: Measures and relation to fault proneness.",
                    "Extracting reusable services from legacy object-oriented systems.",
                    "Playing with refactoring: Identifying extract class opportunities through game theory.",
                    "Model-driven detection of Design Patterns.",
                    "A Tree Kernel based approach for clone detection.",
                    "Understanding where requirements are implemented.",
                    "2D and 3D visualizations in WikiDev2.0.",
                    "Combining micro-blogging and IDE interactions to support developers in their quests.",
                    "On the implementation and correctness of information system upgrades.",
                    "Analyzing natural-language artifacts of the software process.",
                    "iFL: An interactive environment for understanding feature implementations.",
                    "Using clone detection to identify bugs in concurrent software.",
                    "SE-CodeSearch: A scalable Semantic Web-based source code search infrastructure.",
                    "Automatically repairing test cases for evolving method declarations.",
                    "A longitudinal analysis of the dependency concentration in smaller modules for open-source software products.",
                    "Automatic verification of loop invariants.",
                    "Pairwise test set calculation using k-partite graphs.",
                    "Log filtering and interpretation for root cause analysis.",
                    "Assessment of product maintainability for two space domain simulators.",
                    "Enabling multi-tenancy: An industrial experience report.",
                    "Extreme maintenance: Transforming Delphi into C#.",
                    "Modernizing legacy software using a System Grokking technology.",
                    "An approach to improving software inspections performance.",
                    "Verifying the design of an outsourced COBOL system with IntensiVE.",
                    "Cost drivers of software corrective maintenance: An empirical study in two companies.",
                    "Migrating from COBOL to Java.",
                    "Adapting COTS products.",
                    "Fuzzy set approach for automatic tagging in evolving software.",
                    "Deriving metric thresholds from benchmark data.",
                    "Domain-based change propagation analysis: An enterprise system case study.",
                    "Fine-grained incremental learning and multi-feature tossing graphs to improve bug triaging.",
                    "Using multivariate time series and association rules to detect logical change coupling: An empirical study.",
                    "Static analysis for enforcing intra-thread consistent locks in the migration of a legacy system.",
                    "WEBDIFF: Automated identification of cross-browser issues in web applications.",
                    "A lightweight transformational approach to support large scale adaptive changes.",
                    "Supporting change propagation in UML models.",
                    "Automatic identification of class stereotypes.",
                    "Exploring the impact of context sensitivity on blended analysis.",
                    "A human study of fault localization accuracy.",
                    "Effect of test completeness and redundancy measurement on post release failures - An industrial experience report.",
                    "Using Relational Topic Models to capture coupling among classes in object-oriented software systems.",
                    "A case study in matching service descriptions to implementations in an existing system.",
                    "Software process recovery using Recovered Unified Process Views.",
                    "Index-based code clone detection: incremental, distributed, scalable.",
                    "Revisiting common bug prediction findings using effort-aware models.",
                    "Automatic test case selection and generation for regression testing of composite service based on extensible BPEL flow graph.",
                    "Comprehensive evaluation of association measures for fault localization.",
                    "Software modularization operators.",
                    "Unit tests as API usage examples.",
                    "Studying the impact of dependency network measures on software quality.",
                    "Are all code smells harmful? A study of God Classes and Brain Classes in the evolution of three open source systems.",
                    "Guided test generation for coverage criteria.",
                    "Recovery and analysis of transaction scope from scattered information in Java Enterprise Applications.",
                    "A framework for the evaluation of specification miners based on finite state machines.",
                    "Template-based reconstruction of complex refactorings.",
                    "Recovering traceability links between unit tests and classes under test: An improved method.",
                    "Understanding parallelism-inhibiting dependences in sequential Java programs.",
                    "Theil index for aggregation of software metrics values.",
                    "An eye tracking study on the effects of layout in understanding the role of design patterns.",
                    "Swing to SWT and back: Patterns for API migration by wrapping.",
                    "Hidden dependencies in software systems.",
                    "Sampling program quality.",
                    "Test generation via Dynamic Symbolic Execution for mutation testing.",
                    "A cross-browser web application testing tool.",
                    "An Eclipse plug-in for the detection of design pattern instances through static and dynamic analysis.",
                    "SQUANER: A framework for monitoring the quality of software systems.",
                    "An algorithmic debugger for Java.",
                    "MAGISTER: Quality assurance of Magic applications for software developers and end users.",
                    "MooseJEE: A moose extension to enable the assessment of JEAs.",
                    "TopicXP: Exploring topics in source code using Latent Dirichlet Allocation.",
                    "Automatic checking of license compliance.",
                    "A practical tutorial on refactoring for parallelism.",
                    "Teaching undergraduate software engineering.",
                    "Migrating software testing to the cloud."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2010",
                "sub_name": "Tenth IEEE International Working Conference on Source Code Analysis and Manipulation, SCAM 2010, Timisoara, Romania, 12-13 September 2010.",
                "count": 21,
                "papers": [
                    "Learning from 6, 000 Projects: Mining Models in the Large.",
                    "Why Source Code Analysis and Manipulation Will Always be Important.",
                    "Subclass Instantiation Distribution.",
                    "New Conceptual Coupling and Cohesion Metrics for Object-Oriented Systems.",
                    "Deriving Coupling Metrics from Call Graphs.",
                    "Validating the Use of Topic Models for Software Evolution.",
                    "Estimating the Optimal Number of Latent Concepts in Source Code Analysis.",
                    "Language-Independent Clone Detection Applied to Plagiarism Detection.",
                    "Evaluating Code Clone Genealogies at Release Level: An Empirical Study.",
                    "The Fika Parser Generator.",
                    "AMBIDEXTER: Practical Ambiguity Detection.",
                    "Speeding Up Context-, Object- and Field-Sensitive SDG Generation.",
                    "How Good is Static Analysis at Finding Concurrency Bugs?",
                    "Parallel Reachability and Escape Analyses.",
                    "Effective Static Analysis to Find Concurrency Bugs in Java.",
                    "Encapsulating Software Platform Logic by Aspect-Oriented Programming: A Case Study in Using Aspects for Language Portability.",
                    "Refactoring Support for Modularity Maintenance in Erlang.",
                    "Visualization of C++ Template Metaprograms.",
                    "Reconstruction of Composite Types for Decompilation.",
                    "Recovering the Memory Behavior of Executable Programs.",
                    "MemSafe: Ensuring the Spatial and Temporal Memory Safety of C at Runtime."
                ]
            }
        ]
    },
    {
        "year": "2009",
        "name": "25th ICSM 2009",
        "info": "Edmonton, AB, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2009",
                "sub_name": "25th IEEE International Conference on Software Maintenance (ICSM 2009), September 20-26, 2009, Edmonton, Alberta, Canada.",
                "count": 89,
                "papers": [
                    "25 years of software maintenance.",
                    "Reduce, reuse, recycle, recover: Techniques for improved regression testing.",
                    "Architecture of product lines.",
                    "Experimental assessment of manual versus tool-based maintenance of GUI-directed test scripts.",
                    "Prioritizing JUnit test cases in absence of coverage information.",
                    "Prioritizing component compatibility tests via user preferences.",
                    "Linux kernels as complex networks: A novel method to study evolution.",
                    "Towards a better understanding of software evolution: An empirical study on open source software.",
                    "A survey-based study of the mapping of system properties to ISO/IEC 9126 maintainability characteristics.",
                    "Criteria for the evaluation of implemented architectures.",
                    "Playing roles in design patterns: An empirical descriptive and analytic study.",
                    "Decomposing object-oriented class modules using an agglomerative clustering technique.",
                    "Detecting virus mutations via dynamic matching.",
                    "Regression model checking.",
                    "Automated performance analysis of load tests.",
                    "Inquiring the usage of aspect-oriented programming: An empirical study.",
                    "Studying the use of developer IRC meetings in open source projects.",
                    "Searching and skimming: An exploratory study.",
                    "Managing code clones using dynamic change tracking and resolution.",
                    "Comparative analysis of evolving software systems using the Gini coefficient.",
                    "Assessing the impact of framework changes using component ranking.",
                    "Object aware execution trace exploration.",
                    "A combinatorial approach to building navigation graphs for dynamic web applications.",
                    "Effective and efficient localization of multiple faults using value replacement.",
                    "Modeling class cohesion as mixtures of latent topics.",
                    "Introducing a test suite similarity metric for event sequence-based test cases.",
                    "Augmenting static source views in IDEs with dynamic metrics.",
                    "Analysis of pervasive multiple-component defects in a large software system.",
                    "An investigation of the relationships between lines of code and defects.",
                    "A theoretical and empirical study of EFSM dependence.",
                    "Refining clustering evaluation using structure indicators.",
                    "Incremental call graph reanalysis for AspectJ software.",
                    "Coordination and productivity issues in free software: The role of brooks' law.",
                    "Measuring the progress of projects using the time dependence of code changes.",
                    "What's hot and what's not: Windowed developer topic analysis.",
                    "On the use of relevance feedback in IR-based concept location.",
                    "Feature location in COBOL mainframe systems: An experience report.",
                    "The role of the coverage analysis during IR-based traceability recovery: A controlled experiment.",
                    "Senseo: Enriching Eclipse's static source views with dynamic metrics.",
                    "Semantics-based code search demonstration proposal.",
                    "MAJOR: Flexible tool development with aspect-oriented programming.",
                    "Visualizing the Java heap demonstration proposal.",
                    "Proactively managing copy-and-paste induced code clones.",
                    "BCC: Enhancing code completion for better API usability.",
                    "Guide: A GUI differentiator.",
                    "Business process recovery for system maintenance - An empirical approach.",
                    "Preprocessing the noise in legacy user permission assignment data for role mining - An industrial practice.",
                    "Digging deep: Software reengineering supported by database reverse engineering of a system with 30+ years of legacy.",
                    "What motivate software engineers to refactor source code? evidences from professional developers.",
                    "Software maintainability benefits from annotation-driven code.",
                    "Towards a distributed execution framework for JUnit test cases.",
                    "Visualizing the structure of field testing problems.",
                    "Using dynamic execution data to generate test cases.",
                    "A statistical examination of the evolution and properties of libre software.",
                    "Changes and bugs - Mining and predicting development activities.",
                    "Detection and analysis of near-miss software clones.",
                    "Using information retrieval to support software maintenance tasks.",
                    "Identifying high-level dependence structures using slice-based dependence analysis.",
                    "Co-evolution of source code and the build system.",
                    "Predicting change impact from logical models.",
                    "Software change classification using hunk metrics.",
                    "Evolution analysis with animated and 3D-visualizations.",
                    "Analyzing the evolution of user-visible features: A case study with Eclipse.",
                    "Maintenance, or the 3rd dimension of eXtreme model-driven design.",
                    "Maintenance and agile development: Challenges, opportunities and future directions.",
                    "Scalable and incremental clone detection for evolving software.",
                    "Balancing value and modifiability when planning for the next release.",
                    "Software maintenance in complying with IT governance: A report from the field.",
                    "Performance impact analysis with KPP using application response measurement in E-government systems.",
                    "Modularizing error recovery.",
                    "Model-driven testing in software product lines.",
                    "A model-based regression test selection technique.",
                    "Data transformation and attribute subset selection: Do they help make differences in software failure prediction?",
                    "On predicting the time taken to correct bug reports in open source projects.",
                    "Interactive views for analyzing problem reports.",
                    "The squale model - A practice-based industrial quality model.",
                    "Expert recommendation with usage expertise.",
                    "An empirical study on the risks of using off-the-shelf techniques for processing mailing list data.",
                    "Recovering design rationale from email repositories.",
                    "Beyond generated software documentation - A web 2.0 perspective.",
                    "Recovering traceability links between a simple natural language sentence and source code using domain ontologies.",
                    "The end-to-end use of source code examples: An exploratory study.",
                    "Abstracting the template instantiation relation in C++.",
                    "UI traces: Supporting the maintenance of interactive software.",
                    "Using method stereotype distribution as a signature descriptor for software systems.",
                    "Experimenting a reverse engineering technique for modelling the behaviour of rich internet applications.",
                    "Understanding source package organization using the hybrid model.",
                    "MESOA 2009: 3rd International workshop on maintenance and evolution of service-oriented systems.",
                    "First international workshop on service-oriented architecture testing (SOAT 2009)."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2009",
                "sub_name": "Ninth IEEE International Working Conference on Source Code Analysis and Manipulation, SCAM 2009, Edmonton, Alberta, Canada, September 20-21, 2009.",
                "count": 20,
                "papers": [
                    "thr2csp: Toward Transforming Threads into Communicating Sequential Processes.",
                    "Chopping Concurrent Programs.",
                    "Properties of Slicing Definitions.",
                    "Improving Side-Effect Analysis with Lazy Access Path Resolving.",
                    "Towards Comparing and Combining Points-to Analyses.",
                    "Static Estimation of Test Coverage.",
                    "An Assessment of Type-3 Clones as Detected by State-of-the-Art Tools.",
                    "Evolution of Type-1 Clones.",
                    "Identifying 'Linchpin Vertices' That Cause Large Dependence Clusters.",
                    "Lightweight Techniques for Tracking Unique Program Statements.",
                    "Maintaining Fine-Grained Code Metadata Regardless of Moving, Copying and Merging.",
                    "Backporting Java 5 Code.",
                    "A Value Analysis for C Programs.",
                    "The FermaT Maintenance Environment Tool Demonstration.",
                    "An Evaluation of Current Java Bytecode Decompilers.",
                    "Engineering Abstractions in Model Checking and Testing.",
                    "Concepts as Syntactic Sugar.",
                    "A Metric Extraction Framework Based on a High-Level Description Language.",
                    "RASCAL: A Domain Specific Language for Source Code Analysis and Manipulation.",
                    "Recovering Grammar Relationships for the Java Language Specification."
                ]
            }
        ]
    },
    {
        "year": "2008",
        "name": "24th ICSM 2008",
        "info": "Beijing, China",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2008",
                "sub_name": "24th IEEE International Conference on Software Maintenance (ICSM 2008), September 28 - October 4, 2008, Beijing, China.",
                "count": 68,
                "papers": [
                    "Offering software maintenance as an offshore service.",
                    "Refinement and test case generation in Unifying Theory of Programming.",
                    "On evaluating the efficiency of software feature development using algebraic manifolds.",
                    "A constraint-driven human resource scheduling method in software development and maintenance process.",
                    "Using structural and semantic metrics to improve class cohesion.",
                    "Investigating the effects of frameworkdesign knowledge in example-based framework learning.",
                    "Impact of programming and application-specific knowledge on maintenance effort: A hazard rate model.",
                    "Automatically identifying C++0x concepts in function templates.",
                    "Non-invasive and non-scattered annotations for more robust pointcuts.",
                    "Improving maintenance in AOP through an interaction specification framework.",
                    "Change impact analysis for AspectJ programs.",
                    "Dynamic slicing of multithreaded programs for race detection.",
                    "An assessmentmethodology for trace reduction techniques.",
                    "Retrieving relevant reports from a customer engagement repository.",
                    "Assessing the usefulness of type inference algorithms in representing Java control flow to support software maintenance tasks.",
                    "Static Execute After/Before as a replacement of traditional software dependencies.",
                    "Reuse or rewrite: Combining textual, static, and dynamic analyses to assess the cost of keeping a system up-to-date.",
                    "Who can help me with this source code change?",
                    "Understanding the rationale for updating a function's comment.",
                    "Supporting software evolution using adaptive change propagation heuristics.",
                    "Standard-based data and service interoperability in eHealth systems.",
                    "Characterizing maintainability concerns in autonomic element design.",
                    "Supporting requirements reuse in multi-agent system product line design and evolution.",
                    "An empirical study of the relationships between design pattern roles and class change proneness.",
                    "Assessing the effect of clones on changeability.",
                    "An approach and an eclipse based environment for data migration.",
                    "Application of system models in regression test suite prioritization.",
                    "Quota-constrained test-case prioritization for regression testing of service-centric systems.",
                    "Using random test selection to gain confidence in modified software.",
                    "Assessing the value of coding standards: An empirical study.",
                    "Constructive architecture compliance checking - an experiment on support by live feedback.",
                    "Traceability for the maintenance of secure software.",
                    "Automatic identification of load testing problems.",
                    "Guidelines on the use of Fit tables in software maintenance tasks: Lessons learned from 8 experiments.",
                    "Testing-based assessment process for upgrading component systems.",
                    "Duplicate bug reports considered harmful ... really?",
                    "Automated severity assessment of software defect reports.",
                    "Identifying the root causes of memory bugs using corrupted memory location suppression.",
                    "Software visualization with audio supported cognitive glyphs.",
                    "Query-based filtering and graphical view generation for clone analysis.",
                    "The evolution of Eclipse.",
                    "Design principles in architectural evolution: A case study.",
                    "MESOA 2008: 2nd international workshop on a research agenda for maintenance and evolution of service-oriented systems.",
                    "2nd International Workshop on Advanced Software Development Tools and Techniques (WASDeTT): Tools for software maintenance, visualization, and reverse engineering.",
                    "1st workshop on maintenance and evolution of FLOSS (MEFLOSS).",
                    "Supporting software evolution analysis with historical dependencies and defect information.",
                    "Building reverse engineering tools with software components: Towards a dedicated development process for academia.",
                    "Mining specifications in diversified formats from execution traces.",
                    "A methodology to assess the impact of source code flaws in changeability, and its application to clones.",
                    "Towards reverse engineering software ecosystems.",
                    "COSS: Comprehension by ontologising software system.",
                    "Goal trees and fault trees for root cause analysis.",
                    "Positioning embedded software maintenance within industrial maintenance.",
                    "Maintaining software product lines - an industrial practice.",
                    "Experiences in modularizing business rules into aspects.",
                    "An empirical analysis on distribution patterns of software maintenance effort.",
                    "Task articulation in software maintenance: Integrating source code annotations with an issue tracking system.",
                    "COMOVER: Concurrent model versioning.",
                    "Variation analysis of context-sharing identifiers with code clones.",
                    "A domain-customizable SVG-based graph editor for software visualizations.",
                    "REST: A tool for reducing effort in script-based testing.",
                    "AutoFlow: An automatic debugging tool for AspectJ software.",
                    "An integrated solution for software process improvement.",
                    "Lightweight support for the evolution of software design and development artifacts.",
                    "Software tag for traceability and transparency of maintenance.",
                    "Research on software evolution processes in Asia.",
                    "Retrospect of Taiwan's software industry and issues of software maintenance and evolution.",
                    "Maintenance support for aspect-oriented programs: opportinuties and challenges."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2008",
                "sub_name": "Eighth IEEE International Working Conference on Source Code Analysis and Manipulation (SCAM 2008), 28-29 September 2008, Beijing, China.",
                "count": 29,
                "papers": [
                    "90% Perspiration: Engineering Static Analysis Techniques for Industrial Applications.",
                    "Some Assembly Required - Program Analysis of Embedded System Code.",
                    "User-Input Dependence Analysis via Graph Reachability.",
                    "TBCppA: A Tracer Approach for Automatic Accurate Analysis of C Preprocessor's Behaviors.",
                    "An Empirical Study of Function Overloading in C++.",
                    "Is Cloned Code More Stable than Non-cloned Code?",
                    "Exploiting the Correspondence between Micro Patterns and Class Names.",
                    "On the Use of Data Flow Analysis in Static Profiling.",
                    "The Semantics of Abstract Program Slicing.",
                    "The Evolution and Decay of Statically Detected Source Code Vulnerabilities.",
                    "From Indentation Shapes to Code Structures.",
                    "Evaluating Key Statements Analysis.",
                    "Fast and Precise Points-to Analysis.",
                    "Aspect-Aware Points-to Analysis.",
                    "Automatic Determination of May/Must Set Usage in Data-Flow Analysis.",
                    "Automated Detection of Code Vulnerabilities Based on Program Analysis and Model Checking.",
                    "Analysis and Transformations for Efficient Query-Based Debugging.",
                    "Change Impact Graphs: Determining the Impact of Prior Code Changes.",
                    "Using Program Transformations to Add Structure to a Legacy Data Model.",
                    "Type Highlighting: A Client-Driven Visual Approach for Class Hierarchies Reengineering.",
                    "Automated Migration of List Based JSP Web Pages to AJAX.",
                    "Beyond Annotations: A Proposal for Extensible Java (XJ).",
                    "Modular Decompilation of Low-Level Code by Partial Evaluation.",
                    "Constructing Subtle Faults Using Higher Order Mutation Testing.",
                    "Rejuvenate Pointcut: A Tool for Pointcut Expression Recovery in Evolving Aspect-Oriented Software.",
                    "Parfait - A Scalable Bug Checker for C Code.",
                    "CoordInspector: A Tool for Extracting Coordination Data from Legacy Code.",
                    "Precise Analysis of Java Programs Using JOANA.",
                    "DTS - A Software Defects Testing System."
                ]
            }
        ]
    },
    {
        "year": "2007",
        "name": "23rd ICSM 2007",
        "info": "Paris, France",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2007",
                "sub_name": "23rd IEEE International Conference on Software Maintenance (ICSM 2007), October 2-5, 2007, Paris, France.",
                "count": 74,
                "papers": [
                    "Houston: We are in Overload.",
                    "Agree or Change! Making Services Evolve.",
                    "The Inevitable Stability of Software Change.",
                    "Mining the Lexicon Used by Programmers during Sofware Evolution.",
                    "Clone Smells in Software Evolution.",
                    "Finding Unusual Code.",
                    "Evidence-Based Analysis and Inferring Preconditions for Bug Detection.",
                    "Feature Location and Extraction using Landmarks and Barriers.",
                    "JTourBus: Simplifying Program Understanding by Documentation that Provides Tours Through the Source Code.",
                    "Evaluation of Semantic Interference Detection in Parallel Changes: an Exploratory Experiment.",
                    "Matching Control Flow of Program Versions.",
                    "Package Surface Blueprints: Visually Supporting the Understanding of Package Relationships.",
                    "Tracing Model Elements.",
                    "Design recovery and maintenance of build systems.",
                    "Multi-Objective Genetic Algorithm to Support Class Responsibility Assignment.",
                    "Extracting Error Handling to Aspects: A Cookbook.",
                    "A Maintainable Software Architecture for Fast and Modular Bioinformatics Sequence Search.",
                    "Reducing Regression Test Size by Exclusion.",
                    "Re-computing Coverage Information to Assist Regression Testing.",
                    "Applying Interface-Contract Mutation in Regression Testing of Component-Based Software.",
                    "An Activity-Based Quality Model for Maintainability.",
                    "A model to predict anti-regressive effort in Open Source Software.",
                    "Assessing Software System Maintainability using Structural Measures and Expert Assessments.",
                    "Polylingual Dependency Analysis Using Island Grammars: A Cost Versus Accuracy Evaluation.",
                    "Automated Refactoring of Legacy Java Software to Enumerated Types.",
                    "SCARPE: A Technique and Tool for Selective Capture and Replay of Program Executions.",
                    "Empirical Evidence for SOC Dynamics in Software Evolution.",
                    "Combinatorial Interaction Regression Testing: A Study of Test Case Generation and Prioritization.",
                    "How Programmers Can Turn Comments into Waypoints for Code Navigation.",
                    "How We Manage Portability and Configuration with the C Preprocessor.",
                    "Release Pattern Discovery: A Case Study of Database Systems.",
                    "Computation of Static Execute After Relation with Applications to Software Maintenance.",
                    "Debugging Integrated Systems: An Ethnographic Study of Debugging Practice.",
                    "The Effect of Communication Overhead on Software Maintenance Project Staffing: a Search-Based Approach.",
                    "The Social Context of Software Maintenance.",
                    "Fault Detection Probability Analysis for Coverage-Based Test Suite Reduction.",
                    "Automatic Test Generation From GUI Applications For Testing Web Services.",
                    "Maintaining Multi-Tier Web Applications.",
                    "Assessing Legacy System Migration Technologies through Controlled Experiments.",
                    "System-level Usage Dependency Analysis of Object-Oriented Systems.",
                    "Web Pages Classification using Concept Analysis.",
                    "The Economics of Open Source Software: An Empirical Analysis of Maintenance Costs.",
                    "On the prediction of the evolution of libre software projects.",
                    "Discovering Dynamic Developer Relationships from Software Version Histories by Time Series Segmentation.",
                    "JAT: A Test Automation Framework for Multi-Agent Systems.",
                    "An Interprocedural Aspect Control Flow Graph to Support the Maintenance of Aspect Oriented Systems.",
                    "ONTRAC: A system for efficient ONline TRACing for debugging.",
                    "Indexing Noncrashing Failures: A Dynamic Program Slicing-Based Approach.",
                    "Simplifying maintenance by using XSLT to unlock UML models in a distributed development environment.",
                    "ATTEST: A Testing Toolkit for Validating Software Properties.",
                    "An Industrial Experience Report on Legacy Data-Intensive System Migration.",
                    "Experience Report: Reengineering Standalone System into the Service-Partition Distributed Environment.",
                    "A Research Agenda for Maintenance & Evolution of SOA-Based Systems.",
                    "Software Artefact Traceability: the Never-Ending Challenge.",
                    "MythSE Myths in Software Engineering Half day ICSM 2007Working Session.",
                    "Empirical Studies in Software Maintenance and Evolution.",
                    "Working Session on Reverse Engineering techniques for Application Portfolio Management - RE4APM 2007 -.",
                    "Migrating Object Oriented code to Aspect Oriented Programming.",
                    "Analysis and Transformation of Idiomatic Crosscutting Concerns in Legacy Software Systems.",
                    "Poor Performing Patterns of Code: Analysis and Detection.",
                    "Improving Predictive Models of Software Quality Using an Evolutionary Computational Approach.",
                    "Refactoring via Program Slicing and Sliding.",
                    "Fine-Grained Management of Software Artefacts.",
                    "Runtime Adaptation of Long-Running Applications for Improved Caching.",
                    "Analysing the Impact of Change on Test Sets Using X-Machines.",
                    "Concept Location and Program Comprehension in Service-Oriented Software.",
                    "An Ontological Process Model for Software Maintenance and Comprehension.",
                    "MAKAO.",
                    "JDeodorant: Identification and Removal of Feature Envy Bad Smells.",
                    "Integrating proprietary and open-source tool chains through horizontal interchange of XMI models.",
                    "NOREX: A Distributed Reengineering Environment.",
                    "Smart Formatter: Learning Coding Style from Existing Source Code.",
                    "Pheme: A Communication Infrastructure for Product Software Knowledge.",
                    "Ptidej: A Flexible Reverse Engineering Tool Suite."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2007",
                "sub_name": "Seventh IEEE International Workshop on Source Code Analysis and Manipulation (SCAM 2007), September 30 - October 1, 2007, Paris, France.",
                "count": 23,
                "papers": [
                    "Keynote Address: .QL for Source Code Analysis.",
                    "An Evaluation of Slicing Algorithms for Concurrent Programs.",
                    "Barrier Slicing for Remote Software Trusting.",
                    "Statement-Level Cohesion Metrics and their Visualization.",
                    "On Temporal Path Conditions in Dependence Graphs.",
                    "Towards Path-Sensitive Points-to Analysis.",
                    "Extending Attribute Grammars with Collection Attributes--Evaluation and Applications.",
                    "Toward an Implementation of the \"Form Template Method\" Refactoring.",
                    "Reengineering Standard Java Runtime Systems through Dynamic Bytecode Instrumentation.",
                    "An Integrated Crosscutting Concern Migration Strategy and its Application to JHOTDRAW.",
                    "Fast Approximate Matching of Programs for Protecting Libre/Open Source Software by Using Spatial Indexes.",
                    "SUDS: An Infrastructure for Creating Bug Detection Tools.",
                    "Finding Inputs that Reach a Target Expression.",
                    "Improved Static Resolution of Dynamic Class Loading in Java.",
                    "SQuAVisiT: A Software Quality Assessment and Visualisation Toolset.",
                    "DATES: Design Analysis Tool for Enterprise Systems.",
                    "Source Code Composition with the Reuseware Composition Framework.",
                    "Quality Assessment for Embedded SQL.",
                    "An Empirical Study of the Relationship of Stability Metrics and the QMOOD Quality Models Over Software Developed Using Highly Iterative or Agile Software Processes.",
                    "Relating the Evolution of Design Patterns and Crosscutting Concerns.",
                    "The Programmer's Lexicon, Volume I: The Verbs.",
                    "A Framework for Studying Clones In Large Software Systems.",
                    "Extracting Meaning from Abbreviated Identifiers."
                ]
            }
        ]
    },
    {
        "year": "2006",
        "name": "22nd ICSM 2006",
        "info": "Philadelphia, Pennsylvania, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2006",
                "sub_name": "22nd IEEE International Conference on Software Maintenance (ICSM 2006), 24-27 September 2006, Philadelphia, Pennsylvania, USA.",
                "count": 70,
                "papers": [
                    "Message from the General Chair.",
                    "Message from the Program Co-Chairs.",
                    "Program Committee.",
                    "Reviewers.",
                    "On the Challenges of Maintaining Large-Scale Software Systems at Lockheed Martin.",
                    "Properties of Signature Change Patterns.",
                    "Managing Concern Interfaces.",
                    "Reverse Engineering Method Stereotypes.",
                    "Change Impact Analysis for Generic Libraries.",
                    "ESDM - A Method for Developing Evolutionary Scenarios for Analysing the Impact of Historical Changes on Architectural Elements.",
                    "Integrating Influence Mechanisms into Impact Analysis for Increased Precision.",
                    "Software Feature Understanding in an Industrial Setting.",
                    "C Macro Handling in Automated Source Code Transformation Systems.",
                    "Software Assurance During Maintenance.",
                    "An alternative to Quiescence: Tranquility.",
                    "Dynamic Updating of Software Systems Based on Aspects.",
                    "Online Software Maintenance for Mission-Critical Systems.",
                    "Selective Regression Testing of a Host to DotNet Migration.",
                    "An Approach to Test Data Generation for Killing Multiple Mutants.",
                    "Using the Case-Based Ranking Methodology for Test Case Prioritization.",
                    "Sustain, Enhance, or Replace: Making Decisions on Systems.",
                    "Teaching Evolution of Open-Source Projects in Software Engineering Courses.",
                    "Model-Based Testing of Community-Driven Open-Source GUI Applications.",
                    "A Feedback Based Quality Assessment to Support Open Source Software Evolution: the GRASS Case Study.",
                    "Definition and Validation of the Key process of Release, Delivery and Deployment for Product Software Vendors: turning the ugly duckling into a swan.",
                    "Search Based Approaches to Component Selection and Prioritization for the Next Release Problem.",
                    "Establishing Maintainability in Systems Integration: Ambiguity, Negotiations, and Infrastructure.",
                    "Working Session: Information Retrieval Based Approaches in Software Evolution.",
                    "Unconventional Views on Conventional Wisdom about Software Engineering Research.",
                    "Distribution Map.",
                    "On the Use of Line Co-change for Identifying Crosscutting Concern Code.",
                    "Quantifying the Effects of Aspect-Oriented Programming: A Maintenance Study.",
                    "Guiding the Application of Design Patterns Based on UML Models.",
                    "Supporting Collaborative Development in an Open MDA Environment.",
                    "Regression Testing UML Designs.",
                    "Successful Test Automation for Software Maintenance.",
                    "Efficient Delivery of Software Updates Using Advanced Compression Techniques.",
                    "Reducing Customers' Total Cost of OwnershipWithin a Software Supply Network.",
                    "SPEED: Software Project Effort Evaluator based on Dynamic-calibration.",
                    "COCONUT: COde COmprehension Nurturant Using Traceability.",
                    "Open Source Evolution Analysis.",
                    "Event Views and Graph Reductions for Understanding System Level C Code.",
                    "Using Sex Differences to Link Spatial Cognition and Program Comprehension.",
                    "Incremental Approach and User Feedbacks: a Silver Bullet for Traceability Recovery.",
                    "Allowing Overlapping Boundaries in Source Code using a Search Based Approach to Concept Binding.",
                    "Exploiting the Analogy Between Traces and Signal Processing.",
                    "Reengineering Process Based on the Unified Process.",
                    "Source Code Exploration with Google.",
                    "Mining Software Repositories to Assist Developers and Support Managers.",
                    "Using Structural Constraints to Specify and Check Design Intent in Source Code - Ph.D. Dissertation Synopsis.",
                    "Empirical Software Engineering Research on Free/Libre/Open Source Software.",
                    "Object-Oriented Software Configuration Management.",
                    "Improving Effectiveness of Automated Software Testing in the Absence of Specifications.",
                    "A Method to Aid Recovery and Maintenance of the Input Error Correction Features.",
                    "An Approach to Aid the Understanding and Maintenance of Input Validation.",
                    "An Extensible Meta-Model for Program Analysis.",
                    "Characterizing the Relative Significance of a Test Smell.",
                    "A Software Fault Tree Metric.",
                    "Modeling Software VulnerabilitiesWith Vulnerability Cause Graphs.",
                    "Long-term Life Cycle Impact of Agile Methodologies.",
                    "The Free Software Movement and the GNU/Linux Operating System.",
                    "Reengineering User Interfaces of E-Commerce Applications Using Business Processes.",
                    "A Strategy and an Eclipse Based Environment for the Migration of Legacy Systems to Multi-tier Web-based Architectures.",
                    "Source-Level Linkage: Adding Semantic Information to C++ Fact-bases.",
                    "Refactoring Practice: How it is and How it Should be Supported - An Eclipse Case Study.",
                    "The Conceptual Coupling Metrics for Object-Oriented Systems.",
                    "Tracking Concerns in Evolving Source Code: An Empirical Study.",
                    "Towards Portable Metrics-based Models for Software Maintenance Problems.",
                    "A Method for an Accurate Early Prediction of Faults in Modified Classes.",
                    "Comprehension and Maintenance of Large-Scale Multi-Language Software Applications."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2006",
                "sub_name": "Sixth IEEE International Workshop on Source Code Analysis and Manipulation (SCAM 2006), 27-29 September 2006, Philadelphia, Pennsylvania, USA.",
                "count": 25,
                "papers": [
                    "Message from the Chairs.",
                    "Organizing Committee.",
                    "Steering Committee.",
                    "Program Committee.",
                    "Additional Reviewers.",
                    "Stop-List Slicing.",
                    "Graph-Less Dynamic Dependence-Based Dynamic Slicing Algorithms.",
                    "Bug Classification Using Program Slicing Metrics.",
                    "Characterising, Explaining, and Exploiting the Approximate Nature of Static Analysis through Animation.",
                    "Estimating the Run-Time Progress of a Call Graph Construction Algorithm53-62.",
                    "Constructing Accurate Application Call Graphs For Java To Model Library Callbacks.",
                    "Normalizing Metamorphic Malware Using Term Rewriting.",
                    "Data Representation Alternatives in Semantically Augmented Numerical Models.",
                    "SMART C: A Semantic Macro Replacement Translator for C.",
                    "Linking Analysis and Transformation Tools with Source-Based Mappings.",
                    "Evolving TXL.",
                    "Evaluating C++ Design Pattern Miner Tools.",
                    "Syntactic Identifier Conciseness and Consistency.",
                    "Prioritizing Software Inspection Results using Static Profiling.",
                    "Tool Demonstration: Silver Extensible Compiler Frameworks and Modular Language Extensions for Java and C.",
                    "AVal: an Extensible Attribute-Oriented Programming Validator for Java.",
                    "Abstract Interpretation of PIC Programs through Logic Programming.",
                    "Comparative Study of Refactoring Haskell and Erlang Programs.",
                    "Cross-Language Program Analysis and Refactoring.",
                    "Factoring Differences for Iterative Change Management."
                ]
            }
        ]
    },
    {
        "year": "2005",
        "name": "21st ICSM 2005",
        "info": "Budapest, Hungary",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2005",
                "sub_name": "21st IEEE International Conference on Software Maintenance (ICSM 2005), 25-30 September 2005, Budapest, Hungary.",
                "count": 96,
                "papers": [
                    "Message from the General Chair.",
                    "Message from the Program Chairs.",
                    "Steering Committee.",
                    "Conference Committee.",
                    "Program Committee.",
                    "Additional Reviewers.",
                    "Bridging the Gap between Research and Business in Software Maintenance.",
                    "Software Construction by Configuration: Challenges for Software Engineering Research.",
                    "Software Support, Management, and Evolution (SSME) in the Coming Decade and Beyond...Oppotunities and Challenges.",
                    "Refactoring a Java Code Base to AspectJ: An Illustrative Example.",
                    "Automated Refactoring of Object Oriented Code into Aspects.",
                    "Isolating Idiomatic Crosscutting Concerns.",
                    "Defining Maintainable Components in the Design Phase.",
                    "Reducing Build Time through Precompilations for Evolving Large Software.",
                    "Managing Change in COTS-Based Systems.",
                    "Tracing Distributed Systems Executions Using AspectJ.",
                    "Appletizing: Running Legacy Java Code Remotely from a Web Browser.",
                    "Static Analysis of Object References in RMI-Based Java Software.",
                    "Incremental Maintenance of Software Artifacts.",
                    "Comparative Analysis of Porting Strategies in J2ME Games.",
                    "The Conceptual Cohesion of Classes.",
                    "Evaluation of a Framework for Reverse Engineering Tool Construction.",
                    "Scenariographer: A Tool for Reverse Engineering Class Usage Scenarios from Method Invocation Sequences.",
                    "An Integrated Environment for Reengineering.",
                    "Locating Dependence Clusters and Dependence Pollution.",
                    "Annotated Inclusion Constraints for Precise Flow Analysis.",
                    "A Category-theoretic Approach to Syntactic Software Merging.",
                    "A Datawarehouse for Managing Commercial Software Release.",
                    "Using Self-Reconfigurable Workplaces to Automate the Maintenance of Evolving Business Applications.",
                    "Cross-Organizational Service Maintenance Using Temporal Availability Specification and Contracts.",
                    "Search-Based Techniques Applied to Optimization of Project Planning for a Massive Maintenance Project.",
                    "Integrated Development and Maintenance of Software Products to Support Efficient Updating of Customer Configurations: A Case Study in Mass Market ERP Software.",
                    "The Top Ten List: Dynamic Fault Prediction.",
                    "Improving Dynamic Calibration through Statistical Process Control.",
                    "An Industrial Case Study on Reuse Oriented Development.",
                    "Design Pattern Mining Enhanced by Machine Learning.",
                    "Improved Tool Support for the Investigation of Duplication in Software.",
                    "Comprehensive Software Understanding with SEXTANT.",
                    "NavTracks: Supporting Navigation in Software Maintenance.",
                    "Dynamic Feature Traces: Finding Features in Unfamiliar Code.",
                    "Analyzing Feature Traces to Incorporate the Semantics of Change in Software Evolution Analysis.",
                    "Feature Identification: A Novel Approach and a Case Study.",
                    "A Case Study in Refactoring a Legacy Component for Reuse in a Product Line.",
                    "Analyzing Multiple Configurations of a C Program.",
                    "The Role of Refactorings in API Evolution.",
                    "Crisp: A Debugging Tool for Java Programs.",
                    "A Controlled Experiment Assessing Test Case Prioritization Techniques via Mutation Faults.",
                    "A Safe Regression Test Selection Technique for Database-Driven Applications.",
                    "Empirically Studying Software Practitioners - Bridging the Gap between Theory and Practice.",
                    "Maintaining Formal Specifications - Decomposition of Large Z-Specifications.",
                    "A Risk Taxonomy Proposal for Software Maintenance.",
                    "Optimizing Test to Reduce Maintenance.",
                    "Rapid \"Crash Testing\" for Continuously Evolving GUI-Based Software Applications.",
                    "Contract-Based Mutation for Testing Components.",
                    "Strider: Configuration Modelling and Analysis of Complex Systems.",
                    "Toward Documentation of Program Evolution.",
                    "Generative Technique of Version Control Systems for Software Diagrams.",
                    "Comparison of Clustering Algorithms in the Context of Software Evolution.",
                    "Call Stack Coverage for Test Suite Reduction.",
                    "Test Suite Reduction with Selective Redundancy.",
                    "Test Prioritization Using System Models.",
                    "An Empirical Study of Software Maintenance of a Web-Based Java Application.",
                    "Managing the Evolution of Web-Based Applications with WebSCM.",
                    "An Empirical Comparison of Test Suite Reduction Techniques for User-Session-Based Testing of Web Applications.",
                    "Maintainability Prediction: A Regression Analysis of Measures of Evolving Systems.",
                    "Requirements Guided Dynamic Software Clustering.",
                    "Facilitating the Implementation and Evolution of Business Rules.",
                    "Ontology-Based Software Analysis and Reengineering Tool Integration: The OASIS Service-Sharing Methodology.",
                    "Explorative Study to Provide Decision Support for Software Release Decisions.",
                    "Towards Experience-Based Mentoring of Evolutionary Development.",
                    "Refactor Conditionals into Polymorphism: What's the Performance Cost of Introducing Virtual Calls?.",
                    "An Architecture for Context-Sensitive Formatting.",
                    "Context-Free Slicing of UML Class Models.",
                    "Towards Employing Use-Cases and Dynamic Analysis to Comprehend Mozilla.",
                    "Understanding Security Goals Provided by Crypto-Protocol Implementations.",
                    "A Hierarchical Decomposition Method for Object-Oriented Systems Based on Identifying Omnipresent Clusters.",
                    "Using Pointcut Delta Analysis to Support Evolution of Aspect-Oriented Software.",
                    "Impact Analysis of Weaving in Aspect-Oriented Programming.",
                    "A Reference Architecture for Web Browsers.",
                    "A Framework for the Evolution and Maintenance of Web Services.",
                    "A Comparative Evaluation of Maintainability: A Study of Engineering Department's Website Maintainability.",
                    "A Classification of Crosscutting Concerns.",
                    "Towards a Framework for Testing Structural Source-Code Regularities.",
                    "Eliminating Harmful Redundancy for Testing-Based Fault Localization Using Test Suite Reduction: An Experimental Study.",
                    "Instrumenting Contracts with Aspect-Oriented Programming to Increase Observability and Support Debugging.",
                    "Software Reliability Growth Model from Testing to Operation.",
                    "Utilization of Extended Firewall for Object-Oriented Regression Testing.",
                    "Measurement and Quality in Object-Oriented Design.",
                    "Reverse Engineering Web Applications.",
                    "Quality Driven Software Migration of Procedural Code to Object-Oriented Design.",
                    "Continuous Evolution: Practices and Issues.",
                    "Identifications of Concepts, Features, and Concerns in Source Code.",
                    "Developing Supportable Enterprise Information Systems - Architectural, Managerial, and Engineering Imperatives.",
                    "Object-Oriented Reengineering: Patterns and Techniques.",
                    "Using Metrics to Improve Maintenance Testing.",
                    "Sixty Years of Software Maintenance: Lessons Learned."
                ]
            },
            {
                "sub_name_abbr": "conf/icsm/2005t",
                "sub_name": "Proceedings of the 21st IEEE International Conference on Software Maintenance - Industrial and Tool volume, ICSM 2005, 25-30 September 2005, Budapest, Hungary.",
                "count": 15,
                "papers": [
                    "Supporting the Maintenance of legacy COBOL Applications with Tools for Repository Management and Viewing.",
                    "Continuous Refactoring of a Java Server Application.",
                    "Using AOP to Ease Evolution.",
                    "Fit for Change: Steps towards Effective Software Maintenance.",
                    "A Case Study of the Release Management of a Health-care Information System.",
                    "RENATO, a Tool to Support Software Reuse.",
                    "A Configuration and Change Management System for Ground Segment Operation Software.",
                    "A collection of C, C++ and Java code understanding and refactoring plugins.",
                    "XDRE: A Reverse Engineering Tool of Object-Oriented Software.",
                    "IRiSS - A Source Code Exploration Tool.",
                    "ReleasePlanner - Planning new Releases for Software Maintenance and Evolution.",
                    "iPlasma: An Integrated Platform for Quality Assessment of Object-Oriented Design.",
                    "The Intensional View Environment.",
                    "VANESSA: Visualisation Abstraction NEtwork for Software Systems Analysis.",
                    "Co-Change Visualization."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2005",
                "sub_name": "5th IEEE International Workshop on Source Code Analysis and Manipulation (SCAM 2005), 30 September - 1 October 2005, Budapest, Hungary.",
                "count": 23,
                "papers": [
                    "Title Page.",
                    "Copyright.",
                    "Message from the Chairs.",
                    "Program Committee.",
                    "Reviewers.",
                    "Forward slices are smaller than backward slices.",
                    "Abstract Slicing: A New Approach to Program Slicing Based on Abstract Interpretation and Model Checking.",
                    "Dynamic Slicing of Java Bytecode Programs.",
                    "Minimal Slicing and the Relationships Between Forms of Slicing.",
                    "Extending Dynamic Aspect Mining with Static Information.",
                    "Fine-Grained Analysis of Change Couplings.",
                    "Concept Assignment as a Debugging Technique for Code Generators.",
                    "Implementation and Verification of Implicit-Invocation Systems Using Source Transformation.",
                    "Specifying Transformation Sequences as Computation on Program Fragments with an Abstract Attribute Grammar.",
                    "Control Flow Graph Reconstruction for Assembly Language Programs with Delayed Instructions.",
                    "Static Analysis for Computing Escapability and Mutability for Java Components.",
                    "A Fast Analysis for Thread-Local Garbage Collection with Dynamic Class Loading.",
                    "Pointer Analysis for Source-to-Source Transformations.",
                    "Measuring the Impact of Friends on the Internal Attributes of Software Systems.",
                    "Object-oriented cohesion as a surrogate of software comprehension: an empirical study.",
                    "Transforming Embedded Java Code into Custom Tags.",
                    "Declassification: Transforming Java Programs to Remove Intermediate Classes.",
                    "The Performance Penalty of XML for Program Intermediate Representations."
                ]
            }
        ]
    },
    {
        "year": "2004",
        "name": "ICSM 2004",
        "info": "Chicago, IL, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2004",
                "sub_name": "20th International Conference on Software Maintenance (ICSM 2004), 11-17 September 2004, Chicago, IL, USA.",
                "count": 83,
                "papers": [
                    "Using Metrics to Drive Quality Improvements and Value - Company Wide.",
                    "Empirically Evolving Software Techniques: The High Dependability Computing Project.",
                    "Empirical Evaluation of the Fault-Detection Effectiveness of Smoke Regression Test Cases for GUI-Based Software.",
                    "Industrial Real-Time Regression Testing and Analysis Using Firewalls.",
                    "Checking Inside the Black Box: Regression Testing Based on Value Spectra Differences.",
                    "Yesterday\"s Weather: Guiding Early Reverse Engineering Efforts by Summarizing the Evolution of Changes.",
                    "UML-Based Reverse Engineering and Model Analysis Approaches for Software Architecture Maintenance.",
                    "Extracting Facts from Open Source Software.",
                    "A Hierarchy of Dynamic Software Views: From Object-Interactions to Feature-Interactions.",
                    "Precise Identification of Side-Effect-Free Methods in Java.",
                    "A Case Study on the Long-Term Effects of Software Redocumentation.",
                    "Composing a Framework to Automate Testing of Operational Web-Based Software.",
                    "Ordering Broken Unit Tests for Focused Debugging.",
                    "Assertions in Object Oriented Software Maintenance: Analysis and a Case Study.",
                    "Incremental Quality Driven Software Migration to Object Oriented Systems.",
                    "RefaX: A Refactoring Framework Based on XML.",
                    "Legacy Assembler Reengineering and Migration.",
                    "Visualization of Program Dependence and Slices.",
                    "Debugging Support for Aspect-Oriented Program Based on Program Slicing and Call Graph.",
                    "Dex: A Semantic-Graph Differencing Tool for Studying Changes in Large Code Bases.",
                    "An Evaluation of Clone Detection Techniques for Identifying Crosscutting Concerns.",
                    "Supporting Source Code Difference Analysis.",
                    "Migrating Interface Implementation to Aspects.",
                    "Quantitative Method to Determine Software Maintenance Life Cycle.",
                    "Understanding Phases and Styles of Object-Oriented Systems' Evolution.",
                    "Tracing Evolution Changes of Software Artifacts through Model Synchronization.",
                    "A Cost Model for Software Maintenance & Evolution.",
                    "A Modular Approach Enforcing Safe Reconfiguration of Producer-Consumer Applications.",
                    "Predicting Change Propagation in Software Systems.",
                    "Architectural Software Configuration Management in Molhado.",
                    "Enhancing an Artefact Management System with Traceability Recovery Features.",
                    "An Empirical Study of Fine-Grained Software Modifications.",
                    "Studying Software Evolution Information by Visualizing the Change History.",
                    "Design Recovery of Real-Time Graphical Applications Using Video.",
                    "Detection Strategies: Metrics-Based Rules for Detecting Design Flaws.",
                    "Monitoring the Evolution of an OO System with Metrics: An Experience from the Stock Market Software Domain.",
                    "Evaluating Similarity Measures for Software Decompositions.",
                    "A Controlled Experiment on the Impact of the Object Constraint Language in UML-Based Development.",
                    "An Experimental Study of Two Graph Analysis Based Component Capture Methods for Object-Oriented Systems.",
                    "Bad Smells - Humans as Code Critics.",
                    "Linear Complexity Object-Oriented Similarity for Clone Detection and Software Evolution Analyses.",
                    "Validating and Improving an Existing Software Architectural Evaluation Process.",
                    "The Impact of Using Pair Programming on System Evolution: A Simulation-Based Study.",
                    "Developing a Multi-Objective Decision Approach to Select Source-Code Improving Transformations.",
                    "CM3: Service Level Agreement.",
                    "A Case Study on Regression Test Suite Maintenance in System Evolution.",
                    "Evaluating Architectural Stability with Real Options Theory.",
                    "Program Slicing in the Presence of a Database State.",
                    "Online Impact Analysis via Dynamic Compilation Technology.",
                    "COSVAM: A Technique for Assessing Software Variability in Software Product Families.",
                    "Advanced Slicing of Sequential and Concurrent Programs.",
                    "Semantic Driven Program Analysis.",
                    "Analysis, Testing and Re-Structuring of Web Applications.",
                    "Quality-Driven Object-Oriented Re-Engineering Framework.",
                    "Test-Driven Development and Software Maintenance.",
                    "Evolution and Maintenance of Web Service Applications.",
                    "Migrating the Enterprise.",
                    "Model Synchronization for Efficient Software Application Maintenance.",
                    "A Process for Improving Software Testability.",
                    "An Approach to Measure Software Maintenance and Support as a Value Added Component of To-Day's Business.",
                    "A Framework and Tool for Porting Assessment and Remediation.",
                    "CodeSurfer/Path Inspector.",
                    "Component Architecture Reengineering by Program Transformation.",
                    "Molhado: Object-Oriented Architectural Software Configuration Management.",
                    "Module Metric Signature (MMS) Visualization.",
                    "Fact Extraction and Code Auditing with Columbus and SourceAudit.",
                    "DDFgraph: A Tool for Dynamic Data Flow Graphs Visualization.",
                    "Software Architectures Change Propagation Tool (SACPT).",
                    "Integration, Customization and Maintenance of Heterogeneous Software with MECASP.",
                    "A Neuro-Fuzzy Tool for Software Estimation.",
                    "Development of CORBA Components in COBOL for Reusability and Interoperability.",
                    "Agile Methods' Contributions in Software Evolution.",
                    "Abstract and Precise Recovery of UML Diagram Constituents.",
                    "Software Design Improvement through Anti-Patterns Identification.",
                    "Strategies for Handling the Activity Problem in Runtime Software Evolution by Reducing Activity.",
                    "Tools for Extracting Software Structure from Compiled Programs.",
                    "Exploiting Global Causality in Testing of Distributed and Component-Based Applications.",
                    "Alternative Scalable Algorithms for Lattice-Based Feature Location.",
                    "The Experience of OSCAR.",
                    "An Approach to Understanding Program Comprehensibility Using Spatial Complexity, Concept Assignment and Typographical Style.",
                    "Software Maintenance: Analysis of Estimates Based on Requirement Specification in the Context of New Technologies, a Case Study.",
                    "Context Driven Slicing Based Coupling Measure.",
                    "Abstracting Module Views from Source Code."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2004",
                "sub_name": "4th IEEE International Workshop on Source Code Analysis and Manipulation (SCAM 2004), 15-16 September 2004, Chicago, IL, USA.",
                "count": 17,
                "papers": [
                    "Using Source-Code Analysis to Help End-User Programmers Create Dependable Software.",
                    "Software De-Pipelining Technique.",
                    "Abstracting Stack to Detect Obfuscated Calls in Binaries.",
                    "Context-Sensitivity Matters, But Context Does Not.",
                    "Some Notes on Interprocedural Program Slicing.",
                    "Formalizing Executable Dynamic and Forward Slicing.",
                    "Control Flow Reversal for Adjoint Code Generation.",
                    "Evolving Transformation Sequences using Genetic Algorithms.",
                    "Program Restructuring Through Clustering Techniques.",
                    "Amorphous Procedure Extraction.",
                    "Mining Aspectual Views using Formal Concept Analysis.",
                    "Adding Distribution to Existing Applications by Means of Aspect Oriented Programming.",
                    "Specifying the Law of Demeter and C++ Programming Guidelines with FCL.",
                    "Clone Detection in Source Code by Frequent Itemset Techniques.",
                    "Predicting Class Testability using Object-Oriented Metrics.",
                    "Executable Source Code and Non-Executable Source Code: Analysis and Relationships.",
                    "A CASE Tool Platform Using an XML Representation of Java Source Code."
                ]
            }
        ]
    },
    {
        "year": "2003",
        "name": "ICSM 2003",
        "info": "Amsterdam, The Netherlands",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2003",
                "sub_name": "19th International Conference on Software Maintenance (ICSM 2003), The Architecture of Existing Systems, 22-26 September 2003, Amsterdam, The Netherlands.",
                "count": 59,
                "papers": [
                    "Managing a multi-billion dollar IT Budget.",
                    "A Classification of Unanticipated Runtime Software Changes in Java.",
                    "Difference Tools for Analysis and Design Documents.",
                    "Populating a Release History Database from Version Control and Bug Tracking Systems.",
                    "Slicing of State-Based Models.",
                    "A Large-Scale Empirical Study of Forward and Backward Static Slice Size and Context Sensitivity.",
                    "Testing with Respect to Concerns.",
                    "Models for the evolution of OS projects.",
                    "Policy-guided Software Evolution.",
                    "Understanding the Nature of Software Evolution.",
                    "Mining the Maintenance History of a Legacy Software System.",
                    "Software Renewal Projects Estimation Using Dynamic Calibration.",
                    "Application of Neural Networks for Software Quality Prediction Using Object-Oriented Metrics.",
                    "The Case For Maintaining Assurance Cases.",
                    "Safe Upgrading without Restarting.",
                    "Towards a Versioning Model for Component-based Software Assembly.",
                    "Automated Support for Framework-Based Software Evolution.",
                    "Reverse Engineering of the Interaction Diagrams from C++ Code.",
                    "Using Intentional Source-Code Views to Aid Software Maintenance.",
                    "Deriving tolerant grammars from a base-line grammar.",
                    "Critical Success Factors in Software Maintenance-A Case Study.",
                    "Infrastructures of Virtual IT Enterprises.",
                    "Evolution of a Software Maintenance Organization from Cost Center to Service Center.",
                    "A Case Study in Optimization.",
                    "On Modeling Software Architecture Recovery as Graph Matching.",
                    "Library Miniaturization Using Static and Dynamic Information.",
                    "QuaTrace: A Tool Environment for (Semi-) Automatic Impact Analysis Based on Traces.",
                    "Impact Analysis and Change Management of UML Models.",
                    "Characterizing the 'Security Vulnerability Likelihood' of Software Functions.",
                    "Exploring Software Systems.",
                    "Context-driven Testing of Object-oriented Systems.",
                    "A Heuristic Approach to Solving the Software Clustering Problem.",
                    "Continual Resource Estimation for Evolving Software.",
                    "Software Architecture Recovery based on Pattern Matching.",
                    "Towards Evergreen Architectures: On the usage of scenarios in system architecting.",
                    "Mining Design Patterns from C++ Source Code.",
                    "A Multiple Hill Climbing Approach to Software Module Clustering.",
                    "Applying the Signature Concept to Plan-Based Program Understanding.",
                    "Service Learning in Software Engineering and Maintenance.",
                    "Software Systems Integration and Architectural Analysis - A Case Study.",
                    "Embedding architectural support in industry.",
                    "An Environment for Managing Evolving Product Line Architectures.",
                    "Experience in developing interoperations among legacy information systems using partial reverse engineering.",
                    "Source Code Based Function Point Analysis for Enhancement Projects.",
                    "Improving Hardware, Software, and Training Deployment Processes.",
                    "A Taxonomy and an Initial Empirical Study of Bad Smells in Code.",
                    "Source-Based Software Risk Assessment.",
                    "Strategic Architectural Flexibility.",
                    "Firewall Regression Testing of GUI Sequences and their Interactions.",
                    "DART: A Framework for Regression Testing \"Nightly/daily Builds\" of GUI Applications.",
                    "Regression Test Selection based on Intermediate Code for Virtual Machines.",
                    "A Framework for Understanding Conceptual Changes in Evolving Source Code.",
                    "Improving Software Maintenance by using Agent-based Remote Maintenance Shell.",
                    "Measuring Software Sustainability.",
                    "Re-using software architecture in legacy transformation projects.",
                    "Massively Reengineering Architectures With Automated Tools.",
                    "An industrialized restructuring service for legacy systems.",
                    "Some wells never dry.",
                    "Making maximum use of legacy code: Transavia internet booking engine."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2003",
                "sub_name": "3rd IEEE International Workshop on Source Code Analysis and Manipulation (SCAM 2003), 26-27 September 2003, Amsterdam, The Netherlands.",
                "count": 21,
                "papers": [
                    "Online Cycle Detection and Difference Propagation for Pointer Analysis.",
                    "Improving the Static Analysis of Loops by Dynamic Partitioning Techniques.",
                    "CPP Denotational Semantics.",
                    "Applying Meyer's Taxonomy to Object-Oriented Software Systems.",
                    "Power Law Distributions in Class Relationships.",
                    "The Java System Dependence Graph.",
                    "Design of the CodeBoost Transformation System for Domain-Specific Optimisation of C++ Programs.",
                    "Managing Multi-Billion Dollar IT Budgets using Source Code Analysis.",
                    "Barrier Slicing and Chopping.",
                    "Slicing the SCAM Mug: A Case Study in Semantic Slicing.",
                    "Static Slicing of Reactive Programs.",
                    "Design and Implementation of Bytecode-based Java Slicing System.",
                    "Interprocedural Static Slicing of Binary Executables.",
                    "Towards managing environment dependence during legacy systems renovation and maintenance.",
                    "Turning Dynamic Typing into Static Typing by Program Specialization in a Compiler Front-end for Octave.",
                    "Unique Renaming of Java Using Source Transformation.",
                    "Parse-Tree Annotations Meet Re-Engineering Concerns.",
                    "XOgastan: XML-Oriented gcc AST Analysis and Transformations.",
                    "Detection of Redundant Code using R2D2.",
                    "Checking Program Profiles.",
                    "Results from a Large-Scale Study of Performance Optimization Techniques for Source Code Analyses Based on Graph Reachability Algorithms."
                ]
            }
        ]
    },
    {
        "year": "2002",
        "name": "ICSM 2002",
        "info": "Montr\u00e9al, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2002",
                "sub_name": "18th International Conference on Software Maintenance (ICSM 2002), Maintaining Distributed Heterogeneous Systems, 3-6 October 2002, Montreal, Quebec, Canada.",
                "count": 86,
                "papers": [
                    "A Post-Placement Side-Effect Removal Algorithm.",
                    "Union Slices for Program Maintenance.",
                    "Evaluating Context-Sensitive Slicing and Chopping.",
                    "Using Dynamic Information for the Iterative Recovery of Collaborations and Roles.",
                    "ICBMC: An Improved Cohesion Measure for Classes.",
                    "Static and Dynamic C++ Code Analysis for the Recovery of the Object Diagram.",
                    "Panel Introduction.",
                    "The Principle of Organizational Maturity and E-Type Dynamics.",
                    "Implications of Software Measurement to Lehman's Eight Laws.",
                    "Laws and Principles of Evolution.",
                    "Laws of Software Evolution and Their Empirical Support.",
                    "Applicability of IEEE Maintenance Process for Corrective Maintenance Outsourcing - An Empirical Study.",
                    "Two Controlled Experiments Concerning the Usefulness of Assertions as a Means for Programming.",
                    "An Approach to Classify Software Maintenance Requests.",
                    "An Empirical Study of Distributed Software Maintenance.",
                    "Behavioural Concern Modelling for Software Change Tasks.",
                    "An Estimation-Based Management Framework for Enhancive Maintenance in Commercial Software Products.",
                    "An Application Server to Support Online Evolution.",
                    "The Information Gathering Strategies of Software Maintainers.",
                    "Tool Support for Measuring Complexity in Heterogeneous Object-Oriented Software.",
                    "Constraining Software Evolution.",
                    "Columbus - Reverse Engineering Tool and Schema for C++.",
                    "Architecture Analysis Tools to Support Evolution of Large Industrial Systems.",
                    "Maintaining Software with a Security Perspective.",
                    "Modeling the Cost-Benefits Tradeoffs for Regression Testing Techniques.",
                    "Model Based Regression Test Reduction Using Dependence Analysis.",
                    "Software Evolution from a Time-Series Perspective.",
                    "Documenting Pattern Use in Java Programs.",
                    "Early Effort Estimation of Massive Maintenance Processes.",
                    "An Integrated Failure Detection and Fault Correction Model.",
                    "Run-time Evolution for Embedded Component-Oriented Systems.",
                    "Panel Introducion.",
                    "Automating Impact Analysis and Regression Test Selection Based on UML Designs.",
                    "Path Profile-Based Dynamic Impact Analysis.",
                    "Software Change Impacts - An Evolving Perspective.",
                    "Incremental Location of Combined Features for Large-Scale Programs.",
                    "Test Manager: The Test Automation Component for the Maintenance of Large-Scale Systems.",
                    "Evolutionary Testing Supported by Slicing and Transformation.",
                    "Transforming Procedural Program Structures to Object-Oriented Class Structures for the Purpose of Populating a Common Software Repository.",
                    "Business Compilers: Towards Supporting a Highly Re-Configurable Architectural Style for Service-Oriented Architecture.",
                    "Restructuring Multilingual Web Sites.",
                    "Using Service Specific Proxies to Migrate Web Services to the \"Wireless Web\": An Illustrative Case Study of Adaptive Maintenance.",
                    "Testing Web Applications.",
                    "From Legacy to Web through Interaction Modeling.",
                    "Program Comprehension by Visualization in Contexts.",
                    "Recovering Conceptual Roles of Data in a Program.",
                    "An Algorithm to Compare OO-Conceptual Schemas.",
                    "A Model for Understanding Software Components.",
                    "Measuring Software Functional Size: Towards an Effective Measurement of Complexity.",
                    "A Novel Approach to Measuring Class Cohesion Based on Dependence Analysis.",
                    "Combining Software Quality Predictive Models: An Evolutionary Approach.",
                    "Does the Code Match the Design? A Process for Architecture Evaluation.",
                    "Identifying Test-Critical Dependencies.",
                    "A Table Reduction Approach for Software Structure Testing.",
                    "Testability Analysis for Software Components.",
                    "Putting Escape Analysis to Work for Software Testing.",
                    "A Case Study of Unanticipated Incremental Change.",
                    "The Impact of Environmental Evolution on Requirements Changes.",
                    "STA - A Conceptual Model for System Evolution.",
                    "Panel Introduction.",
                    "Maintenance Issues for Very Long-Lived Robotic Space Systems.",
                    "Software Evolution, Volatility and Lifecycle Maintenance Patterns: A Longitudinal Analysis.",
                    "Atomic Architectural Component Recovery for Program Understanding and Evolution.",
                    "Change-Oriented Requirements Traceability: Support for Evolution of Embedded Systems.",
                    "Corrective Maintenance Maturity Model: Problem Management.",
                    "A Tool for Subsystem Configuration Management.",
                    "Consistency Management in the Presence of Simultaneous Client-Specific Views.",
                    "Extensible Language-Aware Merging.",
                    "A Fine-Grained Version and Confguration Model in Analysis and Design.",
                    "Migration to Object Oriented Platforms: A State Transformation Approach.",
                    "Maintenance of Object Oriented Systems through Re-Engineering: A Case Study.",
                    "Pretty-Printing for Software Reengineering.",
                    "An Effective Approach to Reduce the ihAvalanche Effectln in the Management of Fiscal Data in Local Public Administration.",
                    "Release Planning.",
                    "Driving Software Quality at a Silicon Valley High-Tech Software Company.",
                    "Case Study on Software Engineering Practices with Parnas Tables.",
                    "Re-Engineering of E-commerce Legacy Applications for Enterprise JavaTM Environment.",
                    "A Quantitative Evaluation of Maintainability Enhancement by Refactoring.",
                    "Constructing Precise Object Relation Diagrams.",
                    "A Software Transformation Framework for Quality-Driven Object-Oriented Re-engineering.",
                    "A Formal Approach for Software Maintenance.",
                    "Approximate Retrieval of Incomplete and Formal Specifications Applied to Vertical Reuse.",
                    "Externalizing Component Manners to Achieve Greater Maintainability through a Highly Re-Configurable Architectural Style.",
                    "Using Execution Trace Data to Improve Distributed Systems.",
                    "A Technique for Dynamic Updating of Java Software.",
                    "Maintenance of Distributed Systems with Mobile Agents."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2002",
                "sub_name": "2nd IEEE International Workshop on Source Code Analysis and Manipulation (SCAM 2002), 1 October 2002, Montreal, Canada.",
                "count": 18,
                "papers": [
                    "Parallel Support for Source Code Analysis and Modification.",
                    "Towards Measurement of Testability of Concurrent Object-Oriented Programs Using Fault Insertion: A Preliminary Investigation.",
                    "An Extensible Metrics Extraction Environment for Object-Oriented Programming Languages.",
                    "Evaluating Clone Detection Tools for Use during Preventative Maintenance.",
                    "A Simple Mathematically Based Framework for Rule Extraction Using Wide Spectrum Language.",
                    "VADA: A Transformation-Based System for Variable Dependence Analysis.",
                    "Combining Source Transformation and Operator Overloading Techniques to Compute Derivatives for MATLAB Programs.",
                    "Mechanized Operational Semantics of WSL.",
                    "Handling Preprocessor-Conditioned Declarations.",
                    "Grammar Programming in TXL.",
                    "An Interprocedural Amorphous Slicer for WSL.",
                    "Dynamic Slicing Object-Oriented Programs for Debugging.",
                    "Construction of the System Dependence Graph for Web Application Slicing.",
                    "Predicate-Based Dynamic Slicing of Message Passing Programs.",
                    "Using Dependence Graphs as a Support to Document Programs.",
                    "Precise Call Graph Construction in the Presence of Function Pointers.",
                    "Semantics Guided Filtering of Combinatorial Graph Transformations in Declarative Equation-Based Languages.",
                    "Visualization of Exception Propagation for Java Using Static Analysis."
                ]
            }
        ]
    },
    {
        "year": "2001",
        "name": "ICSM 2001",
        "info": "Florence, Italy",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2001",
                "sub_name": "2001 International Conference on Software Maintenance, ICSM 2001, Florence, Italy, November 6-10, 2001.",
                "count": 91,
                "papers": [
                    "Software Evolution: A Road Map.",
                    "Addressing the Software Evolution Crisis Through a Service-Oriented View of Software: A Roadmap for Software Engineering and Maintenance Research.",
                    "Software Evolution: A Road Map.",
                    "Software Evolution: A Road Map.",
                    "Representing and Accessing Extracted Information.",
                    "Supporting Software Maintenance by Mining Software Update Records.",
                    "Reverse Engineering Legacy Information Systems for Internet Based Interoperation.",
                    "A Change Propagation Model and Platform for Multi-Database Applications.",
                    "Implementation Techniques for Efficient Data-Flow Analysis of Large Programs.",
                    "Flow Analysis to Detect Blocked Statements.",
                    "Incorporating Incremental Validation and Impact Analysis into Spreadsheet Maintenance: An Empirical Study.",
                    "An Implementation of and Experiment with Semantic Differencing.",
                    "Test-Suite Reduction and Prioritization for Modified Condition/Decision Coverage.",
                    "SDS Internet Banking.",
                    "An Architecture for Re-engineering of Client/Server Applications.",
                    "Extending the UML to Support Evolution Management.",
                    "Multi-View Architecture Trend Analysis for Medical Imaging.",
                    "An Intranet-Based Application for Supporting Effective Maintenance Activities on Large Software Systems.",
                    "Entropies as Measures of Software Information.",
                    "The Role of Independent Verification and Validation in Maintaining a Safety Critical Evolutionary Software in a Complex Environment: The NASA Space Shuttle Program.",
                    "Investigation of the Risk to Software Reliability and Maintainability of Requirements Changes.",
                    "Pre/Post Conditioned Slicing.",
                    "Web Application Slicing.",
                    "Incremental Slicing Based on Data-Dependences Types.",
                    "The Impact of Software Evolution on Code Coverage Information.",
                    "Impact Analysis of Maintenance Tasks for a Distributed Object-Oriented System.",
                    "Analyzing the Impact of Changing Requirements.",
                    "Object-Oriented Repository Services.",
                    "Understanding Legacy Systems with OSK.",
                    "WebFabIS: A WEB Based Information System for Microelectronics Manufacturing.",
                    "Using Code Metrics to Predict Maintenance of Legacy Programs: A Case Study.",
                    "Software Renewal Process Comprehension using Dynamic Effort Estimation.",
                    "An Approach to Modelling Long-Term Growth Trends in Software Systems.",
                    "RIPPLES: Tool for Change in Legacy Software.",
                    "Cost-Effective Maintenance Tools for Proprietary Languages.",
                    "Integrating Information Sources for Visualizing Java Programs.",
                    "Defect Prevention through Defect Prediction: A Case Study at Infosys.",
                    "Modeling Clones Evolution through Time Series.",
                    "Does the Modern Code Inspection Have Value?",
                    "An Architectural Model for Service-Based Software with Ultra Rapid Evolution.",
                    "Extreme Maintenance.",
                    "Aspects of Design and Implementation of a Multi-Channel and Multi-Modal Information System.",
                    "Describing Evolving Dependable Systems Using Co-Operative Software Architectures.",
                    "Measuring Behavioral Correspondence to a Timed Concurrent Model.",
                    "Using Coordination to Restructure Sequential Source Code into a Concurrent Program.",
                    "The State of Documentation Practice within Corrective Maintenance.",
                    "CVSSearch: Searching through Source Code Using CVS Comments.",
                    "Reverse Engineering of the UML Class Diagram from C++ Code in Presence of Weakly Typed Containers.",
                    "Multi-View Software Evolution: A UML-based Framework for Evolving Object-Oriented Software.",
                    "The Build-Time Software Architecture View.",
                    "A Graph Pattern Matching Approach to Software Architecture Recovery.",
                    "An Empirical Study of Maintenance Issues within Process Improvement Programmes in the Software Industry.",
                    "Evaluating the Predelivery Phase of ISO/IEC FDIS 14764 in the Swedish Context.",
                    "Introducing Workflow Management in Software Maintenance Processes.",
                    "Assessing Massive Maintenance Processes: An Empirical Study.",
                    "A Customization Method for Network Management Functions without Modification of Off-the-Shelf Components.",
                    "A Framework for Re-use and Maintenance of Quality of Service Mechanisms in Distributed Object Systems.",
                    "Changing Java Programs.",
                    "Live Upgrades of CORBA Applications Using Object Replication.",
                    "Towards a Business Maintenance Model.",
                    "A Queue Theory-Based Approach to Staff Software Maintenance Centers.",
                    "K-Mediator: Towards Evolving Information Systems.",
                    "A Client-Benefits Oriented Taxonomy of ERP Maintenance.",
                    "Summary of Dynamically Discovering Likely Program Invariants.",
                    "Hypothesis-Based Concept Assignment to Support Software Maintenance.",
                    "A Formal Foundation for Object-Oriented Software Evolution.",
                    "Perspectives on Improving Software Maintenance.",
                    "A Metric Framework for the Assessment of Object-Oriented Systems.",
                    "A Database Evolution Approach for Object-Oriented Databases.",
                    "Bayesian Analysis of Software Cost and Quality Models.",
                    "A Declarative Evolution Framework for Object-Oriented Design Patterns.",
                    "OO Design Patterns, Design Structure, and Program Changes: An Industrial Case Study.",
                    "Dynamic and Static Views of Software Evolution.",
                    "Aiding Program Comprehension by Static and Dynamic Feature Analysis.",
                    "Form: A Framework for Creating Views of Program Executions.",
                    "Using Design Recovery Techniques to Transform Legacy Systems.",
                    "Iterative Reengineering of Legacy Functions.",
                    "A Decisional Framework for Legacy System Management.",
                    "Automating Language Conversion: A Case Study.",
                    "The FermaT Assembler Re-engineering Workbench.",
                    "Architecture-Based Semantic Evolution: A Study of Remotely Controlled Embedded Systems.",
                    "Software Maintenance: An Approach towards Control.",
                    "A Program Dependence Model for Concurrent Logic Programs and its Applications.",
                    "Incremental Call Graph Reanalysis for Object-Oriented Software Maintenance.",
                    "Syntax-Directed Construction of Value Dependence Graphs.",
                    "A Graphical Class Representation for Integrated Black- and White-Box Testing.",
                    "Using Component Metacontent to Support the Regression Testing of Component-Based Software.",
                    "Managing the Maintenance of Ported, Outsourced, and Legacy Software via Orthogonal Defect Classification.",
                    "Automated Support for Program Refactoring Using Invariants.",
                    "Comparing the Decompositions Produced by Software Clustering Algorithms Using Similarity Measurements.",
                    "The Method Replacement Indicator: A Metric for Analyzing Behavioral Substitution."
                ]
            },
            {
                "sub_name_abbr": "conf/scam/2001",
                "sub_name": "1st IEEE International Workshop on Source Code Analysis and Manipulation (SCAM 2001), 10 November 2001, Florence, Italy.",
                "count": 23,
                "papers": [
                    "A Case Study in Detecting Software Security Vulnerabilities Using Constraint Optimization.",
                    "A Hybrid Program Slicing Framework.",
                    "An Object Level Transformation Technique to Improve the Performance of Embedded Applications.",
                    "A Source-to-Source Compiler for Generating Dependable Software.",
                    "Analysis and Manipulation of Distributed Multi-Language Software Code.",
                    "Application Maintenance Using Software Agents.",
                    "Detecting Dead Statements for Concurrent Programs.",
                    "Finding Code on the World Wibe Web: A Preliminary Investigation.",
                    "Flow Insensitive Points-To Sets.",
                    "Identifying Clones in the Linux Kernel.",
                    "Jmangler-A Framework for Load-Time Transformation of Java Class Files.",
                    "Library Transformations.",
                    "Measurement and Analysis of Runtime Profiling Data for Java Programs.",
                    "Preserving the Documentary Structure of Source Code in Language-Based Transformation Tools.",
                    "Program Slicing: Methods and Applications.",
                    "Restructuring Web Applications via Transformation Rules.",
                    "Smell the Coffee! Uncovering Java Analysis Issues.",
                    "Software Engineering by Source Transformation-Experience with TXL.",
                    "Static Slicing and Parametric Polymorphism.",
                    "The Formal Transformation Approach to Source Code Analysis and Manipulation.",
                    "Type Infeasible Call Chains.",
                    "Using Automated Source Code Analysis for Software Evolution.",
                    "Using Data Flow Analysis to Infer Type Information in Java Bytecode."
                ]
            }
        ]
    },
    {
        "year": "2000",
        "name": "ICSM 2000",
        "info": "San Jose, CA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/2000",
                "sub_name": "2000 International Conference on Software Maintenance, ICSM 2000, San Jose, California, USA, October 11-14, 2000.",
                "count": 32,
                "papers": [
                    "Software Maintenance in the New Millennium: Issues and Challenges.",
                    "Software Life Cycles for e-Commerce Businesses.",
                    "Trends in Preserving and Enhancing the Value of Software.",
                    "Preserving the Value of Software - A CIO Perspective.",
                    "Preventive Maintenance! Do We Know What It Is?",
                    "Do We Know What Preventive Maintenance Is?",
                    "What Is Preventive Software Maintenance?",
                    "Bridging Program Comprehension Tools by Design Navigation.",
                    "TraceGraph: Immediate Visual Location of Software Features.",
                    "Information Retrieval Models for Recovering Traceability Links between Code and Documentation.",
                    "Recovering Class Diagrams from Data-Intensive Legacy Systems.",
                    "An Alternative Source Code Analysis.",
                    "Web Site Analysis: Structure and Evolution.",
                    "Software Architecture Transformations.",
                    "Restructuring Program Identifier Names.",
                    "The Application of Correctness Preserving Transformations to Software Maintenance.",
                    "Identifying Reasons for Software Changes using Historic Databases.",
                    "Evolution in Open Source Software: A Case Study.",
                    "Studying the Evolution and Enhancement of Software Features.",
                    "Can Metrics Help to Bridge the Gap between the Improvement of OO Design Quality and its Automation?",
                    "Metrics of Software Evolution as Effort Predictors - A Case Study.",
                    "A Survey of Black-Box Modernization Approaches for Information Systems.",
                    "Prevention Is Better Than Cure.",
                    "C/C++ Conditional Compilation Analysis using Symbolic Execution.",
                    "An Approach to Limit the Wynot Problem.",
                    "ConSIT: A Conditioned Program Slicer.",
                    "Beyond Productivity in Software Maintenance: Factors Affecting Lead Time in Servicing Users' Requests.",
                    "Techniques of Maintaining Evolving Component-based Software.",
                    "Software Maintenance Types - A Fresh View.",
                    "Leveraging Software Reengineering Systems for Heterogeneous Distributed Computing Environments.",
                    "A Deployment System for Pervasive Computing.",
                    "Support for System Evolution through Separating Business and Technology Issues in a Banking System."
                ]
            }
        ]
    },
    {
        "year": "1999",
        "name": "ICSM 1999",
        "info": "Oxford, England, UK",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1999",
                "sub_name": "1999 International Conference on Software Maintenance, ICSM 1999, Oxford, England, UK, August 30 - September 3, 1999.",
                "count": 49,
                "papers": [
                    "Requirements Recovery from Legacy Systems by Analyzing and Modelling Behavior.",
                    "Recovering High-Level Views of Object-Oriented Applications from Static and Dynamic Information.",
                    "Extracting Objects of Ada Programs Using Module Features.",
                    "A Tool Suite for Evolving Legacy Software.",
                    "Building Documentation Generators.",
                    "Bunch: A Clustering Tool for the Recovery and Maintenance of Software System Structures.",
                    "Assembler to C Migration Using the FermaT Transformation System.",
                    "Restructuring Legacy C Code into C++.",
                    "Evolutionary Migration of Legacy Systems to an Object-Based Distributed Environment.",
                    "Visualizing Software Release Histories: The Use of Color and Third Dimension.",
                    "A Language Independent Approach for Detecting Duplicated Code.",
                    "Component Module Classification for Distributed Software Understanding.",
                    "Experience Paper: Experience with a Reverse Engineering Architecture Approach to Increase Understanding.",
                    "Experience Paper: Observations on the Evolution of an Industrial OO Framework.",
                    "Experience Paper: Implementing an Experience Factory: Maintenance and Evolution of the Software and Systems Development Process.",
                    "Experience Paper: Beyond Year 2000 Remediation: The Compliance Verification: A Case Study.",
                    "Experience Paper: Challenges and Experiences in Managing Major Software Evolution Endeavours Such as Euro Conversion or Y2000 Compliance.",
                    "Experience Paper: Maintenance at ABB (I): Software Problem Administration Processes.",
                    "Test Case Prioritization: An Empirical Study.",
                    "Automatic Unit Test Data Generation Using Mixed-Integer Linear Programming and Execution Trees.",
                    "Testing of Concurrent Programs After Specification Changes.",
                    "Maintaining Traceability During Object-Oriented Software Evolution: A Case Study.",
                    "Hot Spot Recovery in Object-Oriented Software with Inheritance and Composition Template Methods.",
                    "Object-Oriented Design Pattern Inference.",
                    "Generation of Software Renovation Factories from Compilers.",
                    "A Semi-Formal Approach to Assist Software Design with Reuse.",
                    "Criteria for Testing Exception-Handling Constructs in Java Programs.",
                    "Software Quality Maintenance Model.",
                    "Common Concept Apparatus Within Corrective Software Maintenance.",
                    "Models to Promote Effective System Change.",
                    "Experience Paper: Maintenance at ABB (II): Change Execution Processes.",
                    "Experience Paper: Reverse Compilation of Digital Signal Processor Assembler Source to ANSI-C.",
                    "Experience Paper: Effort Distribution in a Six-Year Industrial Application Framework Project.",
                    "Experience Paper: Software Reliability: Assumptions, Realities and Data.",
                    "Experience Paper: A Case Study in Object-Oriented Maintenance.",
                    "Experience Paper: Quality Improvement in Switching-System Software.",
                    "Experience Paper: Preparing Measurements of Legacy Software for Predicting Operational Faults.",
                    "A Two-Phase Process for Software Architecture Improvement.",
                    "Browsing and Searching Software Architectures.",
                    "A Semantic Foundation for Architectural Reengineering and Interchange.",
                    "Evaluating the Use of Dominance Trees for C and COBOL.",
                    "A Framework for Analysing the Effect of \"Change\" in Legacy Code.",
                    "Reuse-Driven Interprocedural Slicing in the Presence of Pointers and Recursion.",
                    "Impact Analysis in Real-Time Control Systems.",
                    "Simultaneous Demand-Driven Data-Flow and Call Graph Analysis.",
                    "A Methodology for the Automated Introduction of Design Patterns.",
                    "Using Coupling Measurement for Impact Analysis in Object-Oriented Systems.",
                    "Metrics for Controlling Effort During Adaptive Maintenance of Object-Oriented Systems.",
                    "Evolution and Errors: An Empirical Example."
                ]
            }
        ]
    },
    {
        "year": "1998",
        "name": "ICSM 1998",
        "info": "Bethesda, MD, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1998",
                "sub_name": "1998 International Conference on Software Maintenance, ICSM 1998, Bethesda, Maryland, USA, November 16-19, 1998.",
                "count": 46,
                "papers": [
                    "Making Change: The Other Components of Software Maintenance.",
                    "Identification of Green, Yellow and Red Legacy Components.",
                    "Identification of Data Cohesive Subsystems Using Data Mining Techniques.",
                    "Code Churn: A Measure for Estimating the Impact of Code Change.",
                    "An Empirical Study of the Effects of Minimization on the Fault Detection Capabilities of Test Suites.",
                    "Empirical Evaluation of the Textual Differencing Regression Testing Technique.",
                    "The Visibility of Maintenance in Object Models: An Empirical Study.",
                    "Hitting the Moving Target: Trials and Tribulations of Modeling Quality in Evolving Software Systems.",
                    "Can a Software Quality Model Hit a Moving Target?",
                    "Some Comments on the Software Measurement Process.",
                    "Using Software Metrics to Control Firmware Evolution.",
                    "Modeling Process and Product Quality during Maintenance.",
                    "Two Case Studies in Measuring Software Maintenance Effort.",
                    "A Case Study in Software Wrapping.",
                    "Identifying Design-Code Inconsistencies in Object-Oriented Software: A Case Study.",
                    "Dynamic Model for Maintenance and Testing Effort.",
                    "Software Maintenance Life Cycle Model.",
                    "An Experiment in Identifying Persistent Objects in Large Systems.",
                    "Building Maintainable COTS Based Systems.",
                    "Practices of Software Maintenance.",
                    "A Study of Communication and Cooperation in Distributed Software Project Teams.",
                    "Are COTS Products and Component Packaging Killing Software Malleability?",
                    "Maintaining a COTS Integrated Solution - Are Traditional Static Analysis Techniques Sufficient for this New Programming Methodology?",
                    "Experience Report: Correcting System Failure in a COTS Information System.",
                    "Evaluating Software Deployment Languages and Schema.",
                    "Detection of Logical Coupling Based on Product Release History.",
                    "Investigating Component-Based Maintenance and the Effect of Software Evolution: A Reengineering Approach Using Data Clustering.",
                    "Implications of Evolution Metrics on Software Maintenance.",
                    "Maintaining COTS-Based Systems: Is it Possible? (Panel).",
                    "COTS Evaluation and Selection.",
                    "Methods for Assessing COTS Reliability, Maintainability, and Availability.",
                    "Assembly to High-Level Language Translation.",
                    "Reengineering Object-Oriented Code.",
                    "Do Program Transformations Help Reverse Engineering?",
                    "Investigating Maintenance Processes in a Framework-Based Environment.",
                    "A Survey on the Software Maintenance Process.",
                    "Maintaining Maintainability.",
                    "Tackling the Abstraction Problem for Reverse Engineering in a System Re-engineering Approach.",
                    "Improving Visual Impact Analysis.",
                    "Reuse in Replaying Database Design.",
                    "Program Understanding During Software Adaptation Tasks.",
                    "Using the O-A Diagram to Encapsulate Dynamic Memory Access.",
                    "Analysis of Dynamic Memory Access Using Amorphous Slicing.",
                    "Analysis of Programs with Exception-Handling Constructs.",
                    "Slicing Objects Using System Dependence Graphs.",
                    "Clone Detection Using Abstract Syntax Trees."
                ]
            }
        ]
    },
    {
        "year": "1997",
        "name": "ICSM 1997",
        "info": "Bari, Italy",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1997",
                "sub_name": "1997 International Conference on Software Maintenance (ICSM '97), 1-3 October 1997, Bari, Italy, Proceedings.",
                "count": 42,
                "papers": [
                    "Software Engineering Issues for Network Computing.",
                    "Reverse Architecting Approach for Complex Systems.",
                    "Hypothesis-Driven Understanding Processes During Corrective Maintenance of Large Scale Software.",
                    "Effects of Decomposition Techniques on Knowledge-Based Program Understanding.",
                    "Predicting Maintenance Effort with Function Points.",
                    "Modeling software maintenance requests: a case study.",
                    "Measuring Abstractness for Reverse Engineering in a Re-engineering Tool.",
                    "Finding Components in a Hierarchy of Modules: a Step towards Architectural Understanding.",
                    "Program Understanding Using Program Slivers -- An Experience Report.",
                    "Program Understanding and Maintenance with the CANTO Environment.",
                    "A Model for Change Propagation Based on Graph Rewriting.",
                    "Structural information as a quality metric in software systems organization.",
                    "Constructing Bayesian-network models of software testing and maintenance uncertainties.",
                    "Effect of Object Orientation on Maintainability of Software.",
                    "Migrating Legacy Systems towards Object-Oriented Platforms.",
                    "An Experimental Comparison of the Maintainability of Object-Oriented and Structured Design Documents.",
                    "Software Black Box Mechanism: A Pragmatic Method for Software Crash Diagnosis and Usage Maintenance Testing.",
                    "MORALE. Mission ORiented Architectural Legacy Evolution.",
                    "Software Evolution Observations Based on Product Release History.",
                    "Identifying modules via concept analysis.",
                    "Dynamic Traceability Links Supported by a System Architecture Description.",
                    "Intraprocedural Static Slicing of Binary Executables.",
                    "DLA'S YEAR 2000 REMEDIATION PROGRAM: Managing Organization-Wide Conversion and Compliance.",
                    "Living with the 2-digit Year Year 2000 Maintenance Using a Procedural Solution.",
                    "Causal Analysis of the Requirements Change Process for a Large System.",
                    "CREP - Characterizing Reverse Engineering Process Component Methodology.",
                    "Measuring and evaluating maintenance process using reliability, risk, and test metrics.",
                    "Experimental Analysis of the Cognitive Processes of Program Maintainers during Software Maintenance.",
                    "Software Change Through Design Maintenance.",
                    "Viewpoints as an evolutionary approach to software system maintenance.",
                    "Experiences Developing and Maintaining Software in a Multi-Platform Environment.",
                    "Designing for Increased Software Maintainability.",
                    "A Formal Transformation and Refinement Method for Concurrent Programs.",
                    "Analysis for Reuse and Maintenance: A Program for Experimentation.",
                    "The Impact of Distributed Object Technology on Reengineering - Panel Session Introduction.",
                    "Wrapping coarse-grained objects using standard infrastructure technology.",
                    "Repairing coordination mismatches among legacy components.",
                    "The rationale for software wrapping.",
                    "Enabling technology for migrating legacy systems to client-server systems.",
                    "Low-threat security patches and tools.",
                    "Assessing the Benefits of Incorporating Function Clone Detection in a Development Process.",
                    "Investigating the Maintenance Implications of the Replication of Code."
                ]
            }
        ]
    },
    {
        "year": "1996",
        "name": "ICSM 1996",
        "info": "Monterey, CA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1996",
                "sub_name": "1996 International Conference on Software Maintenance (ICSM '96), 4-8 November 1996, Monterey, CA, USA, Proceedings.",
                "count": 40,
                "papers": [
                    "Deriving an Object Model from Legacy Fortran Code.",
                    "Restructuring sequential Fortran code into a parallel/distributed application.",
                    "Recovering the Structure of Software Systems Using Tube Graph Interconnection Clustering.",
                    "How Much Has Software Maintenance Changed Since 1983?",
                    "Impact analysis in the software change process: a year 2000 perspective.",
                    "Visual Impact Analysis.",
                    "Assessing the impact of changes at the architectural level: a case study on graphical debuggers.",
                    "Detection of Fault-Prone Software Modules During a Spiral Life Cycle.",
                    "The effect of interface complexity on program error density.",
                    "Maintainability as a key factor in maintenance productivity: a case study.",
                    "Specifying code analysis tools.",
                    "Software Error Classification using Purify.",
                    "Omega - an integrated environment for C++ program maintenance.",
                    "Examining Year 2000 Data Challenges from the Maintenance Perspective.",
                    "Change Costing in a Maintenance Environment.",
                    "The non-homogeneous maintenance periods: a case study of software modifications.",
                    "Maintenance In a Dual-Lifecycle Software Engineering Process.",
                    "Measurements for managing software maintenance.",
                    "A Design Environment for Migrating Relational to Object Oriented Database Systems.",
                    "Algorithmic Analysis of the Impact of Changes to Object-Oriented Software.",
                    "Discovering a system modernization decision framework: a case study in migrating to distributed object technology.",
                    "A study of the effects of software development practices on software maintenance effort.",
                    "A Formal Method for Software Maintenance.",
                    "Modelling the maintenance process at Zurich Life Insurance.",
                    "An Agent-Based Approach to Rapid Software Evolution Based on a Domain Model.",
                    "Analysing Large COBOL Programs: the extraction of reusable modules.",
                    "Experiment on the Automatic Detection of Function Clones in a Software System Using Metrics.",
                    "Reverse Engineering Concurrent Programs using Formal Modelling and Analysis.",
                    "Using Informal and Formal Techniques for the Reverse Engineering of C Programs.",
                    "Evaluation of a Knowledge-Based Approach to Program Understanding.",
                    "A Documentation Suite for Maintenance Programmers.",
                    "VIFOR 2: a tool for browsing and documentation.",
                    "Maintenance and abstraction of program data using formal transformations.",
                    "Early field experience with the Software Reconnaissance technique for program comprehension.",
                    "A Cliche'-Based Environment to Support Architectural Reverse Engineering.",
                    "Preprocessors from an Abstract Point of View.",
                    "Binary Translation: Static, Dynamic, Retargetable?",
                    "Regression Testing of GUI Event Interactions.",
                    "Semi-automatic update of applications in response to library changes.",
                    "Software Maintenance for 2005."
                ]
            }
        ]
    },
    {
        "year": "1995",
        "name": "ICSM 1995",
        "info": "Opio (Nice), France",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1995",
                "sub_name": "Proceedings of the International Conference on Software Maintenance, ICSM 1995, Opio (Nice), France, October 17-20, 1995.",
                "count": 37,
                "papers": [
                    "A study on the effect of architecture on maintainability of object-oriented systems.",
                    "A metric for evaluating class library interfaces and its application to library upgrades.",
                    "The effect of inheritance on the maintainability of object-oriented software: an empirical study.",
                    "A case study of a maintenance support system.",
                    "Supporting impact analysis: a semi-automated technique and associated tool.",
                    "Domain-retargetable reverse engineering. III. Layered modeling.",
                    "Ciao: a graphical navigator for software and document repositories.",
                    "Application and user interface migration from BASIC to Visual C++.",
                    "Software maintenance in Hong Kong.",
                    "Software maintenance offloading at the Union Bank of Switzerland.",
                    "Using object oriented analysis and design in a non-object oriented environment experience report.",
                    "Acquisition of ERA models from data intensive code.",
                    "Identifying reusable functions using specification driven program slicing: a case study.",
                    "Design maintenance: unexpected architectural interactions (experience report).",
                    "Iterative reengineering to compensate for quick-fix maintenance.",
                    "Towards reengineering in reuse reengineering processes.",
                    "Algorithms for program dependence graph production.",
                    "Estimating the costs of software maintenance tasks.",
                    "The AMES approach to application understanding: a case study.",
                    "Discovering relationships between service and customer satisfaction.",
                    "A software re-engineering method using domain models.",
                    "An independent software-modification method.",
                    "Dynamic slicing of distributed programs.",
                    "Correcting for unreliable regression integration testing.",
                    "Detecting program modules with low testability.",
                    "Reducing the cost of regression testing by semantics guided test case selection.",
                    "Detecting interleaving.",
                    "Manipulating and documenting software structures using SHriMP views.",
                    "A sizing measure for adaptive maintenance work products.",
                    "Maintainability measurements on industrial source code maintenance activities.",
                    "Software maintenance in distributed computer environments: system complexity versus component simplicity.",
                    "Using views to maintain Petri-net-based process models.",
                    "Improving application management process through qualitative framework.",
                    "Applying software engineering and process improvement to legacy defence system maintenance: an experience report.",
                    "Priority based data flow testing.",
                    "Bylands: reverse engineering safety-critical systems.",
                    "Is maintenance ready for evolution?"
                ]
            }
        ]
    },
    {
        "year": "1994",
        "name": "ICSM 1994",
        "info": "Victoria, BC, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1994",
                "sub_name": "Proceedings of the International Conference on Software Maintenance, ICSM 1994, Victoria, BC, Canada, September 1994.",
                "count": 48,
                "papers": [
                    "A Framework for Partial Data Flow Analysis.",
                    "Selecting Regression Tests for Object-Oriented Software.",
                    "Domain Based Regression Testing.",
                    "A Change Analysis Process to Characterize Software Maintenance Projects.",
                    "Verification of Results in Software Maintenance Through External Replication.",
                    "Improving Code Churn Predictions During the System Test and Maintenance Phases.",
                    "Knowledge-Based User Interface Migration.",
                    "Inference of Graphical AUIDL Specifications for the Reverse Engineering of User Interfaces.",
                    "Combining Static and Dynamic Analysis of Concurrent Programs.",
                    "Transferring Reengineering Technology to a Software Development and Maintenance Organization: An Experience Report.",
                    "Issues in Software Process Automation - From a Practical Perspective.",
                    "Software Evolution in Practice for the U.S. Department of Energy.",
                    "Substring Matching for Clone Detection and Change Tracking.",
                    "Querying Source Code Using an Algebraic Query Language.",
                    "Debugging Practices for Complex Legacy Software Systems.",
                    "Reengineering Legacy Systems to Meet Quality Requirements: An Experience Report.",
                    "Using Software Maintainability Models to Track Code Health.",
                    "An Evaluation of the State-of-the-Art for Application Management.",
                    "Understanding C Programs Using the Combined C Graph Representation.",
                    "Enhancing Code for Readability and Comprehension Using SGML.",
                    "Design Extraction by Adiabatic Multi-Perspective Abstraction.",
                    "Change Impact Identification in Object Oriented Software Maintenance.",
                    "Evolving Software Processes by Tailoring the Behavior of Software Objects.",
                    "Reuse of Modular Software with Automated Comment Analysis.",
                    "The Impact Analysis Task in Software Maintenance: A Model and a Case Study.",
                    "Semantic Diff: A Tool for Summarizing the Effects of Modifications.",
                    "An Experiment on the Effect of Design Recording on Impact Analysis.",
                    "Abstracting Plan-like Program Information: A Demonstration.",
                    "Data-Centered Program Understanding.",
                    "Incremental Process Support for Code Reengineering.",
                    "Towards interoperable maintenance processes.",
                    "Dimensions of Software Evolution.",
                    "Software Maintenance in Norway, A Survey Investigation.",
                    "Reverse Engineering Requirements for Process-Control Software.",
                    "Domain Analysis and Reverse Engineering.",
                    "Domain-Retargetable Reverse Engineering II: Personalized User Interfaces.",
                    "Extension of a Transformation System for Maintenance: Dealing with Data-Intensive Programs.",
                    "Inter-Module Renaming and Reorganizing: Examples of Program Manipulation-in-the-Large.",
                    "Programming Through Disciplined Modification.",
                    "Canonical Modeling of Software Complexity and Fault Correction Activity.",
                    "Complexity Metrics for Rule-Based Expert Systems.",
                    "Software Maintenance Metrics: A Case Study.",
                    "A Precise Method for Identifying Reusable Abstract Data Types in Code.",
                    "Localization of Design Concepts in Legacy Systems.",
                    "Software Salvaging Based on Conditions.",
                    "The Dark Side of Object-Oriented Software Development.",
                    "OO and Opertunities for Software Evolution.",
                    "OO in the Real World - Success or Latest Fashion ?"
                ]
            }
        ]
    },
    {
        "year": "1993",
        "name": "ICSM 1993",
        "info": "Montr\u00e9al, QC, Canada",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1993",
                "sub_name": "Proceedings of the Conference on Software Maintenance, ICSM 1993, Montr\u00e9al, Quebec, Canada, September 1993.",
                "count": 55,
                "papers": [
                    "Directions in Software Development and Maintenance.",
                    "Developing Formal Software Process Definitions.",
                    "Supporting Software Maintenance Processes in TEMPO.",
                    "Building An Integrated Software Maintenance Environment - From a Maintainer's Perspective.",
                    "A Re-Engineering Approach to Program Translation.",
                    "A Dynamic Integration Architecture for High Availability Real-Time Systems.",
                    "The Transition of Application Programs From COBOL to a Fourth Generation Language.",
                    "A Comparative Study of Predictive Models for Program Changes During System Testing and Maintenance.",
                    "Reliability of Function Points Productivity Model for Enhancement Projects (A Field Study).",
                    "Measuring and Assessing Maintainability at the End of High Level Design.",
                    "Business Reengineering and Software Maintenance.",
                    "Standards Effecting Software Maintenance.",
                    "Standards for Software Maintenance - What We Have and What We Need.",
                    "Report on the IEEE Standard for a Software Quality Memcs Methodology.",
                    "Software Maintenance Standards?",
                    "Downsizing Large Application Programs.",
                    "Multi-Valued Constant Propagation for the Reengineering of User Interfaces.",
                    "CARE: An Environment for Understanding and Re-Engineering C Programs.",
                    "Domain-Retargetable Reverse Engineering.",
                    "Documenting Programs Using a Library of Tree Structured Plans.",
                    "Abstracting the Logical Processing Life Cycle for Entities Using the RECAST Method.",
                    "Representative Sampling Within Software Quality Assurance.",
                    "Improving the Quality of Three Products Through Improved Testing: A Case Study.",
                    "Quantitative Analysis of Errors in Telecommunications Software.",
                    "Extracting Abstract Data Types from C Programs: A Case Study.",
                    "Structure-Based Clustering of Components for Software Reuse.",
                    "Reuse Reengineering and Validation via Concept Assignment.",
                    "Impact of ISO 9000 on Software Maintenance.",
                    "Impact of the ISO 9000 Standard Series.",
                    "Do Design Records Really Benefit Software Malntenance?",
                    "Using a Relational Database for Software Maintenance: A Case Study.",
                    "Specifying and Adapting Object Behavior During System Evolution.",
                    "Facilitating Software Maintenance by Automated Detection of Constraint Violations.",
                    "Designing Systems for Future Maintainability: A Case Study.",
                    "Using Dependence Analysis to Support the Software Maintenance Process.",
                    "Impact Analysis - Towards a Framework for Comparison.",
                    "The State-Based Testing of Object-Oriented Programs.",
                    "Software Maintenance Training: Transition Experiences.",
                    "Reducing the Risks in Software Improvement Through Process-Orientated Management.",
                    "Management Problems Seen in Software Maintenance: An Empowerment Study.",
                    "Test Manager: A Regression Testing Tool.",
                    "Incremental Regression Testing.",
                    "A Safe, Efficient Algorithm for Regression Test Selection.",
                    "Maintenance Productivity and Quality Studies: Industry Feedback on Benchmarking.",
                    "Validation Process for Industry Benchmarking Data.",
                    "Software Maintenance Metrics: A Changing Attitude.",
                    "Integration of Maintenance Metrics.",
                    "Dynamic Program Dicing.",
                    "Interprocedural Dynamic Slicing Applied to Interprocedural Data How Testing.",
                    "Function Recovery Based on Program Slicing.",
                    "Ten Years of Software Maintenance: Progress or Promises?",
                    "Reflections on Software Maintenance Progress 1983 - 1993.",
                    "Behind and Ahead - A Decade's Perspective: A Panel Position Statement.",
                    "Software Maintenance: A Practitioner's View of Changes Since 1983.",
                    "Ten Years of Software Maintenance: Progress or Promises?"
                ]
            }
        ]
    },
    {
        "year": "1992",
        "name": "ICSM 1992",
        "info": "Orlando, FL, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1992",
                "sub_name": "Proceedings of the Conference on Software Maintenance, ICSM 1992, Orlando, FL, USA, 9-12 November, 1992.",
                "count": 47,
                "papers": [
                    "Software measurement for the space shuttle HAL/S maintenance environment.",
                    "Reliability models and metrics for space shuttle maintenance position statement.",
                    "Maintaining the software process.",
                    "Delphi study of software maintenance problems.",
                    "Software maintenance: an analysis of industrial needs and constraints.",
                    "Current state of software maintenance in Japan: in depth view.",
                    "Reverse engineering: resolving conflicts between expected and actual software designs.",
                    "Using semantic differencing to reduce the cost of regression testing.",
                    "Incorporating the inspection process into a software maintenance organization.",
                    "Romancing the quantitative maintenance management.",
                    "Software lifetime and its evolution process over generations.",
                    "Cost benefit analysis and the art of software maintenance.",
                    "Paradigms for maintenance.",
                    "A study of portability problems and evaluation.",
                    "A framework for dynamic evolution of object-oriented specifications.",
                    "Migration of procedurally oriented COBOL programs in an object-oriented architecture.",
                    "A task-based approach to improving the software maintenance process.",
                    "A process model for the maintenance of large space systems software.",
                    "Tailoring the software engineering Institute's (SEI) Capability Maturity Model (CMM) to a software sustaining engineering organization.",
                    "A transformation system for maintenance-turning theory into practice.",
                    "Eliminating non-traversable paths from structured programs.",
                    "Software restructuring by enforcing localization and information hiding.",
                    "Developing a model to manage the software maintenance process.",
                    "COMFORM-a software maintenance method based on the software configuration management discipline.",
                    "A redefined software life cycle model for improved maintenance.",
                    "Locating user functionality in old code.",
                    "A quick tools strategy for program analysis and software maintenance.",
                    "Problem domain, structural and logical abstractions in reverse engineering.",
                    "A conceptual foundation for software re-engineering.",
                    "Evaluating the Surgeon's Assistant: results of a pilot study.",
                    "A framework for process maintenance [software].",
                    "Maturity of maintenance [software].",
                    "A firewall concept for both control-flow and data-flow in regression integration testing.",
                    "Data flow testing of parallelized code.",
                    "Identification of program modifications and its applications in software maintenance.",
                    "Software transition: experience and lessons learned.",
                    "An approach to regression testing using slicing.",
                    "Traceability based on design decisions.",
                    "An outline for a software maintenance course.",
                    "Can software maintenance be taught?",
                    "The benefits of maintenance exercises in project-based courses in software engineering.",
                    "A classification procedure for the effective management of changes during the maintenance process.",
                    "Metrics for assessing a software system's maintainability.",
                    "Effects of software changes on module cohesion.",
                    "Program dependence analysis.",
                    "Data flow diagrams: reverse engineering production and animation.",
                    "Improved maintenance support by multi-version visualizations."
                ]
            }
        ]
    },
    {
        "year": "1991",
        "name": "ICSM 1991",
        "info": "Sorrento, Italy",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1991",
                "sub_name": "Proceedings of the Conference on Software Maintenance, ICSM 1991, Sorrento, Italy, 15-17 October 1991.",
                "count": 30,
                "papers": [
                    "MACS: maintenance assistance capability for software-a KADME.",
                    "The supporting environment for a reverse engineering system-the Maintainer's Assistant.",
                    "An environment for the reengineering of Pascal programs.",
                    "Improved change tracking for software maintenance.",
                    "A process model for decision based software development.",
                    "An empirical study of software maintenance.",
                    "Bank application reengineering and conversion at the Union Bank of Switzerland.",
                    "Concept recognition-based program transformation.",
                    "A logic based approach to reverse engineering tools production.",
                    "Program lifetime: a vital statistic for maintenance.",
                    "Analysis of maintenance work categories through measurement.",
                    "On the impact of metric's application in a large scale software maintenance environment.",
                    "The application of deductive databases to inter-module code analysis.",
                    "An integrated program representation and toolkit for the maintenance of C programs.",
                    "A unified interprocedural program representation for a maintenance environment.",
                    "Objects revisited.",
                    "Maintenance support for object oriented programs.",
                    "Support for maintaining object-oriented programs.",
                    "Program slicing for C-the problems in implementation.",
                    "Dynamic program slicing based on dependence relations.",
                    "A cost model to compare regression test strategies.",
                    "Towards automated support for extraction of reusable components.",
                    "An analysis of incremental assistant capabilities of a software evolution expert system.",
                    "Visual editing of data structures.",
                    "Setting maintenance quality objectives and prioritizing maintenance work by using quality metrics.",
                    "Maintenance productivity factors-a case study.",
                    "Experience on the control of software maintenance in SIP.",
                    "The use of integration tools in software maintenance.",
                    "The development of a configuration control tool.",
                    "Configuration and software distribution in maintenance environments on heterogeneous platforms."
                ]
            }
        ]
    },
    {
        "year": "1990",
        "name": "ICSM 1990",
        "info": "San Diego, CA, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1990",
                "sub_name": "Proceedings of the Conference on Software Maintenance, ICSM 1990, San Diego, CA, USA, 26-29 November, 1990.",
                "count": 49,
                "papers": [
                    "SEELA: maintenance and documenting by reverse-engineering.",
                    "LOGISCOPE and the software maintenance crisis.",
                    "Basic assembler language software re-engineering workbench (BAL/SRW).",
                    "Software design and maintenance tools for Ada and C.",
                    "Advanced methods in automated software test.",
                    "Maintaining software using the TreeSoft environment.",
                    "The Analysis of Complexity Tool (ACT) with Battlemap (BAT) presentation.",
                    "SMARTsystem: a CASE development environment for existing C programs.",
                    "Data abstraction in a software re-engineering reference model.",
                    "Composing subsystem structures using (k, 2)-partite graphs.",
                    "Understanding the configurations of operational systems.",
                    "Semi-automatic bug localization in software maintenance.",
                    "Insights on improving the maintenance process through software measurement.",
                    "Potpourri module detection.",
                    "A tool for the maintenance of C++ programs.",
                    "An object-oriented integrated software analysis and maintenance.",
                    "A study of the impact of C++ on software maintenance.",
                    "Maintenance and intermodular dependencies in Pascal environment.",
                    "Improving software maintenance using system-level reverse engineering.",
                    "A study on the effect of reengineering upon software maintainability.",
                    "Non-intrusive tool for software testing and debugging: an actual industrial application example.",
                    "The maintenance challenge of 'CALS'.",
                    "Empirical software maintenance studies during the 1980s.",
                    "Software maintenance management in Tunisia: A statistical study.",
                    "An investigation into software maintenance-perception and practices.",
                    "Algorithm for graphic layout in VIFOR.",
                    "An approach to enhancing the maintainability of expert systems.",
                    "Maintenance and prototyping at the entity-relationship level: a knowledge-based support.",
                    "The use of application domain knowledge for effective software maintenance.",
                    "An SQA quality tracking methodology.",
                    "Transitioning from development to maintenance.",
                    "Software transition: a case study.",
                    "A logic database for software release engineering.",
                    "Decision-based-support-paradigm: a new method to structure source code.",
                    "Application of formal specification to software maintenance.",
                    "An introduction to the WSL program transformer.",
                    "A controlled experiment to evaluate maintainability of object-oriented software.",
                    "Identifying objects in a conventional procedural language: an example of data design recovery.",
                    "Object-oriented programming-the problems of validation.",
                    "A study of integration testing and software regression at the integration level.",
                    "A methodology for controlling the size of a test suite.",
                    "A dynamic approach of test data generation.",
                    "A framework for software maintenance metrics.",
                    "A model for estimating perfective software maintenance projects.",
                    "Designing adaptable software-parametrization of volatile properties.",
                    "pRETS: a parallel reverse-engineering tool set for the adaptation of sequential programs.",
                    "FATCAT: a tool to aid in maintaining, modifying, and enhancing Fortran codes.",
                    "Adventures in portable parallel programming: STRAND88 with embedded Fortran and C.",
                    "PAT: a retargetable parallelizing tool for Fortran."
                ]
            }
        ]
    },
    {
        "year": "1989",
        "name": "ICSM 1989",
        "info": "Miami, FL, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1989",
                "sub_name": "Proceedings of the Conference on Software Maintenance, ICSM 1989, Miami, FL, USA, 16-19 October, 1989.",
                "count": 31,
                "papers": [
                    "Tools for preventive software maintenance.",
                    "A proven methodology for effective software maintenance.",
                    "The myth of 'top-down' software development and its consequences for software maintenance.",
                    "A methodology for integrating maintainability using software metrics.",
                    "Assessing the adequacy of documentation through document quality indicators.",
                    "Establishing a measurement-based maintenance improvement program: lessons learned in the SEL.",
                    "Insights into regression testing [software testing].",
                    "Revalidation during the software maintenance phase.",
                    "An Ada based real-time closed-loop integration and regression test tool.",
                    "Process-focused models of software maintenance.",
                    "A CASE study in module testing.",
                    "Differences in types of software maintenance work: an empirical study.",
                    "Software metric classification trees help guide the maintenance of large-scale systems.",
                    "Dependency analysis tools: reusable components for software maintenance.",
                    "Using automatic program decomposition techniques in software maintenance tools.",
                    "ISMM: the incremental software maintenance manager.",
                    "The retrospective introduction of abstraction into software.",
                    "Data reengineering for application systems.",
                    "A reverse engineering methodology to reconstruct hierarchical data flow diagrams for software maintenance.",
                    "Static analysis of program source code using EDSA.",
                    "Maintenance aspects of orthogonal extensions to programming languages.",
                    "A replay mechanism for non-interference real-time software testing and debugging.",
                    "Software configuration management issues in the maintenance of Ada software systems.",
                    "Changes in change control.",
                    "Dynamically updating distributed software: supporting change in uncertain and mistrustful environments.",
                    "Controlling a maintenance effort: an exercise in software project management.",
                    "Developing maintainable systems: a full life-cycle approach.",
                    "Software change information for maintenance management.",
                    "A knowledge-based approach to the analysis of code and program design language (PDL).",
                    "Decision-based software development: design and maintenance.",
                    "The Maintainer's Assistant [software tool]."
                ]
            }
        ]
    },
    {
        "year": "1988",
        "name": "ICSM 1988",
        "info": "Scottsdale, AZ, USA",
        "venues": [
            {
                "sub_name_abbr": "conf/icsm/1988",
                "sub_name": "Proceedings of the Conference on Software Maintenance, ICSM 1988, Scottsdale, AZ, USA, 24-27 October, 1988.",
                "count": 59,
                "papers": [
                    "Production process modeling of software maintenance productivity.",
                    "Risk Assessment Methodology for Software Supportability (RAMSS).",
                    "Software process modeling at SEI.",
                    "Software maintenance life cycle.",
                    "New perspectives on software maintenance processes.",
                    "Documentation for maintenance: a hypertext design.",
                    "Rules to govern change in JSP-based systems.",
                    "An integrated software maintenance environment: bridging configuration management and quality management.",
                    "A practical software maintenance environment.",
                    "Redocumenting software systems using hypertext technology.",
                    "Partially automated in-line documentation (PAID): design and implementation of a software maintenance tool.",
                    "Documentation in a software maintenance environment.",
                    "Modeling the software maintenance process: process-focused models.",
                    "Towards a software maintenance support environment.",
                    "A user interface for an environment to support program understanding.",
                    "Visual support for programming-in-the-large.",
                    "Inverse transformation of software from code to specification.",
                    "Grammar-based program transformation.",
                    "Program maintenance by safe transformations.",
                    "Self-identifying software.",
                    "CRUISE: using interface hierarchies to support software evolution.",
                    "Software development and configuration management in the Cronus distributed operating system.",
                    "Ada and software maintenance.",
                    "DOD-STD-2167A applied to software maintenance.",
                    "LAMPS-demonstrated maintainability through application of MIL-SPEC software development techniques.",
                    "Using configured directories to solve software maintenance problems.",
                    "Application software configuration management and testing in a pharmaceutical laboratory automation environment.",
                    "Software maintenance features for library systems.",
                    "Error localization during software maintenance: generating hierarchical system descriptions from the source code alone.",
                    "Dynamic program updating in a distributed computer system.",
                    "A study of requirements change effects on incrementally delivered systems.",
                    "Designing Ada software for maintainability.",
                    "Configuration management in a heterogeneous environment.",
                    "CLEMMA: the design of a practical configuration librarian.",
                    "An advanced configuration management tool set.",
                    "Software maintenance: a profile of past empirical research.",
                    "Classifying software maintenance.",
                    "On analyzing maintenance process data at the global and the detailed levels: a case study.",
                    "A rule-based approach to the construction and evolution of business information systems.",
                    "Using program decomposition to guide modifications.",
                    "An operational approach to corrective software maintenance.",
                    "Maintaining FORTRAN software by enforcing abstract data types.",
                    "Software maintenance as an engineering discipline.",
                    "The introspection technique in maintenance metaprogramming.",
                    "SOFTM: a software maintenance expert system in Prolog.",
                    "PAT: a knowledge-based program analysis tool.",
                    "A knowledge-based system for software maintenance.",
                    "Logiscope: a tool for maintenance.",
                    "Data flow analysis and its application to software maintenance.",
                    "A lexical comparison program to simplify the maintenance of portable software.",
                    "Post-maintenance testing based on path change analysis.",
                    "An incremental approach to unit testing during maintenance.",
                    "Approaches to regression testing.",
                    "A metric of modifiability for software maintenance.",
                    "A model based on software quality factors which predicts maintainability.",
                    "An audiovisual document for software maintenance.",
                    "Applying instructional systems development to software maintenance education.",
                    "CAMOTE-computer aided module testing and design environment.",
                    "A test harness for maintaining unfamiliar software."
                ]
            }
        ]
    }
]