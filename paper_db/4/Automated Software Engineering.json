[
    {
        "name": "Automated Software Engineering",
        "year": "2022",
        "info": "Volume 29, 2022",
        "count": 34,
        "papers": [
            "DeepGuard: a framework for safeguarding autonomous driving systems from inconsistent behaviour.",
            "BOLD: an ontology-based log debugger for C programs.",
            "Synchronous development in open-source projects: A higher-level perspective.",
            "l-PEES-IMP: lightweight proxy re-encryption-based identity management protocol for enhancing privacy over multi-cloud environment.",
            "Opinion mining for app reviews: an analysis of textual representation and predictive models.",
            "Prediction of software fault-prone classes using ensemble random forest with adaptive synthetic sampling algorithm.",
            "Model checking strategy-controlled systems in rewriting logic.",
            "Faults in deep reinforcement learning programs: a taxonomy and a detection approach.",
            "On the documentation of refactoring types.",
            "RCM-extractor: an automated NLP-based approach for extracting a semi formal representation model from natural language requirements.",
            "Towards automatic detection and prioritization of pre-logging overhead: a case study of hadoop ecosystem.",
            "Towards automatic business process redesign: an NLP based approach to extract redesign suggestions.",
            "Directed Artificial Bee Colony algorithm with revamped search strategy to solve global numerical optimization problems.",
            "Intelligent online guiding network regional planning based on software-driven autonomous communication system.",
            "Source code change analysis with deep learning based programming model.",
            "Convolutional neural network for stock trading using technical indicators.",
            "Strategic real time framework for healthcare using fuzzy C-means systems.",
            "Gradient contouring and texture modelling based CAD system for improved TB classification.",
            "Intelligent software-driven immersive environment for online political guiding based on brain-computer interface and autonomous systems.",
            "Efficient deep-reinforcement learning aware resource allocation in SDN-enabled fog paradigm.",
            "Improving the prediction of continuous integration build failures using deep learning.",
            "AIDM: artificial intelligent for digital museum autonomous system with mixed reality and software-driven data collection and analysis.",
            "BPM supported model generation by contemplating key elements of information security.",
            "Towards the identification of bug entities and relations in bug reports.",
            "Identification and visualization of variability implementations in object-oriented variability-rich systems: a symmetry-based approach.",
            "Towards digitalization of requirements: generating context-sensitive user stories from diverse specifications.",
            "Leveraging structural properties of source code graphs for just-in-time bug prediction.",
            "UAV surveillance for violence detection and individual identification.",
            "A three-valued model abstraction framework for PCTL* stochastic model checking.",
            "Can we generate shellcodes via natural language? An empirical study.",
            "Towards a behavior tree-based robotic software architecture with adjoint observation schemes for robotic software development.",
            "Mathematical model of social behavior for the allocation of members in software development teams.",
            "Improving generality and accuracy of existing public development project selection methods: a study on GitHub ecosystem.",
            "A Novel Technique for Accelerating Live Migration in Cloud Computing."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2021",
        "info": "Volume 28, 2021",
        "count": 19,
        "papers": [
            "Considering dependencies between bug reports to improve bugs triage.",
            "ALBA: a model-driven framework for the automatic generation of android location-based apps.",
            "Investigation and prediction of open source software evolution using automated parameter mining for agent-based simulation.",
            "Prioritizing refactorings for security-critical code.",
            "IIAG: a data-driven and theory-inspired approach for advising how to interact with new remote collaborators in OSS teams.",
            "GUI visual aspect migration: a framework agnostic solution.",
            "A model-driven framework for developing android-based classic multiplayer 2D board games.",
            "New failure rate model for iterative software development life cycle process.",
            "ANCHOR: locating android framework-specific crashing faults.",
            "Discriminating features-based cost-sensitive approach for software defect prediction.",
            "Information security implications of using NLP in IT outsourcing: a Diffusion of Innovation theory perspective.",
            "Natural language ambiguity resolution by intelligent semantic annotation of software requirements.",
            "Predicting the Defects using Stacked Ensemble Learner with Filtered Dataset.",
            "Guided pattern mining for API misuse detection by change-based code analysis.",
            "Cloud - based multiple importance sampling algorithm with AI based CNN classifier for secure infrastructure.",
            "SSD based waste separation in smart garbage using augmented clustering NMS.",
            "Does sentiment help requirement engineering: exploring sentiments in user comments to discover informative comments.",
            "Deep learning approach for intrusion detection in IoT-multi cloud environment.",
            "The impact of the code smells of the presentation layer on the diffuseness of aesthetic defects of Android apps."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2020",
        "info": "Volume 27, 2020",
        "count": 11,
        "papers": [
            "Using multi-objective search and machine learning to infer rules constraining product configurations.",
            "RecoLibry Suite: a set of intelligent tools for the development of recommender systems.",
            "Multi-criteria test cases selection for model transformations.",
            "Automated semantics-preserving parallel decomposition of finite component and connector architectures.",
            "Algorithm selection for software validation based on graph kernels.",
            "A multi-dimensional study on the state of the practice of REST APIs usage in Android apps.",
            "Modeling user concerns in Sharing Economy: the case of food delivery apps.",
            "ConfigCrusher: towards white-box performance analysis for configurable systems.",
            "Multi-objective code reviewer recommendations: balancing expertise, availability and collaborations.",
            "Analyzing system software components using API model guided symbolic execution.",
            "Understanding machine learning software defect predictions."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2019",
        "info": "Volume 26, 2019",
        "count": 22,
        "papers": [
            "Optimizing the deployment of tree-shaped functional graphs of real-time system on distributed architectures.",
            "Exploring output-based coverage for testing PHP web applications.",
            "Efficient elicitation of software configurations using crowd preferences and domain knowledge.",
            "Cost-aware scheduling for ensuring software performance and reliability under heterogeneous workloads of hybrid cloud.",
            "Collaborative feature location in models through automatic query expansion.",
            "Fragment-based spreadsheet debugging.",
            "Automatic, highly accurate app permission recommendation.",
            "Improving web service interfaces modularity using multi-objective optimization.",
            "Editor's note.",
            "Model-driven allocation engineering: specifying and solving constraints based on the example of automotive systems.",
            "Inductive verification of data model invariants in web applications using first-order logic.",
            "Change impact analysis for maintenance and evolution of variable software systems.",
            "Region and effect inference for safe parallelism.",
            "Guest editorial: special section on artificial intelligence for requirements engineering.",
            "Requirements-driven evolution of sociotechnical systems via probabilistic reasoning and hill climbing.",
            "An NLP approach for cross-domain ambiguity detection in requirements engineering.",
            "Heterogeneous defect prediction with two-stage ensemble learning.",
            "Automatic B-model repair using model checking and machine learning.",
            "Enhance code search via reformulating queries with evolving contexts.",
            "Modeling hierarchical usage context for software exceptions based on interaction data.",
            "Precise semantic history slicing through dynamic delta refinement.",
            "How effective are existing Java API specifications for finding bugs during runtime verification?"
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2018",
        "info": "Volume 25, 2018",
        "count": 26,
        "papers": [
            "Evaluation of a traceability approach for informal freehand sketches.",
            "Guest editorial: selected areas in automated software engineering.",
            "Self-adaptive concurrent components.",
            "Automatic performance prediction of multithreaded programs: a simulation approach.",
            "Seeking the user interface.",
            "Exact search-space size for the refactoring scheduling problem.",
            "Cost-sensitive transfer kernel canonical correlation analysis for heterogeneous defect prediction.",
            "Faster discovery of faster system configurations with spectral learning.",
            "Indicators for merge conflicts in the wild: survey and empirical study.",
            "Lifting inter-app data-flow analysis to large app sets.",
            "Automatic approval prediction for software enhancement requests.",
            "Locating bugs without looking back.",
            "Tool support for assurance case development.",
            "Rule-based specification mining leveraging learning to rank.",
            "Black-box tree test case generation through diversity.",
            "Efficient QoS aware two-layer service allocation in hybrid mobile cloud.",
            "MOSAICO: offline synthesis of adaptation strategy repertoires with flexible trade-offs.",
            "Cleaning up copy-paste clones with interactive merging.",
            "FastTagRec: fast tag recommendation for software information sites.",
            "DCTracVis: a system retrieving and visualizing traceability links between source code and documentation.",
            "Guest editorial: advanced topics in automated software engineering.",
            "Inferring visual contracts from Java programs.",
            "Synthesis of probabilistic models for quality-of-service software engineering.",
            "Static window transition graphs for Android.",
            "Developing and evolving a DSL-based approach for runtime monitoring of systems of systems.",
            "How verified (or tested) is my code? Falsification-driven verification and testing."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2017",
        "info": "Volume 24, 2017",
        "count": 28,
        "papers": [
            "MaramaAIC: tool support for consistency management and validation of requirements.",
            "Label propagation based semi-supervised learning for software defect prediction.",
            "Guest Editorial: Automation in Software Performance Engineering.",
            "A Petri net tool for software performance estimation based on upper throughput bounds.",
            "Automated QoS-oriented cloud resource optimization using containers.",
            "Unit testing performance with Stochastic Performance Logic.",
            "Continuous validation of performance test workloads.",
            "A survey on search-based model-driven engineering.",
            "An approach to translating OCL invariants into OWL 2 DL axioms for checking inconsistency.",
            "Fault localization using itemset mining under constraints.",
            "Test oracles for simulink-like models.",
            "Understanding the value of considering client usage context in package cohesion for fault-proneness prediction.",
            "An effective change recommendation approach for supplementary bug fixes.",
            "Which models of the past are relevant to the present? A software effort estimation approach to exploiting useful past models.",
            "Reconstructing and evolving software architectures using a coordinated clustering framework.",
            "A guest editorial: special issue on search based software engineering and data mining.",
            "Meta-learning based selection of software reliability models.",
            "Analysing the fitness landscape of search-based software testing problems.",
            "An Architecture based on interactive optimization and machine learning applied to the next release problem.",
            "An exploratory study for software change prediction in object-oriented systems using hybridized techniques.",
            "Incremental test data generation for database queries.",
            "Automated refactoring of legacy Java software to enumerated types.",
            "Guest editorial: special issue on realising artificial intelligence synergies in software engineering.",
            "From requirements to source code: a Model-Driven Engineering approach for RESTful web services.",
            "NLCI: a natural language command interpreter.",
            "Guest editorial: emerging areas in automated software engineering research.",
            "Lightweight control-flow instrumentation and postmortem analysis in support of debugging.",
            "Experience report on applying software analytics in incident management of online service."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2016",
        "info": "Volume 23, 2016",
        "count": 24,
        "papers": [
            "Editorial introduction.",
            "Ahead of time static analysis for automatic generation of debugging interfaces to the Linux kernel.",
            "Diversity maximization speedup for localizing faults in single-fault and multi-fault programs.",
            "Differential precondition checking: a language-independent, reusable analysis for refactoring engines.",
            "Model-based diagnosis of spreadsheet programs: a constraint-based debugging approach.",
            "Editorial Introduction.",
            "Semantic tagging and linking of software engineering social content.",
            "Verifying floating-point programs with constraint programming and abstract interpretation techniques.",
            "Assisting requirements analysts to find latent concerns with REAssistant.",
            "Assessment and cross-product prediction of software product line quality: accounting for reuse across products, over multiple releases.",
            "Editorial introduction.",
            "Practical verification of decision-making in agent-based autonomous systems.",
            "Model inference for spreadsheets.",
            "AutoQuery: automatic construction of dependency queries for code search.",
            "Preserving architectural decisions through architectural patterns.",
            "Test data generation for path coverage of message-passing parallel programs based on co-evolutionary genetic algorithms.",
            "An approach to prioritize code smells for refactoring.",
            "Editorial introduction.",
            "Automatic query rewriting schemes for multitenant SaaS applications.",
            "Multiple kernel ensemble learning for software defect prediction.",
            "Detecting plagiarized mobile apps using API birthmarks.",
            "Identifying and understanding header file hotspots in C/C++ build processes.",
            "Concept extraction from business documents for software engineering projects.",
            "Reasoning about product-line evolution using complex feature model differences."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2015",
        "info": "Volume 22, 2015",
        "count": 20,
        "papers": [
            "Guest editorial: special issue on realizing AI synergies in software engineering.",
            "AutoODC: Automated generation of orthogonal defect classifications.",
            "On the empirical evaluation of similarity coefficients for spreadsheets fault localization.",
            "Automatic, high accuracy prediction of reopened bugs.",
            "SMPLearner: learning to predict software maintainability.",
            "Guest editorial: special issue on realizing AI synergies in software engineering (part 2).",
            "An experiment in ontology use for command and control interoperability.",
            "Building high assurance human-centric decision systems.",
            "Designing automotive embedded systems with adaptive genetic algorithms.",
            "A semantic web enabled approach to reuse functional requirements models in web engineering.",
            "Guest editorial: special multi-issue on selected topics in Automated Software Engineering.",
            "Monitoring energy hotspots in software - Energy profiling of software code.",
            "User-aware privacy control via extended static-information-flow analysis.",
            "Balancing precision and performance in structured merge.",
            "A model-driven framework for guided design space exploration.",
            "Guest editorial: special multi-issue on selected topics in automated software engineering.",
            "Program-input generation for testing database applications using existing database states.",
            "Unfolding based automated testing of multithreaded programs.",
            "Scalable and scope-bounded software verification in Varvel.",
            "To what extent could we detect field defects? An extended empirical study of false negatives in static bug-finding tools."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2014",
        "info": "Volume 21, 2014",
        "count": 20,
        "papers": [
            "Editorial: ASE 2013 Conference Trip Report.",
            "Exploring optimization and caching for efficient collection operations.",
            "A method for evaluation of learning components.",
            "GUITAR: an innovative tool for automated testing of GUI-driven software.",
            "Behind the scenes in SANTE: a combination of static and dynamic analyses.",
            "Editorial introduction.",
            "Model-driven reverse engineering of legacy graphical user interfaces.",
            "Adaptable, model-driven security engineering for SaaS cloud-based applications.",
            "Counterexample-guided abstraction refinement for linear programs with arrays.",
            "DConfusion: a technique to allow cross study performance evaluation of fault prediction studies.",
            "Guest editorial: automated techniques for migrating to the Cloud (I).",
            "Exploiting ensemble techniques for automatic virtual machine clustering in cloud systems.",
            "Cloud refactoring: automated transitioning to cloud-based services.",
            "Data error locations reported by public auditing in cloud storage service.",
            "MobiCloUP!: a PaaS for cloud services-based mobile applications.",
            "Guest editorial: automated techniques for migrating to the cloud (II).",
            "Multicast and customized deployment of large-scale operating systems.",
            "SFDCloud: top-k service faults diagnosis in cloud computing.",
            "JackHare: a framework for SQL to NoSQL translation using MapReduce.",
            "Graph database benchmarking on cloud environments with XGDBench."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2013",
        "info": "Volume 20, 2013",
        "count": 20,
        "papers": [
            "Editorial: ASE 2012 conference trip report.",
            "Automated verification of model transformations based on visual contracts.",
            "Maintainability defects detection and correction: a multi-objective approach.",
            "Identification of generalization refactoring opportunities.",
            "EA-Analyzer: automating conflict detection in a large set of textual aspect-oriented requirements.",
            "Guest editors introduction: special issue on innovative automated software engineering tools.",
            "A tool environment for quality assurance based on the Eclipse Modeling Framework.",
            "Design and evaluation of the ModelHealth toolchain for continuity of care web services.",
            "Automated verification of code automatically generated from Simulink\u00ae.",
            "C2O configurator: a tool for guided decision-making.",
            "Guest editors introduction: special issue on innovative automated software engineering tools - part #2.",
            "Experiences using Tedeso: an extensible and interoperable model-based testing platform.",
            "mbeddr: instantiating a language workbench in the embedded software domain.",
            "Symbolic PathFinder: integrating symbolic execution with model checking for Java bytecode analysis.",
            "Supporting model-driven development using a process-centered software engineering environment.",
            "A framework for semi-automated software evolution analysis composition.",
            "Editorial introduction.",
            "The WTE+ framework: automated construction and runtime adaptation of service mashups.",
            "Finding conclusion stability for selecting the best effort predictor in software effort estimation.",
            "Verification of complex dynamic data tree with mu-calculus."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2012",
        "info": "Volume 19, 2012",
        "count": 18,
        "papers": [
            "Editorial: ASE 2011 conference trip report.",
            "Model checking agent programming languages.",
            "Prioritizing test cases with string distances.",
            "Refactoring techniques for aggressive object inlining in Java applications.",
            "Guest editorial: learning to organize testing.",
            "Applying the Mahalanobis-Taguchi strategy for software defect diagnosis.",
            "An investigation on the feasibility of cross-project defect prediction.",
            "Sample-based software defect prediction with active and semi-supervised learning.",
            "Editorial: analysis in software engineering.",
            "Efficient and formal generalized symbolic execution.",
            "Artificial neural networks as multi-networks automated test oracle.",
            "Decision support for the software product line domain engineering lifecycle.",
            "Editorial: selected topics in ASE.",
            "The design and evaluation of a tool to support software designers at the whiteboard.",
            "Scenario-based and value-based specification mining: better together.",
            "Vdiff: a program differencing algorithm for Verilog hardware description language.",
            "JRF-E: using model checking to give advice on eliminating memory model-related bugs.",
            "StrSolve: solving string constraints lazily."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2011",
        "info": "Volume 18, 2011",
        "count": 14,
        "papers": [
            "Editorial: ASE 2010 Conference trip report.",
            "A model-based approach for multiple QoS in\u00a0scheduling: from models to implementation.",
            "Compositional model checking of software product lines using variation point obligations.",
            "The DOPLER meta-tool for decision-oriented variability modeling: a multiple case study.",
            "Editorial: Controlling change.",
            "A monitoring approach for runtime service discovery.",
            "Flexible feature binding in software product lines.",
            "Example-based model-transformation testing.",
            "Guest editorial: special issue on selected topics in automated software engineering - Specification mining and defect detection.",
            "Inferring specifications for resources from natural language API documentation.",
            "Mining temporal specifications from object usage.",
            "Alattin: mining alternative patterns for defect detection.",
            "Symbolic modular deadlock analysis.",
            "Code completion of multiple keywords from abbreviated input."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2010",
        "info": "Volume 17, 2010",
        "count": 18,
        "papers": [
            "Editorial: ASE 2009 conference trip report.",
            "Test input reduction for result inspection to facilitate fault localization.",
            "Estimating the feasibility of transition paths in extended finite state machines.",
            "Operational definition and automated inference of test-driven development with Zorro.",
            "Finding robust solutions in requirements models.",
            "Guest Editorial.",
            "Generic patch inference.",
            "Efficient monitoring of parametric context-free patterns.",
            "Improving code completion with program history.",
            "Editorial: software defect detection.",
            "Generating a checking sequence with a minimum number of reset transitions.",
            "Type safety for feature-oriented product lines.",
            "SUDS: an infrastructure for creating dynamic software defect detection tools.",
            "AFID: an automated approach to collecting software faults.",
            "Editorial: data mining in software engineering.",
            "Defect prediction from static code features: current results, limitations, new approaches.",
            "Stable rankings for different effort models.",
            "Automatically finding the control variables for complex system behavior."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2009",
        "info": "Volume 16, 2009",
        "count": 17,
        "papers": [
            "Guest editors' introduction.",
            "Monitoring and diagnosing software requirements.",
            "Keyword programming in Java.",
            "Scalable satisfiability checking and test data generation from modeling diagrams.",
            "Fast extraction of high-quality framework-specific models from application code.",
            "Parameter reference immutability: formal definition, inference tool, and comparison.",
            "Editorial for Special Issue of JASE on Source Code Analysis and Manipulation.",
            "Precise slicing of concurrent programs.",
            "Trading-off security and performance in barrier slicing for remote software entrusting.",
            "On temporal path conditions in dependence graphs.",
            "Demand-driven evaluation of collection attributes.",
            "An integrated crosscutting concern migration strategy and its semi-automated application to JHotDraw.",
            "Improving static resolution of dynamic class loading in Java using dynamically gathered environment information.",
            "A first editorial.",
            "From UML/SPT models to schedulability analysis: approach and a prototype implementation using ATL.",
            "A semantic framework for metamodel-based languages.",
            "Automated software license analysis."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2008",
        "info": "Volume 15, 2008",
        "count": 20,
        "papers": [
            "Guest Editors' Introduction.",
            "A portable compiler-integrated approach to permanent checking.",
            "Differencing and merging of architectural views.",
            "Continuous and automated evolution of architecture-to-implementation traceability links.",
            "Desert Island Column.",
            "A method and tools for large scale scenarios.",
            "Requirements model generation to support requirements elicitation: the Secure Tropos experience.",
            "Deriving event-based transition systems from goal-oriented requirements models.",
            "On similarity-awareness in testing-based fault localization.",
            "Desert Island Column.",
            "A final editorial.",
            "What is software?",
            "Automated software engineering: supporting understanding.",
            "Model driven code checking.",
            "Reasoning about programs via operational semantics: requirements for a support system.",
            "A journey to highly dynamic, self-adaptive service-based applications.",
            "The socio-economics of software architecture.",
            "Rethinking software design in participation cultures.",
            "Personal reflections on automation, programming culture, and model-based software engineering.",
            "Desert Island Column."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2007",
        "info": "Volume 14, 2007",
        "count": 18,
        "papers": [
            "Introduction.",
            "JDiff: A differencing technique and tool for object-oriented programs.",
            "On the effect of test-suite reduction on automatically generated model-based tests.",
            "The design and implementation of a dataflow language for scriptable debugging.",
            "Inferring specifications to detect errors in code.",
            "Dessert Island.",
            "Special issue on selected papers from the 20th International Conference on Automated Software Engineering (ASE'2005).",
            "Eliminating synchronization faults in air traffic control software via design for verification with concurrency controllers.",
            "Composition inference for UML class diagrams.",
            "Differencing logical UML models.",
            "A framework for supporting dynamic systems co-evolution.",
            "Graphical scenarios for specifying temporal properties: an automated approach.",
            "Computer-aided Support for Secure Tropos.",
            "Column for the Automated Software Engineering Journal.",
            "JWalk: a tool for lazy, systematic testing of java classes by design introspection and user interaction.",
            "Lazy buffer semantics for partial order scenarios.",
            "How knowledge representation meets software engineering (and often databases).",
            "Desert island column."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2006",
        "info": "Volume 13, 2006",
        "count": 18,
        "papers": [
            "Automated Prototyping of User Interfaces Based on UML Scenarios.",
            "Integrating COTS Software into Systems through Instrumentation and Reasoning.",
            "Combining Proof Plans with Partial Order Planning for Imperative Program Synthesis.",
            "On the Systematic Analysis of Natural Language Requirements with C.",
            "PLFaultCAT: A Product-Line Software Fault Tree Analysis Tool.",
            "Introduction.",
            "Real-life IT architecture design reports and their relation to IEEE Std 1471 stakeholders and concerns.",
            "Using software evolution to focus architectural recovery.",
            "Runtime recovery and manipulation of software architecture of component-based systems.",
            "Separating sequence overlap for automated test sequence generation.",
            "Automated user interface engineering with a pattern reflecting programming language.",
            "Guest Editors' Introduction.",
            "Tool-assisted unit-test generation and selection based on operational abstractions.",
            "A family of experiments to investigate the effects of groupware for software inspection.",
            "Specification and synthesis of hybrid automata for physics-based animation.",
            "Explicit modeling of semantics associated with composite states in UML statecharts.",
            "An integrated framework for the analysis of dependable interactive systems (IFADIS): Its tool support and evaluation.",
            "A formal approach based on UML and B for the specification and development of database applications."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2005",
        "info": "Volume 12, 2005",
        "count": 18,
        "papers": [
            "SoftArch/MTE: Generating Distributed System Test-Beds from High-Level Software Architecture Descriptions.",
            "Fundamental Nonmodularity in Electronic Mail.",
            "A Termination Detection Protocol for Use in Mobile Ad Hoc Networks.",
            "Developing Ambient Intelligence Systems: A Solution based on Web Services.",
            "Desert Island Column.",
            "Rewriting-Based Techniques for Runtime Verification.",
            "Reuse-Conducive Development Environments.",
            "Interactive and Probabilistic Proof of Mobile Code Safety.",
            "Web Application Slicing in Presence of Dynamic Code Generation.",
            "Introduction.",
            "Component Verification with Automatically Generated Assumptions.",
            "Deviation Analysis: A New Use of Model Checking.",
            "Modular Verification of Open Features Using Three-Valued Model Checking.",
            "Desert Island Reading: Back to the Future.",
            "Introduction.",
            "Automated Procedure Construction for Deductive Synthesis.",
            "Aspect-Capable Call Path Profiling of Multi-Threaded Java Applications.",
            "Tool-Supported Verification of Product Line Requirements."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2004",
        "info": "Volume 11, 2004",
        "count": 19,
        "papers": [
            "Introduction.",
            "Precise Call Graphs for C Programs with Function Pointers.",
            "Syntax-Directed Amorphous Slicing.",
            "Granularity-Driven Dynamic Predicate Slicing Algorithms for Message Passing Systems.",
            "Desert Island Column.",
            "Introduction.",
            "Inductively Verifying Invariant Properties of Parameterized Systems.",
            "Strategy for Verifying Security Protocols with Unbounded Message Size.",
            "Verifying Service Continuity in a Dynamic Reconfiguration Procedure: Application to a Satellite System.",
            "Desert Island Reading Assignment.",
            "Introduction to Special Issue on Distributed and Mobile Software Engineering.",
            "CODEWEAVE: Exploring Fine-Grained Mobility of Code.",
            "Formulae Meet Programs Over the Net: A Framework for Correct Network Aware Programming.",
            "Model Checking for Combined Logics with an Application to Mobile Systems.",
            "Desert Island Column: Saving Software Engineering.",
            "Guest Editors' Introduction.",
            "Automatically Restructuring Programs for the Web.",
            "Cluster-Based Partial-Order Reduction.",
            "TestEra: Specification-Based Testing of Java Programs Using SAT."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2003",
        "info": "Volume 10, 2003",
        "count": 19,
        "papers": [
            "Guest Editorial: XML and Software Engineering.",
            "Small-Scale XMI Programming: A Revolution in UML Tool Use?",
            "Automatic Construction of XML-Based Tools Seen as Meta-Programming.",
            "Dynamic Query-Based Debugging of Object-Oriented Programs.",
            "Relative Debugging of Automatically Parallelized Programs.",
            "Some Reading for ASE Island.",
            "Guest Editorial: ASE 2000 Special Issue.",
            "A Supermodel Framework Supporting Validated Upgrading of Reactive Systems.",
            "CM-Builder: A Natural Language-Based CASE Tool for Object-Oriented Analysis.",
            "Renaming Detection.",
            "Model Checking Programs.",
            "Desert Island: Software Engineering - A Human Activity.",
            "Predicate Synthesis for Correcting Faulty Conjectures: The Proof Planning Paradigm.",
            "User Interface Reverse Engineering in Support of Interface Migration to the Web.",
            "Desert Island.",
            "Agile Parsing in TXL.",
            "ADK: An Agent Development Kit Based on a Formal Design Model for Multi-Agent Systems.",
            "Automated Synthesis of Numerical Programs for Simulation of Rigid Mechanical Systems in Physics-Based Animation.",
            "Desert Island Column."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2002",
        "info": "Volume 9, 2002",
        "count": 20,
        "papers": [
            "Introduction.",
            "Extension Language Automation of Embedded System Debugging.",
            "Static and Dynamic Slicing of Constraint Logic Programs.",
            "Kima: An Automated Error Correction System for Concurrent Logic Programs.",
            "Non-Intrusive Detection of Synchronization Errors Using Execution Replay.",
            "Desert Island Column.",
            "Guest Editorial: Software Engineering for Mobility.",
            "Mark, a Reasoning Kit for Mobility.",
            "XMILE: An XML Based Approach for Incremental Code Mobility and Update.",
            "The FUSE Platform: Supporting Ubiquitous Collaboration Within Diverse Mobile Environments.",
            "Being Logical About Desert Island Reading.",
            "Guest Editor's Introduction.",
            "Proving Invariants of I/O Automata with TAME.",
            "Specification, Validation, and Synthesis of Email Agent Controllers: A Case Study in Function Rich Reactive System Design.",
            "Creating High Confidence in a Separation Kernel.",
            "The DSD Schema Language.",
            "Desert Island Books.",
            "On the Automatic Recovery of Style-Specific Architectural Relations in Software Systems.",
            "Enterprise Modeling and Decision-Support for Automating the Business Rules Lifecycle.",
            "Desert Island Reading: A Software Engineering Perspective."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2001",
        "info": "Volume 8, 2001",
        "count": 14,
        "papers": [
            "Guest Editorial.",
            "Industrial Applications of Software Synthesis via Category Theory-Case Studies Using Specware.",
            "Automatic Generation of Test Oracles-From Pilot Studies to Application.",
            "Modeling Architecture Description Languages Using AML.",
            "Evolving Object-Oriented Designs with Refactorings.",
            "Software Engineering Books for Desert Island Reading.",
            "Inductive Programming.",
            "Predictive Software.",
            "Logic Program Synthesis as Problem Reduction Using Combining Forms.",
            "The Automated Refinement of a Requirements Domain Theory.",
            "Automatic Real-Time Analysis of Reactive Systems with the PARTS Toolset.",
            "Model Checking Interactor Specifications.",
            "An Approach for Recovering Distributed System Architectures.",
            "Eight Desert Island Books."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "2000",
        "info": "Volume 7, 2000",
        "count": 19,
        "papers": [
            "Editorial.",
            "Automated Software Engineering: Special Issue on Precise Semantics for Software Modeling Techniques (PSMT - an ICSE'98 Workshop).",
            "Logic of Change: Semantics of Object Systems with Active Relations.",
            "Automating Support for Software Evolution in UML.",
            "A Formal Model for SDL Specifications Based on Timed Rewriting Logic.",
            "Three Books for a Desert Island.",
            "Introduction to Special Issue.",
            "The Model-Composition Problem in User-Interface Generation.",
            "A Case Study on Applying a Tool for Automated System Analysis Based on Modular Specifications Written in TRIO.",
            "Explanation-Based Scenario Generation for Reactive System Models.",
            "Specification-Based Browsing of Software Component Libraries.",
            "Desert Island Column: Marooned on Mars: Mind-Spinning Books for Software Engineers.",
            "Behavioural Conflicts in a Causal Specification.",
            "Identifying Objects in Procedural Programs Using Clustering Neural Networks.",
            "Planning Proofs of Equations in CCS.",
            "Desert Island Column.",
            "Executing Formal Specifications with Concurrent Constraint Programming.",
            "Specifying and Automatically Generating a Specialization Tool for Fortran 90.",
            "Desert Island Column: A Trip to Carthea."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "1999",
        "info": "Volume 6, 1999",
        "count": 20,
        "papers": [
            "Guest Editorial.",
            "Behaviour Analysis of Distributed Systems Using the Tracta Approach.",
            "Model Checking Complete Requirements Specifications Using Abstraction.",
            "Refining Model Checking by Abstract Interpretation.",
            "Playing Detective: Reconstructing Software Architecture from Available Evidence.",
            "Efficient Specification-Based Component Retrieval.",
            "Overlaps in Requirements Engineering.",
            "Desert Island Column: The Long Story of a Short Theorem.",
            "Guest Editorial.",
            "Formal Specifications of User Requirements.",
            "A System for Generating Reverse Engineering Tools: A Case Study of Software Modularisation.",
            "Mapping Procedural Patterns to Object-Oriented Design Patterns.",
            "A Comparison of Computer Support Systems for Software Inspection.",
            "Desert Island Column.",
            "Guest Editorial.",
            "Automatic Synthesis of Recursive Programs: The Proof-Planning Paradigm.",
            "A Metric-Based Approach to Detect Abstract Data Types and State Encapsulations.",
            "A Concept Formation Based Approach to Object Identification in Procedural Code.",
            "Efficient Implementations of Software Architectures via Partial Evaluation.",
            "Desert Island Column: The Books Don't Work."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "1998",
        "info": "Volume 5, 1998",
        "count": 21,
        "papers": [
            "Special Issue on Process Technology.",
            "Process Management in Practice Applying the FUNSOFT Net Approach to Large-Scale Processes.",
            "Serendipity: Integrated Environment Support for Process Modelling, Enactment and Work Coordination.",
            "Apel: A Graphical Yet Executable Formalism for Process Modeling.",
            "Federating Process-Centered Environments: The Oz Experience.",
            "A Guide to Rearing Perfect Software: A Desert Island Column.",
            "Program Understanding as Constraint Satisfaction: Representation and Reasoning Techniques.",
            "Lightweight Formalisation in Support of Requirements Engineering.",
            "A Rule-Based Approach to Developing Software Development Prediction Models.",
            "Desert Island Column.",
            "Editorial.",
            "Extending Design Environments to Software Architecture Design.",
            "Deductive Synthesis of Numerical Simulation Programs from Networks of Algebraic and Ordinary Differential Equations.",
            "Transformations to Restructure and Re-engineer COBOL Programs.",
            "Applying Plan Recognition Algorithms To Program Understanding.",
            "Desert Island Reading.",
            "Guest Editors' Introduction.",
            "Developing Knowledge-Based Systems with MIKE.",
            "CREWS-SAVRE: Scenarios for Acquiring and Validating Requirements.",
            "Seeding, Evolutionary Growth and Reseeding: Constructing, Capturing and Evolving Knowledge in Domain-Oriented Design Environments.",
            "Desert Island Column."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "1997",
        "info": "Volume 4, 1997",
        "count": 25,
        "papers": [
            "Introduction.",
            "Searching for a Global Search Algorithm.",
            "Specification and Animation of a Bank Transfer using KIDS/VDM.",
            "Interactive Explanation of Software Systems.",
            "Test Case Generation as an AI Planning Problem.",
            "Desert Island Column.",
            "Introduction.",
            "The Evaluation Dependence Tree as a Basis for Lazy Functional Debugging.",
            "Algorithmic Debugging and Hypothetical Reasoning.",
            "High-Level Views of Distributed Executions: Convex Abstract Events.",
            "META-AMPHION: Synthesis of Efficient Domain-Specific Program Synthesis Systems.",
            "Desert Island Column.",
            "Artificial Intelligence and Software Engineering: Breaking the Toy Mold.",
            "Toward A Constraint-Satisfaction Framework for Evaluating Program-Understanding Algorithms.",
            "Representing Software Engineering Knowledge.",
            "Case-Based Knowledge Management Tools for Software Development.",
            "Applying AI to Software Renovation.",
            "Desert Island Column: Neglected Masterpieces.",
            "AbstFinder, A Prototype Natural Language Text Abstraction Finder for Use in Requirements Elicitation.",
            "Commentary on AbstFinder: A Prototype Natural Language Text Abstraction Finder for Use in Requirements Elicitation.",
            "Commentary on AbstFinder: A Prototype Natural Language Test Abstraction Finder for Use in Requirements Elicitation.",
            "Reply to Commentaries.",
            "Requirements and Specification Exemplars.",
            "Automatic Problem Description from Model Program for Knowledge-based Programming Tutor.",
            "Desert Island Column."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "1996",
        "info": "Volume 3, 1996",
        "count": 14,
        "papers": [
            "Database Reverse Engineering: From Requirements to CARE Tools.",
            "Understanding Interleaved Code.",
            "Pattern Matching for Clone and Concept Detection.",
            "Extracting Architectural Features from Source Code.",
            "Strongest Postcondition Semantics as the Formal Basis for Reverse Engineering.",
            "Recent Trends and Open Issues in Reverse Engineering.",
            "Automating the Software Inspection Process.",
            "Design by Framework Completion.",
            "Building an Organization-Specific Infrastructure to Support CASE Tools.",
            "A CASE Tool for Software Architecture Design.",
            "A Knowledge-Based Software Engineering Environment for Reusable Software Requirements and Architectures.",
            "Enveloping Sophisticated Tools into Process-Centered Environments.",
            "Use of Methods and CASE-Tools in Norway: Results from a Survey.",
            "A Debugging and Testing Tool for Supporting Software Evolution."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "1995",
        "info": "Volume 2, 1995",
        "count": 17,
        "papers": [
            "Contextual Local Analysis in the Design of Distributed Systems.",
            "Automatic Extraction of Executable Program Subsets by Simultaneous Dynamic Program Slicing.",
            "On the Reuse of Software: A Case-Based Approach Employing a Repository.",
            "Workshop Report: The Two-Day Workshop on Research Issues in the Intersection between Software Engineering and Artificial Intelligence (Held in conjunction with ICSE-16).",
            "Inductive Specification Recovery: Understanding Software by Learning from Example Behaviors.",
            "Systematic Incremental Validation of Reactive Systems via Sound Scenario Generalization.",
            "Process Specification Generation from Communications Service Specifications.",
            "Critical Success Factors for Knowledge-Based Software Engineering Applications.",
            "User Interface Design Assistance For Large-Scale Software Development.",
            "Knowledge-Based Risk Assessment and Cost Estimation.",
            "Automated Method for Identifying and Prioritizing Project Risk Factors.",
            "Report on the Second IEEE International Symposium on Requirements Engineering (RE '95), York, UK, 27-29 March 1995.",
            "Desert Island Column.",
            "A Specification-Based Approach to Concurrency Analysis.",
            "Integrating Specifications: A Similarity Reasoning Approach.",
            "Requirements Engineering: An Educational Dilemma.",
            "Desert Island Column."
        ]
    },
    {
        "name": "Automated Software Engineering",
        "year": "1994",
        "info": "Volume 1, 1994",
        "count": 20,
        "papers": [
            "Introduction.",
            "Introduction to the special issue on knowledge based software engineering.",
            "Efficiently computing derived performance data.",
            "Towards a derivational style of distributed system design - An example.",
            "Automated program understanding by concept recognition.",
            "A knowledge-based prototyping environment for construction of scientific modeling software.",
            "Report on the first international IEEE symposium on requirements engineering (RE93) San Diego, January 4-6, 1993.",
            "Report on the First Working Conference on Reverse Engineering, May 21-23, 1993, Baltimore, Maryland, in conjunction with the International Conference on Software Engineering.",
            "Desert Island column.",
            "Using simulated annealing to synthesize resource-bounded software.",
            "Domain-oriented design environments.",
            "Commentary on 'Domain oriented design environments' by Gerhard Fischer.",
            "Birds of a feather: The DODE and domain-specific software synthesis systems.",
            "Developing domain-oriented design environments - The question ishow, notwhy.",
            "Commentary on \"Domain-oriented design environments\" by Gerhard Fischer.",
            "Domain-oriented design environments: Reply to commentaries.",
            "Software synthesis using generic architectures.",
            "A knowledge-based framework for automated software synthesis.",
            "Using classes as specifications for automatic construction of programs in the NUT system.",
            "The Eighth Annual Knowledge-Based Software Engineering Conference."
        ]
    }
]