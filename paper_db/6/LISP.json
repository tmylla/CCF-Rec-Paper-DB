[
    {
        "name": "LISP",
        "year": "2013",
        "info": "Volume 26, 2013",
        "count": 4,
        "papers": [
            "Editorial TFP 2009/2010.",
            "Graph-based communication in Eden.",
            "Graphical and incremental type inference. A graph transformation approach.",
            "On graph rewriting, reduction, and evaluation in the presence of cycles."
        ]
    },
    {
        "name": "LISP",
        "year": "2012",
        "info": "Volume 25, 2012",
        "count": 9,
        "papers": [
            "Editorial PEPM2012.",
            "Polynomial-time inverse computation for accumulative functions with multiple data traversals.",
            "Functional programs as compressed data.",
            "The interaction of contracts and laziness.",
            "An approach to completing variable names for implicitly typed functional languages.",
            "Scala-Virtualized: linguistic reuse for deep embeddings.",
            "The Racket virtual machine and randomized testing.",
            "Types and associated type families for hardware simulation and synthesis - The internals and externals of Kansas Lava.",
            "Structural types for systems of equations - Type refinements for structurally dynamic first-class modular systems of equations."
        ]
    },
    {
        "name": "LISP",
        "year": "2011",
        "info": "Volume 24, 2011",
        "count": 13,
        "papers": [
            "Editorial.",
            "Improving type error messages for generic Java.",
            "Logical approximation for program analysis.",
            "Static consistency checking for Verilog wire interconnects - Using dependent types to check the sanity of Verilog descriptions.",
            "Shortcut fusion rules for the derivation of circular and higher-order programs.",
            "Side-effect localization for lazy, purely functional languages via aspects.",
            "A proof of Moessner's theorem by coinduction.",
            "Path resolution for nested recursive modules.",
            "Continuation-Passing C, compiling threads to events through continuations.",
            "Pruning with improving sequences in lazy functional programs.",
            "Functional un|unparsing.",
            "Type-specialized staged programming with process separation.",
            "Erratum to: Continuation-Passing C, compiling threads to events through continuations."
        ]
    },
    {
        "name": "LISP",
        "year": "2010",
        "info": "Volume 23, 2010",
        "count": 16,
        "papers": [
            "Linearity and iterator types for G\u00f6del's System.",
            "Magic-sets for localised analysis of Java bytecode.",
            "The two variable per inequality abstract domain.",
            "A lean specification for GADTs: system F with first-class equality proofs.",
            "Space-efficient gradual typing.",
            "Hume box calculus: robust system development through software transformation.",
            "Keeping calm in the face of change - Towards optimisation of FRP by reasoning about change.",
            "Editorial.",
            "Context-sensitive analysis without calling-context.",
            "Making \"stricterness\" more relevant.",
            "Generic multiset programming with discrimination-based joins and symbolic Cartesian products.",
            "Mnemonics: type-safe bytecode generation at run time.",
            "A multi-tier semantics for Hop.",
            "A functional approach to generic programming using adaptive traversals.",
            "Trends in Trends in Functional Programming 1999/2000 versus 2007/2008.",
            "More dependent types for distributed arrays."
        ]
    },
    {
        "name": "LISP",
        "year": "2009",
        "info": "Volume 22, 2009",
        "count": 21,
        "papers": [
            "Editorial.",
            "Compilation of extended recursion in call-by-value functional languages.",
            "Expressible sharing for functional circuit description.",
            "Visual Lisp/CLOS programming in OpenMusic.",
            "Editorial.",
            "Directly reflective meta-programming.",
            "A minimalistic look at widening operators.",
            "A principled approach to programming with nested types in Haskell.",
            "Peter J. Landin (1930-2009).",
            "Editorial.",
            "A verified framework for higher-order uncurrying optimizations.",
            "A type-theoretic foundation of delimited continuations.",
            "On typing delimited continuations: three new solutions to the printf problem.",
            "Editorial.",
            "Peter Landin: a computer scientist who inspired a generation.",
            "Personal recollections of Peter Landin: 1987-2009.",
            "The Peter Landin prize.",
            "An introduction to Landin's \"Getting Rid of Labels\".",
            "Getting rid of labels.",
            "Stories about calculations: remembering Peter Landin.",
            "Calculations."
        ]
    },
    {
        "name": "LISP",
        "year": "2008",
        "info": "Volume 21, 2008",
        "count": 18,
        "papers": [
            "Editorial.",
            "Efficient and flexible access control via Jones-optimal logic program specialisation.",
            "Imperative-program transformation by instrumented-interpreter specialization.",
            "Proving operational termination of membership equational programs.",
            "A programmable editor for developing structured documents based on bidirectional transformations.",
            "Program transformations for light-weight CPU accounting and control in the Java virtual machine.",
            "Dynamic slicing of lazy functional programs based on redex trails.",
            "Totally correct logic program transformations via well-founded annotations.",
            "Totally correct logic program transformations via well-founded annotations.",
            "Editorial.",
            "Types and trace effects for object orientation.",
            "An investigation of Jones optimality and BTI-universal specializers.",
            "On the implementation of automatic differentiation tools.",
            "Flattening tuples in an SSA intermediate representation.",
            "Editorial.",
            "Nesting forward-mode AD in a functional framework.",
            "Adapting functional programs to higher order logic.",
            "Flow-sensitive type systems and the ambient calculus."
        ]
    },
    {
        "name": "LISP",
        "year": "2007",
        "info": "Volume 20, 2007",
        "count": 21,
        "papers": [
            "Editorial.",
            "Representing the MSR cryptoprotocol specification language in an extension of rewriting logic with dependent types.",
            "A rho-calculus of explicit constraint application.",
            "A new generic scheme for functional logic programming with constraints.",
            "Symbolic reachability analysis using narrowing and its application to verification of cryptographic protocols.",
            "Semantics and pragmatics of Real-Time Maude.",
            "Editorial.",
            "A call-by-name lambda-calculus machine.",
            "Strongly reducing variants of the Krivine abstract machine.",
            "On the correctness of the Krivine machine.",
            "The next 700 Krivine machines.",
            "Explaining the lazy Krivine machine using explicit substitution and addresses.",
            "Improving the lazy Krivine machine.",
            "The graphical Krivine machine.",
            "State-transition machines for lambda-calculus expressions.",
            "State-transition machines, revisited.",
            "Editorial.",
            "Axioms for control operators in the CPS hierarchy.",
            "A static simulation of dynamic delimited control.",
            "A proof-theoretic foundation of abortive continuations.",
            "Implementation and use of the PLT scheme Web server."
        ]
    },
    {
        "name": "LISP",
        "year": "2006",
        "info": "Volume 19, 2006",
        "count": 16,
        "papers": [
            "Editorial.",
            "Semantics of roundoff error propagation in finite precision calculations.",
            "The octagon abstract domain.",
            "Dynamic state restoration using versioning exceptions.",
            "Polymorphic typed defunctionalization and concretization.",
            "Editorial.",
            "Mechanising lambda-calculus using a classical first order theory of terms with permutations.",
            "Formal compiler construction in a logical framework.",
            "An initial algebra approach to term rewriting systems with variable binders.",
            "Explicit substitutions and higher-order syntax.",
            "About permutation algebras, (pre)sheaves and named sets.",
            "Pseudo-distributive laws and axiomatics for variable binding.",
            "Editorial.",
            "Expressing combinatory reduction systems derivations in the rewriting calculus.",
            "Call-by-push-value: Decomposing call-by-value and call-by-name.",
            "Deriving escape analysis by abstract interpretation."
        ]
    },
    {
        "name": "LISP",
        "year": "2005",
        "info": "Volume 18, 2005",
        "count": 16,
        "papers": [
            "Editorial.",
            "Robert Paige (1947-1999).",
            "Remembrances of Bob Paige.",
            "An Appreciation of Bob Paige.",
            "Transformational Derivation of an Improved Alias Analysis Algorithm.",
            "Least Reflexive Points of Relations.",
            "Relativizations for the Logic-Automata Connection.",
            "Derivation of Efficient Logic Programs by Specialization and Reduction of Nondeterminism.",
            "An NSF Proposal.",
            "Editorial.",
            "Selectors Make Set-Based Analysis Too Hard.",
            "BIT: A Very Compact Scheme System for Microcontrollers.",
            "Fixing Letrec: A Faithful Yet Efficient Implementation of Scheme's Recursive Binding Construct.",
            "Integrating User-Level Threads with Processes in Scsh.",
            "Implementing Metcast in Scheme.",
            "A Variadic Extension of Curry's Fixed-Point Combinator."
        ]
    },
    {
        "name": "LISP",
        "year": "2004",
        "info": "Volume 17, 2004",
        "count": 13,
        "papers": [
            "Editorial: Theme Issue on Partial Evaluation and Semantics-Based Program Manipulation.",
            "Cost-Augmented Partial Evaluation of Functional Logic Programs.",
            "Specialization Scenarios: A Pragmatic Approach to Declaring Program Specialization.",
            "Program Adaptation via Output-Constraint Specialization.",
            "Using Circular Programs to Deforest in Accumulating Parameters.",
            "Editorial.",
            "Compiler Optimization Correctness by Temporal Logic.",
            "Implementing Coloured Petri Nets Using a Functional Programming Language.",
            "A Retrospective on Region-Based Memory Management.",
            "Editorial.",
            "Continuations and Web Servers.",
            "Algebraic Power Analysis by Abstract Interpretation.",
            "Bisimilarity for the Region Calculus."
        ]
    },
    {
        "name": "LISP",
        "year": "2003",
        "info": "Volume 16, 2003",
        "count": 12,
        "papers": [
            "Editorial: Special Issue Dedicated to Bob Paige.",
            "Research Retrospective.",
            "Universal Regular Path Queries.",
            "Dynamic Programming via Static Incrementalization.",
            "Program Synthesis from Formal Requirements Specifications Using APTS.",
            "Computational Divided Differencing and Divided-Difference Arithmetics.",
            "Formal Foundations of Operational Semantics.",
            "Comparing Parallel Functional Languages: Programming and Performance.",
            "Strong Normalization from Weak Normalization by Translation into the Lambda-I-Calculus.",
            "Non-Standard Semantics for Program Slicing.",
            "Path Dependent Analysis of Logic Programs.",
            "Automatic Generation of Staged Geometric Predicates."
        ]
    },
    {
        "name": "LISP",
        "year": "2002",
        "info": "Volume 15, 2002",
        "count": 14,
        "papers": [
            "Editorial.",
            "Formalization and Analysis of Class Loading in Java.",
            "A Formalised Proof of the Soundness and Completeness of a Simply Typed Lambda-Calculus with Explicit Substitutions.",
            "Dependent Types for Program Termination Verification.",
            "Editorial.",
            "Comparing Control Constructs by Double-Barrelled CPS.",
            "Optimizing Nested Loops Using Local CPS Conversion.",
            "Linear Continuation-Passing.",
            "Secure Information Flow via Linear Continuations.",
            "Axioms for Recursion in Call-by-Value.",
            "Editorial.",
            "A Generalization of Short-Cut Fusion and its Correctness Proof.",
            "Specification Diagrams for Actor Systems.",
            "Functional Geometry."
        ]
    },
    {
        "name": "LISP",
        "year": "2001",
        "info": "Volume 14, 2001",
        "count": 14,
        "papers": [
            "Editorial.",
            "A Generic Reification Technique for Object-Oriented Reflective Languages.",
            "Functional Differentiation of Computer Programs.",
            "A Per Model of Secure Information Flow in Sequential Programs.",
            "Editorial.",
            "A Hybrid Approach to Online and Offline Partial Evaluation.",
            "Regular Tree Languages as an Abstract Domain in Program Specialisation.",
            "The Second Futamura Projection for Type-Directed Partial Evaluation.",
            "Type-Based Useless-Variable Elimination.",
            "Calculating Sized Types.",
            "Editorial.",
            "A Network Protocol Stack in Standard ML.",
            "Tree Rerooting in Distributed Garbage Collection: Implementation and Performance Evaluation.",
            "From Syntactic Theories to Interpreters: Automating the Proof of Unique Decomposition."
        ]
    },
    {
        "name": "LISP",
        "year": "2000",
        "info": "Volume 13, 2000",
        "count": 28,
        "papers": [
            "Editorial.",
            "A Foreword to 'Fundamental Concepts in Programming Languages'.",
            "Fundamental Concepts in Programming Languages.",
            "Christopher Strachey - Understanding Programming Languages.",
            "From Macrogeneration to Syntactic Abstraction.",
            "Christopher Strachey: Recollections of His Influence.",
            "Cambridge and CPL in the 1960s.",
            "A Hard Act to Follow.",
            "Christopher Strachey: A Personal Recollection.",
            "My Years with Strachey.",
            "From Language Concepts to Implementation Concepts.",
            "Reminiscences of Christopher Strachey.",
            "Christopher Strachey and the Cambridge CPL Compiler.",
            "Induction, Domains, Calculi: Strachey's Contributions to Programming-Language Engineering.",
            "Some Reflections on Strachey and His Work.",
            "Christopher Strachey and Fundamental Concepts.",
            "Abstract Models of Storage.",
            "Continuations Revisited.",
            "Continuations: A Mathematical Semantics for Handling Full Jumps.",
            "Editorial.",
            "Static and Dynamic Program Compilation by Interpreter Specialization.",
            "Higher-Order UnCurrying.",
            "Linear-Time Self-Interpretation of the Pure Lambda Calculus.",
            "A Polymorphic Environment Calculus and its Type-Inference Algorithm.",
            "Editorial.",
            "Efficiency by Incrementalization: An Introduction.",
            "Slicing Software for Model Construction.",
            "Glossary for Partial Evaluation and Related Topics."
        ]
    },
    {
        "name": "LISP",
        "year": "1999",
        "info": "Volume 12, 1999",
        "count": 19,
        "papers": [
            "Editorial.",
            "Implementation Strategies for First-Class Continuations.",
            "Using a Continuation Twice and Its Implications for the Expressive Power of Call/CC.",
            "Unchecked Exceptions Can Be Strictly More Powerful Than Call/CC.",
            "An Early Use of Continuations and Partial Evaluation for Compiling Rules Written in First-Order Predicate Calculus.",
            "Introduction.",
            "CPS Translations and Applications: The Cube and Beyond.",
            "Computing with Contexts.",
            "Partial Evaluation of the Euclidean Algorithm, Revisited.",
            "Editorial.",
            "Growing a Language.",
            "Optimal Representations of Polymorphic Types with Subtyping.",
            "Continuation-Based Multiprocessing Revisited.",
            "Continuation-Based Multiprocessing.",
            "Editorial.",
            "Combining Program and Data Specialization.",
            "Certifying Compilation and Run-Time Code Generation.",
            "Partial Evaluation of Computation Process, Revisited.",
            "Partial Evaluation of Computation Process - An Approach to a Compiler-Compiler."
        ]
    },
    {
        "name": "LISP",
        "year": "1998",
        "info": "Volume 11, 1998",
        "count": 12,
        "papers": [
            "Revised Report on the Algorithmic Language Scheme.",
            "An Introduction to Landin's \"A Generalization of Jumps and Labels\".",
            "A Generalization of Jumps and Labels.",
            "Retraction Approach to CPS Transform.",
            "The p-Calculus in Direct Style.",
            "Safe-for-Space Threads in Standard ML.",
            "A Syntactic Theory of Dynamic Binding.",
            "Composable Semantic Models for Actor Theories.",
            "Definitional Interpreters Revisited.",
            "Definitional Interpreters for Higher-Order Programming Languages.",
            "The First Report on Scheme Revisited.",
            "Scheme: A Interpreter for Extended Lambda Calculus."
        ]
    },
    {
        "name": "LISP",
        "year": "1997",
        "info": "Volume 10, 1997",
        "count": 10,
        "papers": [
            "UCL+P - Defining and Implementing Persistent Common Lisp.",
            "Adding Support for Persistence to CLOS via Its Metaobject Protocol.",
            "An Unboxed Operational Semantics for ML Polymorphism.",
            "Partial Evaluation of the Euclidian Algorithm.",
            "An Automatic Program Generator for Multi-Level Specialization.",
            "Research Demonstration of a Hardware Reference-Counting Heap.",
            "The Theory of Fexprs is Trivial.",
            "Visualizing Evaluation in Scheme.",
            "Threads Yield Continuations.",
            "Trace-Based Abstract Interpretation of Operational Semantics."
        ]
    },
    {
        "name": "LISP",
        "year": "1996",
        "info": "Volume 9, 1996",
        "count": 10,
        "papers": [
            "Global State Considered Unnecessary: An Introduction to Object-Based Semantics.",
            "Categorical Models for Local Names.",
            "Strictness Analysis in the Imperative Lambda Calculus.",
            "A Semantics of Introspection in a Reflective Prototype-Based Language.",
            "A Simple Reflective Interpreter.",
            "Duplication and Partial Evaluation For a Better Understanding of Reflective Languages.",
            "Reflection and Time-Dependent Computing: Experiences with the R2 Architecture.",
            "A Higher-Order Removal Method.",
            "Measuring the Cost of Storage Management.",
            "Reliable Interactive Programming with Modules."
        ]
    },
    {
        "name": "LISP",
        "year": "1995",
        "info": "Volume 8, 1995",
        "count": 12,
        "papers": [
            "VLISP: A Verified Implementation of Scheme.",
            "The VLISP Verified Scheme System.",
            "The VLISP Verified PreScheme Compiler.",
            "Binding-Time Analysis for Standard ML.",
            "The Essence of Eta-Expansion in Partial Evaluation.",
            "Dictionary-Free Overloading by Partial Evaluation.",
            "PERs from Projections for Binding-Time Analysis.",
            "Type Theory and Projections for Static Analysis.",
            "Special Issue on State in Programming Languages - Introduction.",
            "State in Haskell.",
            "Simple Imperative Polymorphism.",
            "An Interpretation of Typed OOP in a Language with State."
        ]
    },
    {
        "name": "LISP",
        "year": "1994",
        "info": "Volume 7, 1994",
        "count": 14,
        "papers": [
            "Recursion from Iteration.",
            "Monads and Composable Continuations.",
            "Call-by-Need and Continuation-Passing Style.",
            "Subcontinuations.",
            "Continuation-Based Control in the Implementation of Parallel Logic Programs.",
            "Distributed Data Structures and Algorithms for Gr\u00f6bner Basis Computation.",
            "A Concurrent Abstract Interpreter.",
            "CONSAT: A Parallel Constraint Satisfaction System.",
            "An Application of an OR-Parallel Prolog Systemto Phylogenetic Analysis.",
            "Using Multilisp for Solving Constraint Satisfaction Problems: An Application to Nucleic Acid 3D Structure Determination.",
            "The Grasper-CL Graph Management System.",
            "TS/Scheme: Distributed Data Structures in Lisp.",
            "A Tractable Scheme Implementation.",
            "Loop Headers in Lambda-Calculus or CPS."
        ]
    },
    {
        "name": "LISP",
        "year": "1993",
        "info": "Volume 6, 1993",
        "count": 12,
        "papers": [
            "An Overview of EULISP.",
            "EuLisp in Education.",
            "Balancing the EULISP Metaobject Protocol.",
            "Applications of Telos.",
            "A Practical Approach to Type Inference for EuLisp.",
            "EULISP Threads: A Concurrency Toolbox.",
            "Plurals: A SIMD Extension to EuLisp.",
            "The Discoveries of Continuations.",
            "The Next 700 Formal Language Descriptions.",
            "Lambda-Calculus Schemata.",
            "Reasoning about Programs in Continuation-Passing Style.",
            "Polymorphic Type Assignment and CPS Conversion."
        ]
    },
    {
        "name": "LISP",
        "year": "1992",
        "info": "Volume 5, 1992",
        "count": 13,
        "papers": [
            "Mayfly: A General-Purpose, Scalable, Parallel Processing Architecture.",
            "Parallel Logic Programs on the Mayfly.",
            "Implementing Concurrent Scheme for the Mayfly Distributed Parallel Processing System.",
            "Concurrent Scheme Reference.",
            "DPOS: A Metalanguage and Programming Environment for Parallel Processing.",
            "A \"Functional + Logic\" Programming Language in Interpretation-Compilation Implementation.",
            "A Decision Procedure for Common Lisp's SUBTYPEP Predicate.",
            "Callee-Save Registers in Continuation-Passing Style.",
            "Constraint Hierarchies.",
            "A Debugging Environment for Lazy Functional Languages.",
            "Syntactic Abstraction in Scheme.",
            "Partial Evaluation in Parallel.",
            "First-Class Extents."
        ]
    },
    {
        "name": "LISP",
        "year": "1991",
        "info": "Volume 4, 1991/1992",
        "count": 14,
        "papers": [
            "A Logical Approach to Program Analysis.",
            "Compiling Lisp Programs for Parallel Execution.",
            "Free Variables and First-Class Environments.",
            "Designing a Browser to Support Multimethods and Method Combination.",
            "Endpaper: FRPOLY: A Benchmark Revisited.",
            "Book Review of A \"Kinder, Gentler LISP?\" COMMON LISP: A Gentle Introduction to Symbolic Computation\" by David S. Touretzky.",
            "SELF: The Power of Simplicity.",
            "Parents are Shared Parts of Objects: Inheritance and Encapsulation in SELF.",
            "Organizing Programs Without Classes.",
            "An Efficient Implementation of SELF, a Dynamically-Typed Object-Oriented Language Based on Prototypes.",
            "Iterative Type Analysis and Extended Message Splitting: Optimizing Dynamically-Typed Object-Oriented Programs.",
            "An Approach to the DIN Kernel Lisp Definition.",
            "Critique of DIN Kernel Lisp Definition Version 1.2.",
            "Answer to Baker's Remarks of July 1991 on Version 1.0."
        ]
    },
    {
        "name": "LISP",
        "year": "1990",
        "info": "Volume 3, 1990",
        "count": 15,
        "papers": [
            "Direct Function Calls in Lisp.",
            "Relative Specification and Transformational Re-Use of Functional Programs.",
            "Moped (A Portable Debugger).",
            "Control Delimiters and Their Hierarchies.",
            "Book Review of Common Lisp: the Reference Franz, Inc.",
            "A Metacircular Evaluator for a Logical Extension of Scheme.",
            "Mark Scan Garbage Collection on a Distributed Architecture.",
            "Endpaper: Performance of Two Common Lisp Programs on Several Systems.",
            "A Preprocessor Based Implementation of Common Lisp.",
            "A New Approach to Procedures with Variable Arity.",
            "LogScheme: Integrating Logic Programming into Scheme.",
            "Combinator Evaluation of Functional Programs with Logical Variables.",
            "Book Review of Common Lisp: A Tutorial, by Wendy L. Milner.",
            "A Runtime System.",
            "Conjunction-Type Standard ML Polymorphism."
        ]
    },
    {
        "name": "LISP",
        "year": "1989",
        "info": "Volume 2, 1989",
        "count": 7,
        "papers": [
            "Mix: A Self-Applicable Partial Evaluator for Experiments in Compiler Generation.",
            "Integrating Logic and Functional Programming.",
            "Arrays in Pure Functional Programming Languages.",
            "An Algebraic Specification of Method Combination for the Common Lisp Object System.",
            "Runtime Tags Aren't Necessary.",
            "Book Review of Object-Oriented Programming in Common LISP: A Programmer's Guide to CLOS, by Sonya E. Keene.",
            "The Interprocedural Analysis and Automatic Parallelization of Scheme Programs."
        ]
    },
    {
        "name": "LISP",
        "year": "1988",
        "info": "Volume 1, 1988/1989",
        "count": 12,
        "papers": [
            "The Mystery of the Tower Revealed: A Nonreflective Description of the Reflective Tower.",
            "Oaklisp: An Object-Oriented Dialect of Scheme.",
            "Expansion-Passing Style: A General Macro Mechanism.",
            "Book Review of Lisp Lore: A Guide to Programming the Lisp Machine, 2nd ed.",
            "Endpaper: Technical Issues of Separation in Function Cells and Value Cells.",
            "Debugging in Applicative Languages.",
            "Code Optimizations for Lazy Evaluation.",
            "LISP as a Rapid Prototyping Environment: The Chinese Tutor.",
            "Object-Oriented Programming with Class Dictionaries.",
            "Overview: The Common Lisp Object System.",
            "Common Lisp Object System Specification: 1. Programmer Interface Concepts.",
            "Common Lisp Object System Specification: 2. Functions in the Programmer Interface."
        ]
    }
]